../applications/pw-tracks/views/
VIEWPATH ../applications/pw-tracks/ruby_views/calendar/
../applications/pw-tracks/ruby_views/calendar/show.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/_context.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/_context_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/_context_listing.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/_context_state_group.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/_new_context_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/contexts/
../applications/pw-tracks/ruby_views/contexts/show.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/csv_import.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/csv_map.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/import.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/index.de.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/index.en.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/index.es.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/yaml_export.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/yaml_form.de.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/yaml_form.en.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/data/
../applications/pw-tracks/ruby_views/data/yaml_import.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/feedlist/
../applications/pw-tracks/ruby_views/feedlist/_feed_for_context.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/feedlist/
../applications/pw-tracks/ruby_views/feedlist/_feed_for_project.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/feedlist/
../applications/pw-tracks/ruby_views/feedlist/_legend.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/feedlist/
../applications/pw-tracks/ruby_views/feedlist/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/integrations/
../applications/pw-tracks/ruby_views/integrations/index.de.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/integrations/
../applications/pw-tracks/ruby_views/integrations/index.en.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/integrations/
../applications/pw-tracks/ruby_views/integrations/index.nl.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/integrations/
../applications/pw-tracks/ruby_views/integrations/rest_api.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/layouts/
../applications/pw-tracks/ruby_views/layouts/application.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/layouts/
../applications/pw-tracks/ruby_views/layouts/login.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/login/
../applications/pw-tracks/ruby_views/login/login.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/_note.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/_note_details.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/_note_edit_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/_notes_summary.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/notes/
../applications/pw-tracks/ruby_views/notes/show.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/_authentication.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/_date_and_time.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/_help.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/_profile.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/_tracks_behavior.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/preferences/
../applications/pw-tracks/ruby_views/preferences/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_new_project_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project_listing.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project_settings.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project_settings_container.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/_project_state_group.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/done.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/review.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/projects/
../applications/pw-tracks/ruby_views/projects/show.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/_edit_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/_recurring_todo.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/_recurring_todo_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/done.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/recurring_todos/
../applications/pw-tracks/ruby_views/recurring_todos/new.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/search/
../applications/pw-tracks/ruby_views/search/_show_results_collection.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/search/
../applications/pw-tracks/ruby_views/search/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/search/
../applications/pw-tracks/ruby_views/search/results.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/shared/
../applications/pw-tracks/ruby_views/shared/_add_new_item_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/shared/
../applications/pw-tracks/ruby_views/shared/_flash.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/shared/
../applications/pw-tracks/ruby_views/shared/_footer.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/shared/
../applications/pw-tracks/ruby_views/shared/_navbar.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/sidebar/
../applications/pw-tracks/ruby_views/sidebar/sidebar.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_actions.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_chart.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_contexts.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_contexts_list.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_null_list_item.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_projects.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_projects_list.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_tags.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_time_to_complete.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/_totals.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_completion_time_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_day_of_week_30days_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_day_of_week_all_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_done_last12months_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_done_last30days_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_done_last_years.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_done_lastyears_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_open_per_week_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_running_time_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_time_of_day_30days_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_time_of_day_all_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/actions_visible_running_time_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/done.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/pie_chart_data.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/stats/
../applications/pw-tracks/ruby_views/stats/show_selection_from_chart.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_collection.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_edit_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_new_multi_todo_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_new_todo_form.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_successor.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/_todo.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/all_done.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/done.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/list_deferred.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/todos/
../applications/pw-tracks/ruby_views/todos/tag.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/_update_password.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/change_auth_type.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/change_password.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/index.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/new.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/nosignup.de.html.erb
VIEWPATH ../applications/pw-tracks/ruby_views/users/
../applications/pw-tracks/ruby_views/users/nosignup.en.html.erb
../applications/pw-tracks/controllers/
LENGTH: 344
1 require_dependency "login_system"  ["../applications/pw-tracks/controllers/application_controller.rb", 1]
2 require_dependency "tracks/source_view"  ["../applications/pw-tracks/controllers/application_controller.rb", 2]
3   ["../applications/pw-tracks/controllers/application_controller.rb", 3]
4 class ApplicationController < ActionController::Base  ["../applications/pw-tracks/controllers/application_controller.rb", 4]
5 # Prevent CSRF attacks by raising an exception.  ["../applications/pw-tracks/controllers/application_controller.rb", 5]
6 # For APIs, you may want to use :null_session instead.  ["../applications/pw-tracks/controllers/application_controller.rb", 6]
7 protect_from_forgery with: :exception  ["../applications/pw-tracks/controllers/application_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/application_controller.rb", 8]
9 include LoginSystem  ["../applications/pw-tracks/controllers/application_controller.rb", 9]
10 helper_method :current_user, :prefs, :format_date  ["../applications/pw-tracks/controllers/application_controller.rb", 10]
11   ["../applications/pw-tracks/controllers/application_controller.rb", 11]
12 layout proc{ |controller| controller.mobile? ? "mobile" : "application" }  ["../applications/pw-tracks/controllers/application_controller.rb", 12]
13 # exempt_from_layout /\.js\.erb$/  ["../applications/pw-tracks/controllers/application_controller.rb", 13]
14   ["../applications/pw-tracks/controllers/application_controller.rb", 14]
15 before_filter :set_session_expiration  ["../applications/pw-tracks/controllers/application_controller.rb", 15]
16 before_filter :set_time_zone  ["../applications/pw-tracks/controllers/application_controller.rb", 16]
17 before_filter :set_zindex_counter  ["../applications/pw-tracks/controllers/application_controller.rb", 17]
18 before_filter :set_locale  ["../applications/pw-tracks/controllers/application_controller.rb", 18]
19 append_before_filter :set_group_view_by  ["../applications/pw-tracks/controllers/application_controller.rb", 19]
20 prepend_before_filter :login_required  ["../applications/pw-tracks/controllers/application_controller.rb", 20]
21 prepend_before_filter :enable_mobile_content_negotiation  ["../applications/pw-tracks/controllers/application_controller.rb", 21]
22   ["../applications/pw-tracks/controllers/application_controller.rb", 22]
23 def set_locale  ["../applications/pw-tracks/controllers/application_controller.rb", 23]
24 locale = params[:locale] # specifying a locale in the request takes precedence  ["../applications/pw-tracks/controllers/application_controller.rb", 24]
25 locale = locale || prefs.locale unless current_user.nil? # otherwise, the locale of the currently logged in user takes over  ["../applications/pw-tracks/controllers/application_controller.rb", 25]
26 locale = locale || request.env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}/).first if request.env['HTTP_ACCEPT_LANGUAGE']  ["../applications/pw-tracks/controllers/application_controller.rb", 26]
27   ["../applications/pw-tracks/controllers/application_controller.rb", 27]
28 if locale && I18n::available_locales.map(&:to_s).include?(locale.to_s)  ["../applications/pw-tracks/controllers/application_controller.rb", 28]
29 I18n.locale = locale  ["../applications/pw-tracks/controllers/application_controller.rb", 29]
30 else  ["../applications/pw-tracks/controllers/application_controller.rb", 30]
31 I18n.locale = I18n.default_locale  ["../applications/pw-tracks/controllers/application_controller.rb", 31]
32 end  ["../applications/pw-tracks/controllers/application_controller.rb", 32]
33 end  ["../applications/pw-tracks/controllers/application_controller.rb", 33]
34   ["../applications/pw-tracks/controllers/application_controller.rb", 34]
35 def set_session_expiration  ["../applications/pw-tracks/controllers/application_controller.rb", 35]
36 # http://wiki.rubyonrails.com/rails/show/HowtoChangeSessionOptions  ["../applications/pw-tracks/controllers/application_controller.rb", 36]
37 # If the method is called by the feed controller (which we don't have  ["../applications/pw-tracks/controllers/application_controller.rb", 37]
38 # under session control) or if we checked the box to keep logged in on  ["../applications/pw-tracks/controllers/application_controller.rb", 38]
39 # login don't set the session expiry time.  ["../applications/pw-tracks/controllers/application_controller.rb", 39]
40 return if session.nil? || self.controller_name == 'feed' || session['noexpiry'] == "on"  ["../applications/pw-tracks/controllers/application_controller.rb", 40]
41   ["../applications/pw-tracks/controllers/application_controller.rb", 41]
42 # Get expiry time (allow ten seconds window for the case where we have  ["../applications/pw-tracks/controllers/application_controller.rb", 42]
43 # none)  ["../applications/pw-tracks/controllers/application_controller.rb", 43]
44 expiry_time = session['expiry_time'] || Time.now + 10  ["../applications/pw-tracks/controllers/application_controller.rb", 44]
45 if expiry_time < Time.now  ["../applications/pw-tracks/controllers/application_controller.rb", 45]
46 # Too late, matey...  bang goes your session!  ["../applications/pw-tracks/controllers/application_controller.rb", 46]
47 reset_session  ["../applications/pw-tracks/controllers/application_controller.rb", 47]
48 else  ["../applications/pw-tracks/controllers/application_controller.rb", 48]
49 # Okay, you get another hour  ["../applications/pw-tracks/controllers/application_controller.rb", 49]
50 session['expiry_time'] = Time.now + (60*60)  ["../applications/pw-tracks/controllers/application_controller.rb", 50]
51 end  ["../applications/pw-tracks/controllers/application_controller.rb", 51]
52 end  ["../applications/pw-tracks/controllers/application_controller.rb", 52]
53   ["../applications/pw-tracks/controllers/application_controller.rb", 53]
54 def render_failure message, status = 404  ["../applications/pw-tracks/controllers/application_controller.rb", 54]
55 render :text => message, :status => status  ["../applications/pw-tracks/controllers/application_controller.rb", 55]
56 end  ["../applications/pw-tracks/controllers/application_controller.rb", 56]
57   ["../applications/pw-tracks/controllers/application_controller.rb", 57]
58 # Returns a count of next actions in the given context or project The result  ["../applications/pw-tracks/controllers/application_controller.rb", 58]
59 # is count and a string descriptor, correctly pluralised if there are no  ["../applications/pw-tracks/controllers/application_controller.rb", 59]
60 # actions or multiple actions  ["../applications/pw-tracks/controllers/application_controller.rb", 60]
61 #  ["../applications/pw-tracks/controllers/application_controller.rb", 61]
62 def count_undone_todos_phrase(todos_parent)  ["../applications/pw-tracks/controllers/application_controller.rb", 62]
63 count = count_undone_todos(todos_parent)  ["../applications/pw-tracks/controllers/application_controller.rb", 63]
64 deferred_count = count_deferred_todos(todos_parent)  ["../applications/pw-tracks/controllers/application_controller.rb", 64]
65 if count == 0 && deferred_count > 0  ["../applications/pw-tracks/controllers/application_controller.rb", 65]
66 word = "#{I18n.t('common.deferred')}&nbsp;#{I18n.t('common.actions_midsentence', :count => deferred_count)}"  ["../applications/pw-tracks/controllers/application_controller.rb", 66]
67 return "#{deferred_count.to_s}&nbsp;#{word}".html_safe  ["../applications/pw-tracks/controllers/application_controller.rb", 67]
68 else  ["../applications/pw-tracks/controllers/application_controller.rb", 68]
69 word = I18n.t('common.actions_midsentence', :count => count)  ["../applications/pw-tracks/controllers/application_controller.rb", 69]
70 return "#{count}&nbsp;#{word}".html_safe  ["../applications/pw-tracks/controllers/application_controller.rb", 70]
71 end  ["../applications/pw-tracks/controllers/application_controller.rb", 71]
72 end  ["../applications/pw-tracks/controllers/application_controller.rb", 72]
73   ["../applications/pw-tracks/controllers/application_controller.rb", 73]
74 def count_undone_todos(todos_parent)  ["../applications/pw-tracks/controllers/application_controller.rb", 74]
75 if todos_parent.nil?  ["../applications/pw-tracks/controllers/application_controller.rb", 75]
76 count = 0  ["../applications/pw-tracks/controllers/application_controller.rb", 76]
77 elsif (todos_parent.is_a?(Project) && todos_parent.hidden?)  ["../applications/pw-tracks/controllers/application_controller.rb", 77]
78 count = @project_hidden_todo_counts[todos_parent.id]  ["../applications/pw-tracks/controllers/application_controller.rb", 78]
79 elsif (todos_parent.is_a?(Context) && todos_parent.hidden?)  ["../applications/pw-tracks/controllers/application_controller.rb", 79]
80 count = @context_hidden_todo_counts[todos_parent.id]  ["../applications/pw-tracks/controllers/application_controller.rb", 80]
81 else  ["../applications/pw-tracks/controllers/application_controller.rb", 81]
82 count = eval "@#{todos_parent.class.to_s.downcase}_not_done_counts[#{todos_parent.id}]"  ["../applications/pw-tracks/controllers/application_controller.rb", 82]
83 end  ["../applications/pw-tracks/controllers/application_controller.rb", 83]
84 count || 0  ["../applications/pw-tracks/controllers/application_controller.rb", 84]
85 end  ["../applications/pw-tracks/controllers/application_controller.rb", 85]
86   ["../applications/pw-tracks/controllers/application_controller.rb", 86]
87 def count_deferred_todos(todos_parent)  ["../applications/pw-tracks/controllers/application_controller.rb", 87]
88 return todos_parent.nil? ? 0 : eval("@#{todos_parent.class.to_s.downcase}_deferred_counts[#{todos_parent.id}]") || 0  ["../applications/pw-tracks/controllers/application_controller.rb", 88]
89 end  ["../applications/pw-tracks/controllers/application_controller.rb", 89]
90   ["../applications/pw-tracks/controllers/application_controller.rb", 90]
91 # Convert a date object to the format specified in the user's preferences in  ["../applications/pw-tracks/controllers/application_controller.rb", 91]
92 # config/settings.yml  ["../applications/pw-tracks/controllers/application_controller.rb", 92]
93 #  ["../applications/pw-tracks/controllers/application_controller.rb", 93]
94 def format_date(date)  ["../applications/pw-tracks/controllers/application_controller.rb", 94]
95 return prefs.format_date(date)  ["../applications/pw-tracks/controllers/application_controller.rb", 95]
96 end  ["../applications/pw-tracks/controllers/application_controller.rb", 96]
97   ["../applications/pw-tracks/controllers/application_controller.rb", 97]
98 def for_autocomplete(coll, substr)  ["../applications/pw-tracks/controllers/application_controller.rb", 98]
99 if substr # protect agains empty request  ["../applications/pw-tracks/controllers/application_controller.rb", 99]
100 filtered = coll.find_all{|item| item.name.downcase.include? substr.downcase}  ["../applications/pw-tracks/controllers/application_controller.rb", 100]
101 json_elems = Array[*filtered.map{ |e| {:id => e.id.to_s, :value => e.name} }].to_json  ["../applications/pw-tracks/controllers/application_controller.rb", 101]
102 return json_elems  ["../applications/pw-tracks/controllers/application_controller.rb", 102]
103 else  ["../applications/pw-tracks/controllers/application_controller.rb", 103]
104 return ""  ["../applications/pw-tracks/controllers/application_controller.rb", 104]
105 end  ["../applications/pw-tracks/controllers/application_controller.rb", 105]
106 end  ["../applications/pw-tracks/controllers/application_controller.rb", 106]
107   ["../applications/pw-tracks/controllers/application_controller.rb", 107]
108 def format_dependencies_as_json_for_auto_complete(entries)  ["../applications/pw-tracks/controllers/application_controller.rb", 108]
109 json_elems = Array[*entries.map{ |e| {:value => e.id.to_s, :label => e.specification} }].to_json  ["../applications/pw-tracks/controllers/application_controller.rb", 109]
110 return json_elems  ["../applications/pw-tracks/controllers/application_controller.rb", 110]
111 end  ["../applications/pw-tracks/controllers/application_controller.rb", 111]
112   ["../applications/pw-tracks/controllers/application_controller.rb", 112]
113 # Here's the concept behind this "mobile content negotiation" hack: In  ["../applications/pw-tracks/controllers/application_controller.rb", 113]
114 # addition to the main, AJAXy Web UI, Tracks has a lightweight low-feature  ["../applications/pw-tracks/controllers/application_controller.rb", 114]
115 # 'mobile' version designed to be suitable for use from a phone or PDA. It  ["../applications/pw-tracks/controllers/application_controller.rb", 115]
116 # makes some sense that the pages of that mobile version are simply alternate  ["../applications/pw-tracks/controllers/application_controller.rb", 116]
117 # representations of the same Todo resources. The implementation goal was to  ["../applications/pw-tracks/controllers/application_controller.rb", 117]
118 # treat mobile as another format and be able to use respond_to to render both  ["../applications/pw-tracks/controllers/application_controller.rb", 118]
119 # versions. Unfortunately, I ran into a lot of trouble simply registering a  ["../applications/pw-tracks/controllers/application_controller.rb", 119]
120 # new mime type 'text/html' with format :m because :html already is linked to  ["../applications/pw-tracks/controllers/application_controller.rb", 120]
121 # that mime type and the new registration was forcing all html requests to be  ["../applications/pw-tracks/controllers/application_controller.rb", 121]
122 # rendered in the mobile view. The before_filter and after_filter hackery  ["../applications/pw-tracks/controllers/application_controller.rb", 122]
123 # below accomplishs that implementation goal by using a 'fake' mime type  ["../applications/pw-tracks/controllers/application_controller.rb", 123]
124 # during the processing and then setting it to 'text/html' in an  ["../applications/pw-tracks/controllers/application_controller.rb", 124]
125 # 'after_filter' -LKM 2007-04-01  ["../applications/pw-tracks/controllers/application_controller.rb", 125]
126 def mobile?  ["../applications/pw-tracks/controllers/application_controller.rb", 126]
127 return params[:format] == 'm'  ["../applications/pw-tracks/controllers/application_controller.rb", 127]
128 end  ["../applications/pw-tracks/controllers/application_controller.rb", 128]
129   ["../applications/pw-tracks/controllers/application_controller.rb", 129]
130 def enable_mobile_content_negotiation  ["../applications/pw-tracks/controllers/application_controller.rb", 130]
131 if mobile?  ["../applications/pw-tracks/controllers/application_controller.rb", 131]
132 request.format = :m  ["../applications/pw-tracks/controllers/application_controller.rb", 132]
133 end  ["../applications/pw-tracks/controllers/application_controller.rb", 133]
134 end  ["../applications/pw-tracks/controllers/application_controller.rb", 134]
135   ["../applications/pw-tracks/controllers/application_controller.rb", 135]
136 def handle_unverified_request  ["../applications/pw-tracks/controllers/application_controller.rb", 136]
137 unless request.format=="application/xml"  ["../applications/pw-tracks/controllers/application_controller.rb", 137]
138 super # handle xml http auth via our own login code  ["../applications/pw-tracks/controllers/application_controller.rb", 138]
139 end  ["../applications/pw-tracks/controllers/application_controller.rb", 139]
140 end  ["../applications/pw-tracks/controllers/application_controller.rb", 140]
141   ["../applications/pw-tracks/controllers/application_controller.rb", 141]
142 def sanitize(arg)  ["../applications/pw-tracks/controllers/application_controller.rb", 142]
143 ActionController::Base.helpers.sanitize(arg)  ["../applications/pw-tracks/controllers/application_controller.rb", 143]
144 end  ["../applications/pw-tracks/controllers/application_controller.rb", 144]
145   ["../applications/pw-tracks/controllers/application_controller.rb", 145]
146 protected  ["../applications/pw-tracks/controllers/application_controller.rb", 146]
147   ["../applications/pw-tracks/controllers/application_controller.rb", 147]
148 def admin_login_required  ["../applications/pw-tracks/controllers/application_controller.rb", 148]
149 unless User.find(session['user_id']).is_admin  ["../applications/pw-tracks/controllers/application_controller.rb", 149]
150 render :text => t('errors.user_unauthorized'), :status => 401  ["../applications/pw-tracks/controllers/application_controller.rb", 150]
151 return false  ["../applications/pw-tracks/controllers/application_controller.rb", 151]
152 end  ["../applications/pw-tracks/controllers/application_controller.rb", 152]
153 end  ["../applications/pw-tracks/controllers/application_controller.rb", 153]
154   ["../applications/pw-tracks/controllers/application_controller.rb", 154]
155 def redirect_back_or_home  ["../applications/pw-tracks/controllers/application_controller.rb", 155]
156 respond_to do |format|  ["../applications/pw-tracks/controllers/application_controller.rb", 156]
157 format.html { redirect_back_or_default root_url }  ["../applications/pw-tracks/controllers/application_controller.rb", 157]
158 format.m { redirect_back_or_default mobile_url }  ["../applications/pw-tracks/controllers/application_controller.rb", 158]
159 end  ["../applications/pw-tracks/controllers/application_controller.rb", 159]
160 end  ["../applications/pw-tracks/controllers/application_controller.rb", 160]
161   ["../applications/pw-tracks/controllers/application_controller.rb", 161]
162 def boolean_param(param_name)  ["../applications/pw-tracks/controllers/application_controller.rb", 162]
163 return false if param_name.blank?  ["../applications/pw-tracks/controllers/application_controller.rb", 163]
164 s = params[param_name]  ["../applications/pw-tracks/controllers/application_controller.rb", 164]
165 return false if s.blank? || s == false || s =~ /^false$/i  ["../applications/pw-tracks/controllers/application_controller.rb", 165]
166 return true if s == true || s =~ /^true$/i  ["../applications/pw-tracks/controllers/application_controller.rb", 166]
167 raise ArgumentError.new("invalid value for Boolean: \"#{s}\"")  ["../applications/pw-tracks/controllers/application_controller.rb", 167]
168 end  ["../applications/pw-tracks/controllers/application_controller.rb", 168]
169   ["../applications/pw-tracks/controllers/application_controller.rb", 169]
170 def self.openid_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 170]
171 Tracks::Config.openid_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 171]
172 end  ["../applications/pw-tracks/controllers/application_controller.rb", 172]
173   ["../applications/pw-tracks/controllers/application_controller.rb", 173]
174 def openid_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 174]
175 self.class.openid_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 175]
176 end  ["../applications/pw-tracks/controllers/application_controller.rb", 176]
177   ["../applications/pw-tracks/controllers/application_controller.rb", 177]
178 def self.cas_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 178]
179 Tracks::Config.cas_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 179]
180 end  ["../applications/pw-tracks/controllers/application_controller.rb", 180]
181   ["../applications/pw-tracks/controllers/application_controller.rb", 181]
182 def cas_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 182]
183 self.class.cas_enabled?  ["../applications/pw-tracks/controllers/application_controller.rb", 183]
184 end  ["../applications/pw-tracks/controllers/application_controller.rb", 184]
185   ["../applications/pw-tracks/controllers/application_controller.rb", 185]
186 def self.prefered_auth?  ["../applications/pw-tracks/controllers/application_controller.rb", 186]
187 Tracks::Config.prefered_auth?  ["../applications/pw-tracks/controllers/application_controller.rb", 187]
188 end  ["../applications/pw-tracks/controllers/application_controller.rb", 188]
189   ["../applications/pw-tracks/controllers/application_controller.rb", 189]
190 def prefered_auth?  ["../applications/pw-tracks/controllers/application_controller.rb", 190]
191 self.class.prefered_auth?  ["../applications/pw-tracks/controllers/application_controller.rb", 191]
192 end  ["../applications/pw-tracks/controllers/application_controller.rb", 192]
193   ["../applications/pw-tracks/controllers/application_controller.rb", 193]
194 private  ["../applications/pw-tracks/controllers/application_controller.rb", 194]
195   ["../applications/pw-tracks/controllers/application_controller.rb", 195]
196 def parse_date_per_user_prefs( s )  ["../applications/pw-tracks/controllers/application_controller.rb", 196]
197 prefs.parse_date(s)  ["../applications/pw-tracks/controllers/application_controller.rb", 197]
198 end  ["../applications/pw-tracks/controllers/application_controller.rb", 198]
199   ["../applications/pw-tracks/controllers/application_controller.rb", 199]
200 def init_data_for_sidebar  ["../applications/pw-tracks/controllers/application_controller.rb", 200]
201 @sidebar = Sidebar.new(current_user)  ["../applications/pw-tracks/controllers/application_controller.rb", 201]
202   ["../applications/pw-tracks/controllers/application_controller.rb", 202]
203 init_not_done_counts  ["../applications/pw-tracks/controllers/application_controller.rb", 203]
204 if prefs.show_hidden_projects_in_sidebar  ["../applications/pw-tracks/controllers/application_controller.rb", 204]
205 init_hidden_todo_counts(['project'])  ["../applications/pw-tracks/controllers/application_controller.rb", 205]
206 end  ["../applications/pw-tracks/controllers/application_controller.rb", 206]
207 if prefs.show_hidden_contexts_in_sidebar  ["../applications/pw-tracks/controllers/application_controller.rb", 207]
208 init_hidden_todo_counts(['context'])  ["../applications/pw-tracks/controllers/application_controller.rb", 208]
209 end  ["../applications/pw-tracks/controllers/application_controller.rb", 209]
210 end  ["../applications/pw-tracks/controllers/application_controller.rb", 210]
211   ["../applications/pw-tracks/controllers/application_controller.rb", 211]
212 def init_not_done_counts(parents = ['project','context'])  ["../applications/pw-tracks/controllers/application_controller.rb", 212]
213 parents.each do |parent|  ["../applications/pw-tracks/controllers/application_controller.rb", 213]
214 eval("@#{parent}_not_done_counts ||= current_user.todos.active.count_by_group('#{parent}_id')")  ["../applications/pw-tracks/controllers/application_controller.rb", 214]
215 eval("@#{parent}_deferred_counts ||= current_user.todos.deferred.count_by_group('#{parent}_id')")  ["../applications/pw-tracks/controllers/application_controller.rb", 215]
216 end  ["../applications/pw-tracks/controllers/application_controller.rb", 216]
217 end  ["../applications/pw-tracks/controllers/application_controller.rb", 217]
218   ["../applications/pw-tracks/controllers/application_controller.rb", 218]
219 def init_hidden_todo_counts(parents = ['project', 'context'])  ["../applications/pw-tracks/controllers/application_controller.rb", 219]
220 parents.each do |parent|  ["../applications/pw-tracks/controllers/application_controller.rb", 220]
221 eval("@#{parent}_hidden_todo_counts ||= current_user.todos.active_or_hidden.count_by_group('#{parent}_id')")  ["../applications/pw-tracks/controllers/application_controller.rb", 221]
222 end  ["../applications/pw-tracks/controllers/application_controller.rb", 222]
223 end  ["../applications/pw-tracks/controllers/application_controller.rb", 223]
224   ["../applications/pw-tracks/controllers/application_controller.rb", 224]
225 # Set the contents of the flash message from a controller Usage: notify  ["../applications/pw-tracks/controllers/application_controller.rb", 225]
226 # :warning, "This is the message" Sets the flash of type 'warning' to "This is  ["../applications/pw-tracks/controllers/application_controller.rb", 226]
227 # the message"  ["../applications/pw-tracks/controllers/application_controller.rb", 227]
228 def notify(type, message)  ["../applications/pw-tracks/controllers/application_controller.rb", 228]
229 flash[type] = message  ["../applications/pw-tracks/controllers/application_controller.rb", 229]
230 logger.error("ERROR: #{message}") if type == :error  ["../applications/pw-tracks/controllers/application_controller.rb", 230]
231 end  ["../applications/pw-tracks/controllers/application_controller.rb", 231]
232   ["../applications/pw-tracks/controllers/application_controller.rb", 232]
233 def set_time_zone  ["../applications/pw-tracks/controllers/application_controller.rb", 233]
234 Time.zone = current_user.prefs.time_zone if logged_in?  ["../applications/pw-tracks/controllers/application_controller.rb", 234]
235 end  ["../applications/pw-tracks/controllers/application_controller.rb", 235]
236   ["../applications/pw-tracks/controllers/application_controller.rb", 236]
237 def set_zindex_counter  ["../applications/pw-tracks/controllers/application_controller.rb", 237]
238 # this counter can be used to handle the IE z-index bug  ["../applications/pw-tracks/controllers/application_controller.rb", 238]
239 @z_index_counter = 500  ["../applications/pw-tracks/controllers/application_controller.rb", 239]
240 end  ["../applications/pw-tracks/controllers/application_controller.rb", 240]
241   ["../applications/pw-tracks/controllers/application_controller.rb", 241]
242 def todo_xml_params  ["../applications/pw-tracks/controllers/application_controller.rb", 242]
243 if params[:limit_fields] == 'index'  ["../applications/pw-tracks/controllers/application_controller.rb", 243]
244 return [:only => [:id, :created_at, :updated_at, :completed_at] ]  ["../applications/pw-tracks/controllers/application_controller.rb", 244]
245 else  ["../applications/pw-tracks/controllers/application_controller.rb", 245]
246 return [:except => :user_id, :include => [:tags, :predecessors, :successors] ]  ["../applications/pw-tracks/controllers/application_controller.rb", 246]
247 end  ["../applications/pw-tracks/controllers/application_controller.rb", 247]
248 end  ["../applications/pw-tracks/controllers/application_controller.rb", 248]
249   ["../applications/pw-tracks/controllers/application_controller.rb", 249]
250 def all_done_todos_for(object)  ["../applications/pw-tracks/controllers/application_controller.rb", 250]
251 object_name = object.class.name.downcase # context or project  ["../applications/pw-tracks/controllers/application_controller.rb", 251]
252 @source_view = "all_done"  ["../applications/pw-tracks/controllers/application_controller.rb", 252]
253 @page_title = t("#{object_name.pluralize}.all_completed_tasks_title", "#{object_name}_name".to_sym => object.name)  ["../applications/pw-tracks/controllers/application_controller.rb", 253]
254   ["../applications/pw-tracks/controllers/application_controller.rb", 254]
255 @done = object.todos.completed.reorder('completed_at DESC').includes(Todo::DEFAULT_INCLUDES).  ["../applications/pw-tracks/controllers/application_controller.rb", 255]
256 paginate(:page => params[:page], :per_page => 20)  ["../applications/pw-tracks/controllers/application_controller.rb", 256]
257 @count = @done.size  ["../applications/pw-tracks/controllers/application_controller.rb", 257]
258 render :template => 'todos/all_done'  ["../applications/pw-tracks/controllers/application_controller.rb", 258]
259   ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 1]
260 paginate_options = {  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 2]
261 :class => 'link_in_container_header',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 3]
262 :previous_label => '&laquo; '+ t('common.previous'),  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 4]
263 :next_label     => t('common.next')+' &raquo;',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 5]
264 :inner_window   => 2  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 6]
265 }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 7]
266   ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 8]
267 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 9]
268 t('todos.all_completed')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 10]
269 @done.empty? ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 11]
270 t('todos.no_completed_actions')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 12]
271 if !@done.empty?  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 13]
272 render :partial => "todos/todo", :collection => @done, :locals => { :parent_container_type => "completed", :suppress_context => false, :suppress_project => false }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 14]
273   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 1]
274 suppress_context ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 2]
275 suppress_project ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 3]
276 suppress_edit_button ||= todo.completed?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 4]
277 parameters = "_source_view=#{@source_view}"  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 5]
278 parameters += "&_tag_name=#{@tag_name}" if @source_view == 'tag'  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 6]
279 @z_index_counter = @z_index_counter - 1  # for IE z-index bug  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 7]
280 @rec_depth=0 # to prevent stack overflow on large dependency trees, see _successor.html.erb  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 8]
281   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 9]
282 # invalidate the cache every day because of staleness or  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 10]
283 # rendering of "due in x days" that change without touching updated at of the todo  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 11]
284 # also make different caches per source_view to handle difference in showing [C] and [P]  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 12]
285 cache [todo, current_user.date.strftime("%Y%m%d"), @source_view, current_user.prefs.verbose_action_descriptors] do  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 13]
286   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 14]
287 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 15]
288 sort_key(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 16]
289 dom_id(todo, 'line')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 17]
290 remote_star_icon(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 18]
291 remote_toggle_checkbox(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 19]
292 remote_edit_button(todo) unless suppress_edit_button  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 20]
293 @z_index_counter  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 21]
294 image_tag "downarrow.png", :class => "todo-submenu", :alt=> ""  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 22]
295 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 23]
296 remote_delete_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 24]
297 unless todo.completed? || todo.deferred?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 25]
298 remote_defer_menu_item(1, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 26]
299 remote_defer_menu_item(2, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 27]
300 remote_defer_menu_item(3, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 28]
301 remote_defer_menu_item(7, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 29]
302 remote_promote_to_project_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 30]
303 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 31]
304 grip_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 32]
305 staleness_class( todo )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 33]
306 date_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 34]
307 h todo.description  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 35]
308 image_tag_for_recurring_todo(todo) if todo.from_recurring_todo?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 36]
309 tag_list(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 37]
310 deferred_due_date(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 38]
311 project_and_context_links( todo, parent_container_type, :suppress_context => suppress_context, :suppress_project => suppress_project )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 39]
312 collapsed_notes_image(todo) if todo.notes.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 40]
313 collapsed_successors_image(todo) if todo.has_pending_successors  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 41]
314 attachment_image(todo) if todo.attachments.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 42]
315 dom_id(todo, 'edit')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 43]
316 #note: edit form will load here remotely  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 44]
317 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 45]
318 end  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 15]
319 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 16]
320 end  ["../applications/pw-tracks/controllers/application_controller.rb", 259]
321   ["../applications/pw-tracks/controllers/application_controller.rb", 260]
322 def done_todos_for(object)  ["../applications/pw-tracks/controllers/application_controller.rb", 261]
323 object_name = object.class.name.downcase # context or project  ["../applications/pw-tracks/controllers/application_controller.rb", 262]
324 @source_view = "done"  ["../applications/pw-tracks/controllers/application_controller.rb", 263]
325 eval("@#{object_name} = object")  ["../applications/pw-tracks/controllers/application_controller.rb", 264]
326 @page_title = t("#{object_name.pluralize}.completed_tasks_title", "#{object_name}_name".to_sym => object.name)  ["../applications/pw-tracks/controllers/application_controller.rb", 265]
327   ["../applications/pw-tracks/controllers/application_controller.rb", 266]
328 @done_today, @done_rest_of_week, @done_rest_of_month = DoneTodos.done_todos_for_container(object.todos)  ["../applications/pw-tracks/controllers/application_controller.rb", 267]
329 @count = @done_today.size + @done_rest_of_week.size + @done_rest_of_month.size  ["../applications/pw-tracks/controllers/application_controller.rb", 268]
330   ["../applications/pw-tracks/controllers/application_controller.rb", 269]
331 render :template => 'todos/done'  ["../applications/pw-tracks/controllers/application_controller.rb", 270]
332 show_completed_todos_for("today", @done_today)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 1]
333 show_completed_todos_for("rest_of_week", @done_rest_of_week)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 2]
334 show_completed_todos_for("rest_of_month", @done_rest_of_month)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 3]
335 raw t('todos.see_all_completed',  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 4]
336 :link => link_to(t("todos.all_completed_here"), determine_all_done_path))  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 5]
337   ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 6]
338 end  ["../applications/pw-tracks/controllers/application_controller.rb", 271]
339   ["../applications/pw-tracks/controllers/application_controller.rb", 272]
340 def set_group_view_by  ["../applications/pw-tracks/controllers/application_controller.rb", 273]
341 @group_view_by = params['_group_view_by'] || cookies['group_view_by'] || 'context'  ["../applications/pw-tracks/controllers/application_controller.rb", 274]
342 end  ["../applications/pw-tracks/controllers/application_controller.rb", 275]
343   ["../applications/pw-tracks/controllers/application_controller.rb", 276]
344 end  ["../applications/pw-tracks/controllers/application_controller.rb", 277]
LENGTH: 34
1 class CalendarController < ApplicationController  ["../applications/pw-tracks/controllers/calendar_controller.rb", 1]
2 skip_before_filter :login_required, :only => [:show]  ["../applications/pw-tracks/controllers/calendar_controller.rb", 2]
3 prepend_before_filter :login_or_feed_token_required, :only => [:show]  ["../applications/pw-tracks/controllers/calendar_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/calendar_controller.rb", 4]
5 def show  ["../applications/pw-tracks/controllers/calendar_controller.rb", 5]
6 @source_view = 'calendar'  ["../applications/pw-tracks/controllers/calendar_controller.rb", 6]
7 @page_title = t('todos.calendar_page_title')  ["../applications/pw-tracks/controllers/calendar_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/calendar_controller.rb", 8]
9 @calendar = Todos::Calendar.new(current_user)  ["../applications/pw-tracks/controllers/calendar_controller.rb", 9]
10 @projects = @calendar.projects  ["../applications/pw-tracks/controllers/calendar_controller.rb", 10]
11 @count = current_user.todos.not_completed.are_due.count  ["../applications/pw-tracks/controllers/calendar_controller.rb", 11]
12 @due_all = current_user.todos.not_completed.are_due.reorder("due")  ["../applications/pw-tracks/controllers/calendar_controller.rb", 12]
13   ["../applications/pw-tracks/controllers/calendar_controller.rb", 13]
14 respond_to do |format|  ["../applications/pw-tracks/controllers/calendar_controller.rb", 14]
15 format.html  ["../applications/pw-tracks/controllers/calendar_controller.rb", 15]
16 format.m {  ["../applications/pw-tracks/controllers/calendar_controller.rb", 16]
17 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/calendar_controller.rb", 17]
18 }  ["../applications/pw-tracks/controllers/calendar_controller.rb", 18]
19 format.ics   {  ["../applications/pw-tracks/controllers/calendar_controller.rb", 19]
20 render :action => 'show', :layout => false, :content_type => Mime::ICS  ["../applications/pw-tracks/controllers/calendar_controller.rb", 20]
21 todos_calendar_container(:due_today,            @calendar.due_today           )  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 1]
22 todos_calendar_container(:due_this_week,        @calendar.due_this_week       )  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 2]
23 todos_calendar_container(:due_next_week,        @calendar.due_next_week       )  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 3]
24 todos_calendar_container(:due_this_month,       @calendar.due_this_month      )  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 4]
25 todos_calendar_container(:due_after_this_month, @calendar.due_after_this_month)  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 5]
26 link_to('<span class="feed">iCal</span>'.html_safe, {:format => 'ics', :token => current_user.token}, :title => "iCal feed" )  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 6]
27 t('todos.calendar.get_in_ical_format')  ["../applications/pw-tracks//ruby_views/calendar/show.html.erb", 7]
28 }  ["../applications/pw-tracks/controllers/calendar_controller.rb", 21]
29 format.xml {  ["../applications/pw-tracks/controllers/calendar_controller.rb", 22]
30 render :xml => @due_all.to_xml( *todo_xml_params )  ["../applications/pw-tracks/controllers/calendar_controller.rb", 23]
31 }  ["../applications/pw-tracks/controllers/calendar_controller.rb", 24]
32 end  ["../applications/pw-tracks/controllers/calendar_controller.rb", 25]
33 end  ["../applications/pw-tracks/controllers/calendar_controller.rb", 26]
34 end  ["../applications/pw-tracks/controllers/calendar_controller.rb", 27]
start 10 l: 26
LENGTH: 376
1 class ContextsController < ApplicationController  ["../applications/pw-tracks/controllers/contexts_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/contexts_controller.rb", 2]
3 helper :todos  ["../applications/pw-tracks/controllers/contexts_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/contexts_controller.rb", 4]
5 before_filter :init, :except => [:index, :create, :destroy, :order]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 5]
6 before_filter :set_context_from_params, :only => [:update, :destroy]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 6]
7 skip_before_filter :login_required, :only => [:index]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 7]
8 prepend_before_filter :login_or_feed_token_required, :only => [:index]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 8]
9   ["../applications/pw-tracks/controllers/contexts_controller.rb", 9]
10 def index  ["../applications/pw-tracks/controllers/contexts_controller.rb", 10]
11 @all_contexts    = current_user.contexts  ["../applications/pw-tracks/controllers/contexts_controller.rb", 11]
12 @active_contexts = current_user.contexts.active  ["../applications/pw-tracks/controllers/contexts_controller.rb", 12]
13 @hidden_contexts = current_user.contexts.hidden  ["../applications/pw-tracks/controllers/contexts_controller.rb", 13]
14 @closed_contexts = current_user.contexts.closed  ["../applications/pw-tracks/controllers/contexts_controller.rb", 14]
15 unless request.format == :autocomplete  ["../applications/pw-tracks/controllers/contexts_controller.rb", 15]
16 init_not_done_counts(['context'])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 16]
17 init_hidden_todo_counts(['context'])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 17]
18 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 18]
19   ["../applications/pw-tracks/controllers/contexts_controller.rb", 19]
20 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 20]
21 format.html &render_contexts_html  ["../applications/pw-tracks/controllers/contexts_controller.rb", 21]
22 format.m    &render_contexts_mobile  ["../applications/pw-tracks/controllers/contexts_controller.rb", 22]
23 format.xml  { render :xml => @all_contexts.to_xml( :except => :user_id ) }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 23]
24 format.any(:rss, :atom) do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 24]
25 @feed_title = 'Tracks Contexts'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 25]
26 @feed_description = "Lists all the contexts for #{current_user.display_name}"  ["../applications/pw-tracks/controllers/contexts_controller.rb", 26]
27 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 27]
28 format.text do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 28]
29 # somehow passing Mime::TEXT using content_type to render does not work  ["../applications/pw-tracks/controllers/contexts_controller.rb", 29]
30 headers['Content-Type']=Mime::TEXT.to_s  ["../applications/pw-tracks/controllers/contexts_controller.rb", 30]
31 render :action => 'index', :layout => false, :content_type => Mime::TEXT  ["../applications/pw-tracks/controllers/contexts_controller.rb", 31]
32 render :partial => 'context_state_group', :object => @active_contexts, :locals => { :state => 'active', :no_contexts => @no_active_contexts}  ["../applications/pw-tracks//ruby_views/contexts/index.html.erb", 1]
33 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 1]
34 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 2]
35 context_state_group.length  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 3]
36 t("states.contexts."+ state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 4]
37 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 5]
38 no_contexts ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 6]
39 t('contexts.no_contexts_' + state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 7]
40 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 8]
41 render :partial => 'context_listing', :collection => context_state_group  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 9]
42   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 1]
43 context = context_listing  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 2]
44 suppress_drag_handle ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 3]
45 suppress_edit_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 4]
46 suppress_delete_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 5]
47   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 6]
48 dom_id(context, "container")  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 7]
49 dom_id(context)  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 8]
50 suppress_delete_button ? "" : link_to_delete_context(context, image_tag( "blank.png", :title => t('contexts.delete_context'), :class=>"delete_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 9]
51 suppress_edit_button ? "" : link_to_edit_context(context, image_tag( "blank.png", :title => t('contexts.edit_context'), :class=>"edit_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 10]
52 suppress_drag_handle ? "" : image_tag('grip.png', :width => '7', :height => '16', :border => '0', :title => t('common.drag_handle'), :class => 'grip')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 11]
53 link_to_context( context )  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 12]
54 raw " (#{count_undone_todos_phrase(context)})"  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 13]
55 dom_id(context, 'edit')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 14]
56 render :partial => 'context_state_group', :object => @hidden_contexts, :locals => { :state => 'hidden', :no_contexts => @no_hidden_contexts}  ["../applications/pw-tracks//ruby_views/contexts/index.html.erb", 2]
57 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 1]
58 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 2]
59 context_state_group.length  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 3]
60 t("states.contexts."+ state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 4]
61 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 5]
62 no_contexts ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 6]
63 t('contexts.no_contexts_' + state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 7]
64 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 8]
65 render :partial => 'context_listing', :collection => context_state_group  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 9]
66   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 1]
67 context = context_listing  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 2]
68 suppress_drag_handle ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 3]
69 suppress_edit_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 4]
70 suppress_delete_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 5]
71   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 6]
72 dom_id(context, "container")  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 7]
73 dom_id(context)  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 8]
74 suppress_delete_button ? "" : link_to_delete_context(context, image_tag( "blank.png", :title => t('contexts.delete_context'), :class=>"delete_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 9]
75 suppress_edit_button ? "" : link_to_edit_context(context, image_tag( "blank.png", :title => t('contexts.edit_context'), :class=>"edit_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 10]
76 suppress_drag_handle ? "" : image_tag('grip.png', :width => '7', :height => '16', :border => '0', :title => t('common.drag_handle'), :class => 'grip')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 11]
77 link_to_context( context )  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 12]
78 raw " (#{count_undone_todos_phrase(context)})"  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 13]
79 dom_id(context, 'edit')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 14]
80 render :partial => 'context_state_group', :object => @closed_contexts, :locals => { :state => 'closed', :no_contexts => @no_closed_contexts}  ["../applications/pw-tracks//ruby_views/contexts/index.html.erb", 3]
81 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 1]
82 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 2]
83 context_state_group.length  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 3]
84 t("states.contexts."+ state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 4]
85 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 5]
86 no_contexts ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 6]
87 t('contexts.no_contexts_' + state)  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 7]
88 state  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 8]
89 render :partial => 'context_listing', :collection => context_state_group  ["../applications/pw-tracks//ruby_views/contexts/_context_state_group.html.erb", 9]
90   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 1]
91 context = context_listing  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 2]
92 suppress_drag_handle ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 3]
93 suppress_edit_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 4]
94 suppress_delete_button ||= false  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 5]
95   ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 6]
96 dom_id(context, "container")  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 7]
97 dom_id(context)  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 8]
98 suppress_delete_button ? "" : link_to_delete_context(context, image_tag( "blank.png", :title => t('contexts.delete_context'), :class=>"delete_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 9]
99 suppress_edit_button ? "" : link_to_edit_context(context, image_tag( "blank.png", :title => t('contexts.edit_context'), :class=>"edit_item"))  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 10]
100 suppress_drag_handle ? "" : image_tag('grip.png', :width => '7', :height => '16', :border => '0', :title => t('common.drag_handle'), :class => 'grip')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 11]
101 link_to_context( context )  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 12]
102 raw " (#{count_undone_todos_phrase(context)})"  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 13]
103 dom_id(context, 'edit')  ["../applications/pw-tracks//ruby_views/contexts/_context_listing.html.erb", 14]
104 render :partial => 'new_context_form'  ["../applications/pw-tracks//ruby_views/contexts/index.html.erb", 4]
105 t('contexts.hide_form_title')  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 1]
106 t('contexts.hide_form')  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 2]
107 form_for(@new_context, :html => {:id => 'context-form',:name=>'context',:class => "inline-form", :method => :post }) do  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 3]
108 if @new_context.errors.any?  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 4]
109 @new_context.errors.full_messages.each do |msg|  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 5]
110 msg  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 6]
111 end  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 7]
112 end  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 8]
113 t 'contexts.context_name'  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 9]
114 text_field( "context", "name" )  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 10]
115 t 'contexts.context_hide'  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 11]
116 check_box( "context_state", "hide" )  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 12]
117 image_tag("accept.png", :alt => "") + t('shared.add_context')  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 13]
118 end  ["../applications/pw-tracks//ruby_views/contexts/_new_context_form.html.erb", 14]
119 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 32]
120 format.autocomplete &render_autocomplete  ["../applications/pw-tracks/controllers/contexts_controller.rb", 33]
121 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 34]
122 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 35]
123   ["../applications/pw-tracks/controllers/contexts_controller.rb", 36]
124 def show  ["../applications/pw-tracks/controllers/contexts_controller.rb", 37]
125 set_context_from_params  ["../applications/pw-tracks/controllers/contexts_controller.rb", 38]
126   ["../applications/pw-tracks/controllers/contexts_controller.rb", 39]
127 unless @context.nil?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 40]
128 @max_completed = current_user.prefs.show_number_completed  ["../applications/pw-tracks/controllers/contexts_controller.rb", 41]
129 @done = @context.todos.completed.limit(@max_completed).reorder("todos.completed_at DESC, todos.created_at DESC").includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 42]
130 @not_done_todos = @context.todos.active_or_hidden.not_project_hidden.reorder('todos.due IS NULL, todos.due ASC, todos.created_at ASC').includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 43]
131 @todos_without_project = @not_done_todos.select{|t| t.project.nil?}  ["../applications/pw-tracks/controllers/contexts_controller.rb", 44]
132   ["../applications/pw-tracks/controllers/contexts_controller.rb", 45]
133 @deferred_todos = @context.todos.deferred.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 46]
134 @pending_todos = @context.todos.pending.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 47]
135   ["../applications/pw-tracks/controllers/contexts_controller.rb", 48]
136 @projects = current_user.projects  ["../applications/pw-tracks/controllers/contexts_controller.rb", 49]
137 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/contexts_controller.rb", 50]
138   ["../applications/pw-tracks/controllers/contexts_controller.rb", 51]
139 @projects_to_show = @projects.active.limit(10)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 52]
140 @contexts_to_show = [@context]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 53]
141   ["../applications/pw-tracks/controllers/contexts_controller.rb", 54]
142 @count = @not_done_todos.count + @deferred_todos.count + @pending_todos.count  ["../applications/pw-tracks/controllers/contexts_controller.rb", 55]
143 @page_title = "TRACKS::Context: #{@context.name}"  ["../applications/pw-tracks/controllers/contexts_controller.rb", 56]
144 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 57]
145 format.html  ["../applications/pw-tracks/controllers/contexts_controller.rb", 58]
146 format.m    &render_context_mobile  ["../applications/pw-tracks/controllers/contexts_controller.rb", 59]
147 format.xml  { render :xml => @context.to_xml( :except => :user_id ) }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 60]
148 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 61]
149 else  ["../applications/pw-tracks/controllers/contexts_controller.rb", 62]
150 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 63]
151 format.html { render :text => 'Context not found', :status => 404 }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 64]
152 format.xml  { render :xml => '<error>Context not found</error>', :status => 404 }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 65]
153 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 66]
154 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 67]
155 end  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 1]
156 suffix_completed = t('contexts.last_completed_in_context', :number=>prefs.show_number_completed)  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 2]
157 deferred_pending_options = {:append_descriptor => nil, :parent_container_type => 'context'}  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 3]
158 done_todo_options = {:append_descriptor => suffix_completed, :suppress_context => true, :parent_container_type => 'context'}  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 4]
159 show_empty_containers = (@group_view_by == 'context')  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 5]
160   ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 6]
161 empty_message_holder("not_done_context", @not_done_todos.empty?)  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 7]
162 show_grouped_todos({:collapsible => false, :show_empty_containers => false, :parent_container_type => 'context'})  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 8]
163 if @group_view_by == 'project'  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 9]
164 show_todos_without_project(@todos_without_project, {:collapsible => false, :parent_container_type => 'context', :title_param => @context.name})  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 10]
165 end  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 11]
166 show_deferred_pending_todos(@deferred_todos, @pending_todos, deferred_pending_options)  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 12]
167 show_done_todos(@done, done_todo_options) unless @done.nil?  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 13]
168 render :partial => "shared/add_new_item_form"  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 14]
169 render :file => "sidebar/sidebar"  ["../applications/pw-tracks//ruby_views/contexts/show.html.erb", 15]
170   ["../applications/pw-tracks/controllers/contexts_controller.rb", 68]
171   ["../applications/pw-tracks/controllers/contexts_controller.rb", 69]
172 def create  ["../applications/pw-tracks/controllers/contexts_controller.rb", 70]
173 if params[:format] == 'application/xml' && params['exception']  ["../applications/pw-tracks/controllers/contexts_controller.rb", 71]
174 render_failure "Expected post format is valid xml like so: <context><name>context name</name></context>.", 400  ["../applications/pw-tracks/controllers/contexts_controller.rb", 72]
175 return  ["../applications/pw-tracks/controllers/contexts_controller.rb", 73]
176 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 74]
177 @context = current_user.contexts.build(context_params)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 75]
178 @context.hide! if params['context_state'] && params['context_state']['hide'] == '1'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 76]
179 @saved = @context.save  ["../applications/pw-tracks/controllers/contexts_controller.rb", 77]
180 @context_not_done_counts = { @context.id => 0 }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 78]
181 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 79]
182 format.js do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 80]
183 @down_count = current_user.contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 81]
184 init_not_done_counts  ["../applications/pw-tracks/controllers/contexts_controller.rb", 82]
185 init_hidden_todo_counts(['context'])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 83]
186 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 84]
187 format.xml do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 85]
188 if @context.new_record?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 86]
189 render_failure @context.errors.to_xml.html_safe, 409  ["../applications/pw-tracks/controllers/contexts_controller.rb", 87]
190 else  ["../applications/pw-tracks/controllers/contexts_controller.rb", 88]
191 head :created, :location => context_url(@context)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 89]
192 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 90]
193 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 91]
194 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 92]
195 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 93]
196   ["../applications/pw-tracks/controllers/contexts_controller.rb", 94]
197 # Edit the details of the context  ["../applications/pw-tracks/controllers/contexts_controller.rb", 95]
198 #  ["../applications/pw-tracks/controllers/contexts_controller.rb", 96]
199 def update  ["../applications/pw-tracks/controllers/contexts_controller.rb", 97]
200 process_params_for_update  ["../applications/pw-tracks/controllers/contexts_controller.rb", 98]
201   ["../applications/pw-tracks/controllers/contexts_controller.rb", 99]
202 @context.attributes = context_params  ["../applications/pw-tracks/controllers/contexts_controller.rb", 100]
203 @saved = @context.save  ["../applications/pw-tracks/controllers/contexts_controller.rb", 101]
204 @state_saved = set_state_for_update(@new_state)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 102]
205 @saved = @saved && @state_saved  ["../applications/pw-tracks/controllers/contexts_controller.rb", 103]
206   ["../applications/pw-tracks/controllers/contexts_controller.rb", 104]
207 if @saved  ["../applications/pw-tracks/controllers/contexts_controller.rb", 105]
208 @state_changed = (@original_context_state != @context.state)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 106]
209 @new_state = @context.state if @state_changed  ["../applications/pw-tracks/controllers/contexts_controller.rb", 107]
210 @active_contexts = current_user.contexts.active  ["../applications/pw-tracks/controllers/contexts_controller.rb", 108]
211 @hidden_contexts = current_user.contexts.hidden  ["../applications/pw-tracks/controllers/contexts_controller.rb", 109]
212 @closed_contexts = current_user.contexts.closed  ["../applications/pw-tracks/controllers/contexts_controller.rb", 110]
213 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 111]
214   ["../applications/pw-tracks/controllers/contexts_controller.rb", 112]
215 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 113]
216 format.js  ["../applications/pw-tracks/controllers/contexts_controller.rb", 114]
217 format.xml {  ["../applications/pw-tracks/controllers/contexts_controller.rb", 115]
218 if @saved  ["../applications/pw-tracks/controllers/contexts_controller.rb", 116]
219 render :xml => @context.to_xml( :except => :user_id )  ["../applications/pw-tracks/controllers/contexts_controller.rb", 117]
220 else  ["../applications/pw-tracks/controllers/contexts_controller.rb", 118]
221 render :text => "Error on update: #{@context.errors.full_messages.inject("") {|v, e| v + e + " " }}", :status => 409  ["../applications/pw-tracks/controllers/contexts_controller.rb", 119]
222 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 120]
223 }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 121]
224 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 122]
225 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 123]
226   ["../applications/pw-tracks/controllers/contexts_controller.rb", 124]
227 def edit  ["../applications/pw-tracks/controllers/contexts_controller.rb", 125]
228 @context = Context.find(params[:id])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 126]
229 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 127]
230 format.js  ["../applications/pw-tracks/controllers/contexts_controller.rb", 128]
231 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 129]
232 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 130]
233   ["../applications/pw-tracks/controllers/contexts_controller.rb", 131]
234 # Fairly self-explanatory; deletes the context If the context contains  ["../applications/pw-tracks/controllers/contexts_controller.rb", 132]
235 # actions, you'll get a warning dialogue. If you choose to go ahead, any  ["../applications/pw-tracks/controllers/contexts_controller.rb", 133]
236 # actions in the context will also be deleted.  ["../applications/pw-tracks/controllers/contexts_controller.rb", 134]
237 def destroy  ["../applications/pw-tracks/controllers/contexts_controller.rb", 135]
238 # make sure the deleted recurrence patterns are removed from associated todos  ["../applications/pw-tracks/controllers/contexts_controller.rb", 136]
239 @context.recurring_todos.each(&:clear_todos_association) unless @context.recurring_todos.nil?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 137]
240   ["../applications/pw-tracks/controllers/contexts_controller.rb", 138]
241 @context.destroy  ["../applications/pw-tracks/controllers/contexts_controller.rb", 139]
242 respond_to do |format|  ["../applications/pw-tracks/controllers/contexts_controller.rb", 140]
243 format.js do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 141]
244 @down_count = current_user.contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 142]
245 update_state_counts  ["../applications/pw-tracks/controllers/contexts_controller.rb", 143]
246 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 144]
247 format.xml { render :text => "Deleted context #{@context.name}" }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 145]
248 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 146]
249 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 147]
250   ["../applications/pw-tracks/controllers/contexts_controller.rb", 148]
251 # Methods for changing the sort order of the contexts in the list  ["../applications/pw-tracks/controllers/contexts_controller.rb", 149]
252 #  ["../applications/pw-tracks/controllers/contexts_controller.rb", 150]
253 def order  ["../applications/pw-tracks/controllers/contexts_controller.rb", 151]
254 context_ids = params["container_context"]  ["../applications/pw-tracks/controllers/contexts_controller.rb", 152]
255 @projects = current_user.contexts.update_positions( context_ids )  ["../applications/pw-tracks/controllers/contexts_controller.rb", 153]
256 render :nothing => true  ["../applications/pw-tracks/controllers/contexts_controller.rb", 154]
257 rescue  ["../applications/pw-tracks/controllers/contexts_controller.rb", 155]
258 notify :error, $!  ["../applications/pw-tracks/controllers/contexts_controller.rb", 156]
259 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 157]
260 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 158]
261   ["../applications/pw-tracks/controllers/contexts_controller.rb", 159]
262 def done_todos  ["../applications/pw-tracks/controllers/contexts_controller.rb", 160]
263 done_todos_for current_user.contexts.find(params[:id])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 161]
264 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 162]
265   ["../applications/pw-tracks/controllers/contexts_controller.rb", 163]
266 def all_done_todos  ["../applications/pw-tracks/controllers/contexts_controller.rb", 164]
267 all_done_todos_for current_user.contexts.find(params[:id])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 165]
268 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 166]
269   ["../applications/pw-tracks/controllers/contexts_controller.rb", 167]
270 private  ["../applications/pw-tracks/controllers/contexts_controller.rb", 168]
271   ["../applications/pw-tracks/controllers/contexts_controller.rb", 169]
272 def context_params  ["../applications/pw-tracks/controllers/contexts_controller.rb", 170]
273 params.require(:context).permit(:name, :position, :state)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 171]
274 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 172]
275   ["../applications/pw-tracks/controllers/contexts_controller.rb", 173]
276 protected  ["../applications/pw-tracks/controllers/contexts_controller.rb", 174]
277   ["../applications/pw-tracks/controllers/contexts_controller.rb", 175]
278 def update_state_counts  ["../applications/pw-tracks/controllers/contexts_controller.rb", 176]
279 @active_contexts_count = current_user.contexts.active.count  ["../applications/pw-tracks/controllers/contexts_controller.rb", 177]
280 @hidden_contexts_count = current_user.contexts.hidden.count  ["../applications/pw-tracks/controllers/contexts_controller.rb", 178]
281 @closed_contexts_count = current_user.contexts.closed.count  ["../applications/pw-tracks/controllers/contexts_controller.rb", 179]
282 @show_active_contexts = @active_contexts_count > 0  ["../applications/pw-tracks/controllers/contexts_controller.rb", 180]
283 @show_hidden_contexts = @hidden_contexts_count > 0  ["../applications/pw-tracks/controllers/contexts_controller.rb", 181]
284 @show_closed_contexts = @closed_contexts_count > 0  ["../applications/pw-tracks/controllers/contexts_controller.rb", 182]
285 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 183]
286   ["../applications/pw-tracks/controllers/contexts_controller.rb", 184]
287 def render_contexts_html  ["../applications/pw-tracks/controllers/contexts_controller.rb", 185]
288 lambda do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 186]
289 @page_title = "TRACKS::List Contexts"  ["../applications/pw-tracks/controllers/contexts_controller.rb", 187]
290 @no_active_contexts = @active_contexts.empty?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 188]
291 @no_hidden_contexts = @hidden_contexts.empty?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 189]
292 @no_closed_contexts = @closed_contexts.empty?  ["../applications/pw-tracks/controllers/contexts_controller.rb", 190]
293 @active_count = @active_contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 191]
294 @hidden_count = @hidden_contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 192]
295 @closed_count = @closed_contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 193]
296 @count = @active_count + @hidden_count + @closed_count  ["../applications/pw-tracks/controllers/contexts_controller.rb", 194]
297 @new_context = current_user.contexts.build  ["../applications/pw-tracks/controllers/contexts_controller.rb", 195]
298   ["../applications/pw-tracks/controllers/contexts_controller.rb", 196]
299 render  ["../applications/pw-tracks/controllers/contexts_controller.rb", 197]
300 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 198]
301 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 199]
302   ["../applications/pw-tracks/controllers/contexts_controller.rb", 200]
303 def render_contexts_mobile  ["../applications/pw-tracks/controllers/contexts_controller.rb", 201]
304 lambda do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 202]
305 @page_title = "TRACKS::List Contexts"  ["../applications/pw-tracks/controllers/contexts_controller.rb", 203]
306 @active_contexts = current_user.contexts.active  ["../applications/pw-tracks/controllers/contexts_controller.rb", 204]
307 @hidden_contexts = current_user.contexts.hidden  ["../applications/pw-tracks/controllers/contexts_controller.rb", 205]
308 @down_count = @active_contexts.size + @hidden_contexts.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 206]
309 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/contexts_controller.rb", 207]
310 render  ["../applications/pw-tracks/controllers/contexts_controller.rb", 208]
311 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 209]
312 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 210]
313   ["../applications/pw-tracks/controllers/contexts_controller.rb", 211]
314 def render_context_mobile  ["../applications/pw-tracks/controllers/contexts_controller.rb", 212]
315 lambda do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 213]
316 @page_title = "TRACKS::List actions in "+@context.name  ["../applications/pw-tracks/controllers/contexts_controller.rb", 214]
317 @not_done = @not_done_todos.select {|t| t.context_id == @context.id }  ["../applications/pw-tracks/controllers/contexts_controller.rb", 215]
318 @down_count = @not_done.size  ["../applications/pw-tracks/controllers/contexts_controller.rb", 216]
319 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/contexts_controller.rb", 217]
320 @mobile_from_context = @context.id  ["../applications/pw-tracks/controllers/contexts_controller.rb", 218]
321 render  ["../applications/pw-tracks/controllers/contexts_controller.rb", 219]
322 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 220]
323 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 221]
324   ["../applications/pw-tracks/controllers/contexts_controller.rb", 222]
325 def render_autocomplete  ["../applications/pw-tracks/controllers/contexts_controller.rb", 223]
326 lambda do  ["../applications/pw-tracks/controllers/contexts_controller.rb", 224]
327 render :text => for_autocomplete(current_user.contexts, params[:term])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 225]
328 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 226]
329 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 227]
330   ["../applications/pw-tracks/controllers/contexts_controller.rb", 228]
331 def feed_options  ["../applications/pw-tracks/controllers/contexts_controller.rb", 229]
332 Context.feed_options(current_user)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 230]
333 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 231]
334   ["../applications/pw-tracks/controllers/contexts_controller.rb", 232]
335 def set_context_from_params  ["../applications/pw-tracks/controllers/contexts_controller.rb", 233]
336 @context = current_user.contexts.find(params[:id])  ["../applications/pw-tracks/controllers/contexts_controller.rb", 234]
337 rescue  ["../applications/pw-tracks/controllers/contexts_controller.rb", 235]
338 @context = nil  ["../applications/pw-tracks/controllers/contexts_controller.rb", 236]
339 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 237]
340   ["../applications/pw-tracks/controllers/contexts_controller.rb", 238]
341 def init  ["../applications/pw-tracks/controllers/contexts_controller.rb", 239]
342 @source_view = params['_source_view'] || 'context'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 240]
343 init_data_for_sidebar  ["../applications/pw-tracks/controllers/contexts_controller.rb", 241]
344 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 242]
345   ["../applications/pw-tracks/controllers/contexts_controller.rb", 243]
346 def process_params_for_update  ["../applications/pw-tracks/controllers/contexts_controller.rb", 244]
347 params['context'] ||= {}  ["../applications/pw-tracks/controllers/contexts_controller.rb", 245]
348 @success_text = if params['field'] == 'name' && params['value']  ["../applications/pw-tracks/controllers/contexts_controller.rb", 246]
349 params['context']['id'] = params['id']  ["../applications/pw-tracks/controllers/contexts_controller.rb", 247]
350 params['context']['name'] = params['value']  ["../applications/pw-tracks/controllers/contexts_controller.rb", 248]
351 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 249]
352   ["../applications/pw-tracks/controllers/contexts_controller.rb", 250]
353 @original_context_state = @context.state  ["../applications/pw-tracks/controllers/contexts_controller.rb", 251]
354 @new_state = params['context']['state']  ["../applications/pw-tracks/controllers/contexts_controller.rb", 252]
355 params['context'].delete('state')  ["../applications/pw-tracks/controllers/contexts_controller.rb", 253]
356 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 254]
357   ["../applications/pw-tracks/controllers/contexts_controller.rb", 255]
358 def set_state_for_update(new_state)  ["../applications/pw-tracks/controllers/contexts_controller.rb", 256]
359 begin  ["../applications/pw-tracks/controllers/contexts_controller.rb", 257]
360 unless @original_context_state == new_state  ["../applications/pw-tracks/controllers/contexts_controller.rb", 258]
361 if new_state == 'active'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 259]
362 @context.activate!  ["../applications/pw-tracks/controllers/contexts_controller.rb", 260]
363 elsif new_state == 'hidden'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 261]
364 @context.hide!  ["../applications/pw-tracks/controllers/contexts_controller.rb", 262]
365 elsif new_state == 'closed'  ["../applications/pw-tracks/controllers/contexts_controller.rb", 263]
366 @context.close!  ["../applications/pw-tracks/controllers/contexts_controller.rb", 264]
367 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 265]
368 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 266]
369 return true  ["../applications/pw-tracks/controllers/contexts_controller.rb", 267]
370 rescue AASM::InvalidTransition  ["../applications/pw-tracks/controllers/contexts_controller.rb", 268]
371 @context.errors.add(:state, "cannot be changed. The context cannot be closed if you have uncompleted actions in this context")  ["../applications/pw-tracks/controllers/contexts_controller.rb", 269]
372 return false  ["../applications/pw-tracks/controllers/contexts_controller.rb", 270]
373 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 271]
374 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 272]
375   ["../applications/pw-tracks/controllers/contexts_controller.rb", 273]
376 end  ["../applications/pw-tracks/controllers/contexts_controller.rb", 274]
LENGTH: 217
1 class DataController < ApplicationController  ["../applications/pw-tracks/controllers/data_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/data_controller.rb", 2]
3 require 'csv'  ["../applications/pw-tracks/controllers/data_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/data_controller.rb", 4]
5 def index  ["../applications/pw-tracks/controllers/data_controller.rb", 5]
6 @page_title = "TRACKS::Export"  ["../applications/pw-tracks/controllers/data_controller.rb", 6]
7 end  ["../applications/pw-tracks/controllers/data_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/data_controller.rb", 8]
9 def import  ["../applications/pw-tracks/controllers/data_controller.rb", 9]
10   ["../applications/pw-tracks/controllers/data_controller.rb", 10]
11 end  ["../applications/pw-tracks/controllers/data_controller.rb", 11]
12   ["../applications/pw-tracks/controllers/data_controller.rb", 12]
13 def csv_map  ["../applications/pw-tracks/controllers/data_controller.rb", 13]
14 if params[:file].blank?  ["../applications/pw-tracks/controllers/data_controller.rb", 14]
15 flash[:notice] = "File can't be blank"  ["../applications/pw-tracks/controllers/data_controller.rb", 15]
16 redirect_to :back  ["../applications/pw-tracks/controllers/data_controller.rb", 16]
17 else  ["../applications/pw-tracks/controllers/data_controller.rb", 17]
18 @import_to = params[:import_to]  ["../applications/pw-tracks/controllers/data_controller.rb", 18]
19   ["../applications/pw-tracks/controllers/data_controller.rb", 19]
20 begin  ["../applications/pw-tracks/controllers/data_controller.rb", 20]
21 #get column headers and format as [['name', column_number]...]  ["../applications/pw-tracks/controllers/data_controller.rb", 21]
22 i = -1  ["../applications/pw-tracks/controllers/data_controller.rb", 22]
23 @headers = import_headers(params[:file].path).collect { |v| [v, i+=1] }  ["../applications/pw-tracks/controllers/data_controller.rb", 23]
24 @headers.unshift ['',i]  ["../applications/pw-tracks/controllers/data_controller.rb", 24]
25 rescue Exception => e  ["../applications/pw-tracks/controllers/data_controller.rb", 25]
26 flash[:error] = "Invalid CVS: could not read headers: #{e}"  ["../applications/pw-tracks/controllers/data_controller.rb", 26]
27 redirect_to :back  ["../applications/pw-tracks/controllers/data_controller.rb", 27]
28 return  ["../applications/pw-tracks/controllers/data_controller.rb", 28]
29 end  ["../applications/pw-tracks/controllers/data_controller.rb", 29]
30   ["../applications/pw-tracks/controllers/data_controller.rb", 30]
31 #save file for later  ["../applications/pw-tracks/controllers/data_controller.rb", 31]
32 begin  ["../applications/pw-tracks/controllers/data_controller.rb", 32]
33 uploaded_file = params[:file]  ["../applications/pw-tracks/controllers/data_controller.rb", 33]
34 @filename = sanitize_filename(uploaded_file.original_filename)  ["../applications/pw-tracks/controllers/data_controller.rb", 34]
35 path_and_file = Rails.root.join('public', 'uploads', 'csv', @filename)  ["../applications/pw-tracks/controllers/data_controller.rb", 35]
36 File.open(path_and_file, "wb") { |f| f.write(uploaded_file.read) }  ["../applications/pw-tracks/controllers/data_controller.rb", 36]
37 rescue Exception => e  ["../applications/pw-tracks/controllers/data_controller.rb", 37]
38 flash[:error] = "Could not save uploaded CSV (#{path_and_file}). Can Tracks write to the upload directory? #{e}"  ["../applications/pw-tracks/controllers/data_controller.rb", 38]
39 redirect_to :back  ["../applications/pw-tracks/controllers/data_controller.rb", 39]
40 return  ["../applications/pw-tracks/controllers/data_controller.rb", 40]
41 end  ["../applications/pw-tracks/controllers/data_controller.rb", 41]
42   ["../applications/pw-tracks/controllers/data_controller.rb", 42]
43 case @import_to  ["../applications/pw-tracks/controllers/data_controller.rb", 43]
44 when 'projects'  ["../applications/pw-tracks/controllers/data_controller.rb", 44]
45 @labels = [:name, :description]  ["../applications/pw-tracks/controllers/data_controller.rb", 45]
46 when 'todos'  ["../applications/pw-tracks/controllers/data_controller.rb", 46]
47 @labels = [:description, :context, :project, :notes, :created_at, :due, :completed_at]  ["../applications/pw-tracks/controllers/data_controller.rb", 47]
48 else  ["../applications/pw-tracks/controllers/data_controller.rb", 48]
49 flash[:error] = "Invalid import destination"  ["../applications/pw-tracks/controllers/data_controller.rb", 49]
50 redirect_to :back  ["../applications/pw-tracks/controllers/data_controller.rb", 50]
51 end  ["../applications/pw-tracks/controllers/data_controller.rb", 51]
52 respond_to do |format|  ["../applications/pw-tracks/controllers/data_controller.rb", 52]
53 format.html  ["../applications/pw-tracks/controllers/data_controller.rb", 53]
54 end  ["../applications/pw-tracks/controllers/data_controller.rb", 54]
55 end  ["../applications/pw-tracks/controllers/data_controller.rb", 55]
56 end  ["../applications/pw-tracks/controllers/data_controller.rb", 56]
57   ["../applications/pw-tracks/controllers/data_controller.rb", 57]
58 def csv_import  ["../applications/pw-tracks/controllers/data_controller.rb", 58]
59 begin  ["../applications/pw-tracks/controllers/data_controller.rb", 59]
60 filename = sanitize_filename(params[:file])  ["../applications/pw-tracks/controllers/data_controller.rb", 60]
61 path_and_file = Rails.root.join('public', 'uploads', 'csv', filename)  ["../applications/pw-tracks/controllers/data_controller.rb", 61]
62 case params[:import_to]  ["../applications/pw-tracks/controllers/data_controller.rb", 62]
63 when 'projects'  ["../applications/pw-tracks/controllers/data_controller.rb", 63]
64 count = Project.import path_and_file, params, current_user  ["../applications/pw-tracks/controllers/data_controller.rb", 64]
65 flash[:notice] = "#{count} Projects imported"  ["../applications/pw-tracks/controllers/data_controller.rb", 65]
66 when 'todos'  ["../applications/pw-tracks/controllers/data_controller.rb", 66]
67 count = Todo.import path_and_file, params, current_user  ["../applications/pw-tracks/controllers/data_controller.rb", 67]
68 flash[:notice] = "#{count} Todos imported"  ["../applications/pw-tracks/controllers/data_controller.rb", 68]
69 else  ["../applications/pw-tracks/controllers/data_controller.rb", 69]
70 flash[:error] = t('data.invalid_import_destination')  ["../applications/pw-tracks/controllers/data_controller.rb", 70]
71 end  ["../applications/pw-tracks/controllers/data_controller.rb", 71]
72 rescue Exception => e  ["../applications/pw-tracks/controllers/data_controller.rb", 72]
73 flash[:error] = t('data.invalid_import_destination') + ": #{e}"  ["../applications/pw-tracks/controllers/data_controller.rb", 73]
74 end  ["../applications/pw-tracks/controllers/data_controller.rb", 74]
75 File.delete(path_and_file)  ["../applications/pw-tracks/controllers/data_controller.rb", 75]
76 redirect_to import_data_path  ["../applications/pw-tracks/controllers/data_controller.rb", 76]
77 end  ["../applications/pw-tracks/controllers/data_controller.rb", 77]
78   ["../applications/pw-tracks/controllers/data_controller.rb", 78]
79 def import_headers(file)  ["../applications/pw-tracks/controllers/data_controller.rb", 79]
80 CSV.foreach(file, headers: false) do |row|  ["../applications/pw-tracks/controllers/data_controller.rb", 80]
81 return row  ["../applications/pw-tracks/controllers/data_controller.rb", 81]
82 end  ["../applications/pw-tracks/controllers/data_controller.rb", 82]
83 end  ["../applications/pw-tracks/controllers/data_controller.rb", 83]
84   ["../applications/pw-tracks/controllers/data_controller.rb", 84]
85 def export  ["../applications/pw-tracks/controllers/data_controller.rb", 85]
86 # Show list of formats for export  ["../applications/pw-tracks/controllers/data_controller.rb", 86]
87 end  ["../applications/pw-tracks/controllers/data_controller.rb", 87]
88   ["../applications/pw-tracks/controllers/data_controller.rb", 88]
89 # Thanks to a tip by Gleb Arshinov  ["../applications/pw-tracks/controllers/data_controller.rb", 89]
90 # <http://lists.rubyonrails.org/pipermail/rails/2004-November/000199.html>  ["../applications/pw-tracks/controllers/data_controller.rb", 90]
91 def yaml_export  ["../applications/pw-tracks/controllers/data_controller.rb", 91]
92 all_tables = {}  ["../applications/pw-tracks/controllers/data_controller.rb", 92]
93   ["../applications/pw-tracks/controllers/data_controller.rb", 93]
94 all_tables['todos'] = current_user.todos.includes(:tags).load  ["../applications/pw-tracks/controllers/data_controller.rb", 94]
95 all_tables['contexts'] = current_user.contexts.load  ["../applications/pw-tracks/controllers/data_controller.rb", 95]
96 all_tables['projects'] = current_user.projects.load  ["../applications/pw-tracks/controllers/data_controller.rb", 96]
97   ["../applications/pw-tracks/controllers/data_controller.rb", 97]
98 todo_tag_ids = Tag.find_by_sql([  ["../applications/pw-tracks/controllers/data_controller.rb", 98]
99 "SELECT DISTINCT tags.id "+  ["../applications/pw-tracks/controllers/data_controller.rb", 99]
100 "FROM tags, taggings, todos "+  ["../applications/pw-tracks/controllers/data_controller.rb", 100]
101 "WHERE todos.user_id=? "+  ["../applications/pw-tracks/controllers/data_controller.rb", 101]
102 "AND tags.id = taggings.tag_id " +  ["../applications/pw-tracks/controllers/data_controller.rb", 102]
103 "AND taggings.taggable_id = todos.id ", current_user.id])  ["../applications/pw-tracks/controllers/data_controller.rb", 103]
104 rec_todo_tag_ids = Tag.find_by_sql([  ["../applications/pw-tracks/controllers/data_controller.rb", 104]
105 "SELECT DISTINCT tags.id "+  ["../applications/pw-tracks/controllers/data_controller.rb", 105]
106 "FROM tags, taggings, recurring_todos "+  ["../applications/pw-tracks/controllers/data_controller.rb", 106]
107 "WHERE recurring_todos.user_id=? "+  ["../applications/pw-tracks/controllers/data_controller.rb", 107]
108 "AND tags.id = taggings.tag_id " +  ["../applications/pw-tracks/controllers/data_controller.rb", 108]
109 "AND taggings.taggable_id = recurring_todos.id ", current_user.id])  ["../applications/pw-tracks/controllers/data_controller.rb", 109]
110 tags = Tag.where("id IN (?) OR id IN (?)", todo_tag_ids, rec_todo_tag_ids)  ["../applications/pw-tracks/controllers/data_controller.rb", 110]
111 taggings = Tagging.where("tag_id IN (?) OR tag_id IN(?)", todo_tag_ids, rec_todo_tag_ids)  ["../applications/pw-tracks/controllers/data_controller.rb", 111]
112   ["../applications/pw-tracks/controllers/data_controller.rb", 112]
113 all_tables['tags'] = tags.load  ["../applications/pw-tracks/controllers/data_controller.rb", 113]
114 all_tables['taggings'] = taggings.load  ["../applications/pw-tracks/controllers/data_controller.rb", 114]
115 all_tables['notes'] = current_user.notes.load  ["../applications/pw-tracks/controllers/data_controller.rb", 115]
116 all_tables['recurring_todos'] = current_user.recurring_todos.load  ["../applications/pw-tracks/controllers/data_controller.rb", 116]
117   ["../applications/pw-tracks/controllers/data_controller.rb", 117]
118 result = all_tables.to_yaml  ["../applications/pw-tracks/controllers/data_controller.rb", 118]
119 result.gsub!(/\n/, "\r\n")   # TODO: general functionality for line endings  ["../applications/pw-tracks/controllers/data_controller.rb", 119]
120 send_data(result, :filename => "tracks_backup.yml", :type => 'text/plain')  ["../applications/pw-tracks/controllers/data_controller.rb", 120]
121 end  ["../applications/pw-tracks/controllers/data_controller.rb", 121]
122   ["../applications/pw-tracks/controllers/data_controller.rb", 122]
123 # export all actions as csv  ["../applications/pw-tracks/controllers/data_controller.rb", 123]
124 def csv_actions  ["../applications/pw-tracks/controllers/data_controller.rb", 124]
125 content_type = 'text/csv'  ["../applications/pw-tracks/controllers/data_controller.rb", 125]
126 CSV.generate(result = "") do |csv|  ["../applications/pw-tracks/controllers/data_controller.rb", 126]
127 csv << ["id", "Context", "Project", "Description", "Notes", "Tags",  ["../applications/pw-tracks/controllers/data_controller.rb", 127]
128 "Created at", "Due", "Completed at", "User ID", "Show from",  ["../applications/pw-tracks/controllers/data_controller.rb", 128]
129 "state"]  ["../applications/pw-tracks/controllers/data_controller.rb", 129]
130 current_user.todos.includes(:context, :project, :taggings, :tags).each do |todo|  ["../applications/pw-tracks/controllers/data_controller.rb", 130]
131 csv << [todo.id, todo.context.name,  ["../applications/pw-tracks/controllers/data_controller.rb", 131]
132 todo.project_id.nil? ? "" : todo.project.name,  ["../applications/pw-tracks/controllers/data_controller.rb", 132]
133 todo.description,  ["../applications/pw-tracks/controllers/data_controller.rb", 133]
134 todo.notes, todo.tags.collect{|t| t.name}.join(', '),  ["../applications/pw-tracks/controllers/data_controller.rb", 134]
135 todo.created_at.to_formatted_s(:db),  ["../applications/pw-tracks/controllers/data_controller.rb", 135]
136 todo.due? ? todo.due.to_formatted_s(:db) : "",  ["../applications/pw-tracks/controllers/data_controller.rb", 136]
137 todo.completed_at? ? todo.completed_at.to_formatted_s(:db) : "",  ["../applications/pw-tracks/controllers/data_controller.rb", 137]
138 todo.user_id,  ["../applications/pw-tracks/controllers/data_controller.rb", 138]
139 todo.show_from? ? todo.show_from.to_formatted_s(:db) : "",  ["../applications/pw-tracks/controllers/data_controller.rb", 139]
140 todo.state]  ["../applications/pw-tracks/controllers/data_controller.rb", 140]
141 end  ["../applications/pw-tracks/controllers/data_controller.rb", 141]
142 end  ["../applications/pw-tracks/controllers/data_controller.rb", 142]
143 send_data(result, :filename => "todos.csv", :type => content_type)  ["../applications/pw-tracks/controllers/data_controller.rb", 143]
144 end  ["../applications/pw-tracks/controllers/data_controller.rb", 144]
145   ["../applications/pw-tracks/controllers/data_controller.rb", 145]
146 # export all notes as csv  ["../applications/pw-tracks/controllers/data_controller.rb", 146]
147 def csv_notes  ["../applications/pw-tracks/controllers/data_controller.rb", 147]
148 content_type = 'text/csv'  ["../applications/pw-tracks/controllers/data_controller.rb", 148]
149 CSV.generate(result = "") do |csv|  ["../applications/pw-tracks/controllers/data_controller.rb", 149]
150 csv << ["id", "User ID", "Project", "Note",  ["../applications/pw-tracks/controllers/data_controller.rb", 150]
151 "Created at", "Updated at"]  ["../applications/pw-tracks/controllers/data_controller.rb", 151]
152 # had to remove project include because it's association order is leaking  ["../applications/pw-tracks/controllers/data_controller.rb", 152]
153 # through and causing an ambiguous column ref even with_exclusive_scope  ["../applications/pw-tracks/controllers/data_controller.rb", 153]
154 # didn't seem to help -JamesKebinger  ["../applications/pw-tracks/controllers/data_controller.rb", 154]
155 current_user.notes.reorder("notes.created_at").each do |note|  ["../applications/pw-tracks/controllers/data_controller.rb", 155]
156 # Format dates in ISO format for easy sorting in spreadsheet Print  ["../applications/pw-tracks/controllers/data_controller.rb", 156]
157 # context and project names for easy viewing  ["../applications/pw-tracks/controllers/data_controller.rb", 157]
158 csv << [note.id, note.user_id,  ["../applications/pw-tracks/controllers/data_controller.rb", 158]
159 note.project_id = note.project_id.nil? ? "" : note.project.name,  ["../applications/pw-tracks/controllers/data_controller.rb", 159]
160 note.body, note.created_at.to_formatted_s(:db),  ["../applications/pw-tracks/controllers/data_controller.rb", 160]
161 note.updated_at.to_formatted_s(:db)]  ["../applications/pw-tracks/controllers/data_controller.rb", 161]
162 end  ["../applications/pw-tracks/controllers/data_controller.rb", 162]
163 end  ["../applications/pw-tracks/controllers/data_controller.rb", 163]
164 send_data(result, :filename => "notes.csv", :type => content_type)  ["../applications/pw-tracks/controllers/data_controller.rb", 164]
165 end  ["../applications/pw-tracks/controllers/data_controller.rb", 165]
166   ["../applications/pw-tracks/controllers/data_controller.rb", 166]
167 def xml_export  ["../applications/pw-tracks/controllers/data_controller.rb", 167]
168 todo_tag_ids = Tag.find_by_sql([  ["../applications/pw-tracks/controllers/data_controller.rb", 168]
169 "SELECT DISTINCT tags.id "+  ["../applications/pw-tracks/controllers/data_controller.rb", 169]
170 "FROM tags, taggings, todos "+  ["../applications/pw-tracks/controllers/data_controller.rb", 170]
171 "WHERE todos.user_id=? "+  ["../applications/pw-tracks/controllers/data_controller.rb", 171]
172 "AND tags.id = taggings.tag_id " +  ["../applications/pw-tracks/controllers/data_controller.rb", 172]
173 "AND taggings.taggable_id = todos.id ", current_user.id])  ["../applications/pw-tracks/controllers/data_controller.rb", 173]
174 rec_todo_tag_ids = Tag.find_by_sql([  ["../applications/pw-tracks/controllers/data_controller.rb", 174]
175 "SELECT DISTINCT tags.id "+  ["../applications/pw-tracks/controllers/data_controller.rb", 175]
176 "FROM tags, taggings, recurring_todos "+  ["../applications/pw-tracks/controllers/data_controller.rb", 176]
177 "WHERE recurring_todos.user_id=? "+  ["../applications/pw-tracks/controllers/data_controller.rb", 177]
178 "AND tags.id = taggings.tag_id " +  ["../applications/pw-tracks/controllers/data_controller.rb", 178]
179 "AND taggings.taggable_id = recurring_todos.id ", current_user.id])  ["../applications/pw-tracks/controllers/data_controller.rb", 179]
180 tags = Tag.where("id IN (?) OR id IN (?)", todo_tag_ids, rec_todo_tag_ids)  ["../applications/pw-tracks/controllers/data_controller.rb", 180]
181 taggings = Tagging.where("tag_id IN (?) OR tag_id IN(?)", todo_tag_ids, rec_todo_tag_ids)  ["../applications/pw-tracks/controllers/data_controller.rb", 181]
182   ["../applications/pw-tracks/controllers/data_controller.rb", 182]
183 result = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><tracks_data>"  ["../applications/pw-tracks/controllers/data_controller.rb", 183]
184 result << current_user.todos.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 184]
185 result << current_user.contexts.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 185]
186 result << current_user.projects.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 186]
187 result << tags.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 187]
188 result << taggings.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 188]
189 result << current_user.notes.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 189]
190 result << current_user.recurring_todos.to_xml(:skip_instruct => true)  ["../applications/pw-tracks/controllers/data_controller.rb", 190]
191 result << "</tracks_data>"  ["../applications/pw-tracks/controllers/data_controller.rb", 191]
192 send_data(result, :filename => "tracks_data.xml", :type => 'text/xml')  ["../applications/pw-tracks/controllers/data_controller.rb", 192]
193 end  ["../applications/pw-tracks/controllers/data_controller.rb", 193]
194   ["../applications/pw-tracks/controllers/data_controller.rb", 194]
195 def yaml_form  ["../applications/pw-tracks/controllers/data_controller.rb", 195]
196 # Draw the form to input the YAML text data  ["../applications/pw-tracks/controllers/data_controller.rb", 196]
197 end  ["../applications/pw-tracks/controllers/data_controller.rb", 197]
198   ["../applications/pw-tracks/controllers/data_controller.rb", 198]
199 # adjusts time to utc  ["../applications/pw-tracks/controllers/data_controller.rb", 199]
200 def adjust_time(timestring)  ["../applications/pw-tracks/controllers/data_controller.rb", 200]
201 if (timestring=='') or ( timestring == nil)  ["../applications/pw-tracks/controllers/data_controller.rb", 201]
202 return nil  ["../applications/pw-tracks/controllers/data_controller.rb", 202]
203 else  ["../applications/pw-tracks/controllers/data_controller.rb", 203]
204 return Time.parse(timestring + 'UTC')  ["../applications/pw-tracks/controllers/data_controller.rb", 204]
205 end  ["../applications/pw-tracks/controllers/data_controller.rb", 205]
206 end  ["../applications/pw-tracks/controllers/data_controller.rb", 206]
207   ["../applications/pw-tracks/controllers/data_controller.rb", 207]
208 def yaml_import  ["../applications/pw-tracks/controllers/data_controller.rb", 208]
209 raise "YAML loading is disabled"  ["../applications/pw-tracks/controllers/data_controller.rb", 209]
210 end  ["../applications/pw-tracks/controllers/data_controller.rb", 210]
211   ["../applications/pw-tracks/controllers/data_controller.rb", 211]
212 private  ["../applications/pw-tracks/controllers/data_controller.rb", 212]
213 def sanitize_filename(filename)  ["../applications/pw-tracks/controllers/data_controller.rb", 213]
214 filename.gsub(/[^0-9A-z.\-]/, '_')  ["../applications/pw-tracks/controllers/data_controller.rb", 214]
215 end  ["../applications/pw-tracks/controllers/data_controller.rb", 215]
216   ["../applications/pw-tracks/controllers/data_controller.rb", 216]
217 end  ["../applications/pw-tracks/controllers/data_controller.rb", 217]
LENGTH: 45
1 class FeedlistController < ApplicationController  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 2]
3 helper :feedlist  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 4]
5 def index  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 5]
6 @page_title = 'TRACKS::Feeds'  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 6]
7   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 7]
8 unless mobile?  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 8]
9 init_data_for_sidebar  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 9]
10 else  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 10]
11 @projects = current_user.projects  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 11]
12 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 12]
13 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 13]
14   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 14]
15 @active_projects = current_user.projects.active  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 15]
16 @hidden_projects = current_user.projects.hidden  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 16]
17 @completed_projects = current_user.projects.completed  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 17]
18   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 18]
19 @active_contexts = current_user.contexts.active  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 19]
20 @hidden_contexts = current_user.contexts.hidden  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 20]
21   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 21]
22 respond_to do |format|  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 22]
23 format.html  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 23]
24 format.m  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 24]
25 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 25]
26 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 26]
27   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 27]
28 def get_feeds_for_context  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 28]
29 get_feeds_for(@context = current_user.contexts.find(params[:context_id]))  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 29]
30 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 30]
31   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 31]
32 def get_feeds_for_project  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 32]
33 get_feeds_for(@project = current_user.projects.find(params[:project_id]))  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 33]
34 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 34]
35   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 35]
36 private  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 36]
37   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 37]
38 def get_feeds_for(object)  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 38]
39 respond_to do |format|  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 39]
40 format.html { render :file => "feedlist/get_feeds_for_#{object.class.name.downcase}"}  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 40]
41 format.js  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 41]
42 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 42]
43 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 43]
44   ["../applications/pw-tracks/controllers/feedlist_controller.rb", 44]
45 end  ["../applications/pw-tracks/controllers/feedlist_controller.rb", 45]
LENGTH: 60
1 class IntegrationsController < ApplicationController  ["../applications/pw-tracks/controllers/integrations_controller.rb", 1]
2 require 'mail'  ["../applications/pw-tracks/controllers/integrations_controller.rb", 2]
3   ["../applications/pw-tracks/controllers/integrations_controller.rb", 3]
4 skip_before_filter :login_required, :only => [:cloudmailin, :search_plugin]  ["../applications/pw-tracks/controllers/integrations_controller.rb", 4]
5 skip_before_filter :verify_authenticity_token, only: [:cloudmailin]  ["../applications/pw-tracks/controllers/integrations_controller.rb", 5]
6   ["../applications/pw-tracks/controllers/integrations_controller.rb", 6]
7 def index  ["../applications/pw-tracks/controllers/integrations_controller.rb", 7]
8 @page_title = 'TRACKS::Integrations'  ["../applications/pw-tracks/controllers/integrations_controller.rb", 8]
9 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 9]
10   ["../applications/pw-tracks/controllers/integrations_controller.rb", 10]
11 def rest_api  ["../applications/pw-tracks/controllers/integrations_controller.rb", 11]
12 @page_title = 'TRACKS::REST API Documentation'  ["../applications/pw-tracks/controllers/integrations_controller.rb", 12]
13 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 13]
14   ["../applications/pw-tracks/controllers/integrations_controller.rb", 14]
15 def search_plugin  ["../applications/pw-tracks/controllers/integrations_controller.rb", 15]
16 @icon_data = [File.open(File.join(Rails.root, 'app', 'assets', 'images', 'done.png')).read].  ["../applications/pw-tracks/controllers/integrations_controller.rb", 16]
17 pack('m').gsub(/\n/, '')  ["../applications/pw-tracks/controllers/integrations_controller.rb", 17]
18 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 18]
19   ["../applications/pw-tracks/controllers/integrations_controller.rb", 19]
20 def cloudmailin  ["../applications/pw-tracks/controllers/integrations_controller.rb", 20]
21 if !verify_cloudmailin_signature  ["../applications/pw-tracks/controllers/integrations_controller.rb", 21]
22 render :text => "Message signature verification failed.", :status => 403  ["../applications/pw-tracks/controllers/integrations_controller.rb", 22]
23 return false  ["../applications/pw-tracks/controllers/integrations_controller.rb", 23]
24 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 24]
25   ["../applications/pw-tracks/controllers/integrations_controller.rb", 25]
26 if process_message(params[:message])  ["../applications/pw-tracks/controllers/integrations_controller.rb", 26]
27 render :text => 'success', :status => 200  ["../applications/pw-tracks/controllers/integrations_controller.rb", 27]
28 else  ["../applications/pw-tracks/controllers/integrations_controller.rb", 28]
29 render :text => "No user found or other error", :status => 404  ["../applications/pw-tracks/controllers/integrations_controller.rb", 29]
30 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 30]
31 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 31]
32   ["../applications/pw-tracks/controllers/integrations_controller.rb", 32]
33 private  ["../applications/pw-tracks/controllers/integrations_controller.rb", 33]
34   ["../applications/pw-tracks/controllers/integrations_controller.rb", 34]
35 def process_message(message)  ["../applications/pw-tracks/controllers/integrations_controller.rb", 35]
36 MessageGateway::receive(Mail.new(message))  ["../applications/pw-tracks/controllers/integrations_controller.rb", 36]
37 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 37]
38   ["../applications/pw-tracks/controllers/integrations_controller.rb", 38]
39 def verify_cloudmailin_signature  ["../applications/pw-tracks/controllers/integrations_controller.rb", 39]
40 provided = request.request_parameters.delete(:signature)  ["../applications/pw-tracks/controllers/integrations_controller.rb", 40]
41 signature = Digest::MD5.hexdigest(flatten_params(request.request_parameters).sort.map{|k,v| v}.join + SITE_CONFIG['cloudmailin'])  ["../applications/pw-tracks/controllers/integrations_controller.rb", 41]
42 return provided == signature  ["../applications/pw-tracks/controllers/integrations_controller.rb", 42]
43 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 43]
44   ["../applications/pw-tracks/controllers/integrations_controller.rb", 44]
45 def flatten_params(params, title = nil, result = {})  ["../applications/pw-tracks/controllers/integrations_controller.rb", 45]
46 params.each do |key, value|  ["../applications/pw-tracks/controllers/integrations_controller.rb", 46]
47 if value.kind_of?(Hash)  ["../applications/pw-tracks/controllers/integrations_controller.rb", 47]
48 key_name = title ? "#{title}[#{key}]" : key  ["../applications/pw-tracks/controllers/integrations_controller.rb", 48]
49 flatten_params(value, key_name, result)  ["../applications/pw-tracks/controllers/integrations_controller.rb", 49]
50 else  ["../applications/pw-tracks/controllers/integrations_controller.rb", 50]
51 key_name = title ? "#{title}[#{key}]" : key  ["../applications/pw-tracks/controllers/integrations_controller.rb", 51]
52 result[key_name] = value  ["../applications/pw-tracks/controllers/integrations_controller.rb", 52]
53 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 53]
54 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 54]
55   ["../applications/pw-tracks/controllers/integrations_controller.rb", 55]
56 return result  ["../applications/pw-tracks/controllers/integrations_controller.rb", 56]
57 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 57]
58   ["../applications/pw-tracks/controllers/integrations_controller.rb", 58]
59 end  ["../applications/pw-tracks/controllers/integrations_controller.rb", 59]
60   ["../applications/pw-tracks/controllers/integrations_controller.rb", 60]
LENGTH: 91
1 class LoginController < ApplicationController  ["../applications/pw-tracks/controllers/login_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/login_controller.rb", 2]
3 layout 'login'  ["../applications/pw-tracks/controllers/login_controller.rb", 3]
4 skip_before_filter :set_session_expiration  ["../applications/pw-tracks/controllers/login_controller.rb", 4]
5 skip_before_filter :login_required  ["../applications/pw-tracks/controllers/login_controller.rb", 5]
6 before_filter :login_optional  ["../applications/pw-tracks/controllers/login_controller.rb", 6]
7 before_filter :get_current_user  ["../applications/pw-tracks/controllers/login_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/login_controller.rb", 8]
9 protect_from_forgery :except => [:check_expiry, :login]  ["../applications/pw-tracks/controllers/login_controller.rb", 9]
10   ["../applications/pw-tracks/controllers/login_controller.rb", 10]
11 def login  ["../applications/pw-tracks/controllers/login_controller.rb", 11]
12 @page_title = "TRACKS::Login"  ["../applications/pw-tracks/controllers/login_controller.rb", 12]
13 cookies[:preferred_auth] = prefered_auth? unless cookies[:preferred_auth]  ["../applications/pw-tracks/controllers/login_controller.rb", 13]
14 case request.method  ["../applications/pw-tracks/controllers/login_controller.rb", 14]
15 when 'POST'  ["../applications/pw-tracks/controllers/login_controller.rb", 15]
16 if @user = User.authenticate(params['user_login'], params['user_password'])  ["../applications/pw-tracks/controllers/login_controller.rb", 16]
17 return handle_post_success  ["../applications/pw-tracks/controllers/login_controller.rb", 17]
18 else  ["../applications/pw-tracks/controllers/login_controller.rb", 18]
19 handle_post_failure  ["../applications/pw-tracks/controllers/login_controller.rb", 19]
20 end  ["../applications/pw-tracks/controllers/login_controller.rb", 20]
21 when 'GET'  ["../applications/pw-tracks/controllers/login_controller.rb", 21]
22 if User.no_users_yet?  ["../applications/pw-tracks/controllers/login_controller.rb", 22]
23 return redirect_to signup_path  ["../applications/pw-tracks/controllers/login_controller.rb", 23]
24 end  ["../applications/pw-tracks/controllers/login_controller.rb", 24]
25 end  ["../applications/pw-tracks/controllers/login_controller.rb", 25]
26 respond_to do |format|  ["../applications/pw-tracks/controllers/login_controller.rb", 26]
27 format.html  ["../applications/pw-tracks/controllers/login_controller.rb", 27]
28 format.m   { render :action => 'login', :layout => 'mobile' }  ["../applications/pw-tracks/controllers/login_controller.rb", 28]
29 bootstrap_flash :close_button => false  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 1]
30 t('login.account_login')  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 2]
31 t('login.please_login')  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 3]
32 form_tag login_path do  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 4]
33 label_tag "user_login", User.human_attribute_name('login')  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 5]
34 text_field_tag "user_login", nil, class: "form-control"  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 6]
35 label_tag "user_password", User.human_attribute_name("password")  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 7]
36 password_field_tag "user_password", nil, class: "form-control"  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 8]
37 t("login.user_no_expiry")  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 9]
38 submit_tag t("login.sign_in"), class: "btn btn-default"  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 10]
39 end  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 11]
40 render :partial => "shared/footer"  ["../applications/pw-tracks//ruby_views/login/login.html.erb", 12]
41 end  ["../applications/pw-tracks/controllers/login_controller.rb", 29]
42 end  ["../applications/pw-tracks/controllers/login_controller.rb", 30]
43   ["../applications/pw-tracks/controllers/login_controller.rb", 31]
44 def logout  ["../applications/pw-tracks/controllers/login_controller.rb", 32]
45 logout_user  ["../applications/pw-tracks/controllers/login_controller.rb", 33]
46 end  ["../applications/pw-tracks/controllers/login_controller.rb", 34]
47   ["../applications/pw-tracks/controllers/login_controller.rb", 35]
48 def check_expiry  ["../applications/pw-tracks/controllers/login_controller.rb", 36]
49 # Gets called by periodically_call_remote to check whether  ["../applications/pw-tracks/controllers/login_controller.rb", 37]
50 # the session has timed out yet  ["../applications/pw-tracks/controllers/login_controller.rb", 38]
51 unless session == nil  ["../applications/pw-tracks/controllers/login_controller.rb", 39]
52 if session  ["../applications/pw-tracks/controllers/login_controller.rb", 40]
53 return unless should_expire_sessions?  ["../applications/pw-tracks/controllers/login_controller.rb", 41]
54 # Get expiry time (allow ten seconds window for the case where we have none)  ["../applications/pw-tracks/controllers/login_controller.rb", 42]
55 expiry_time = session['expiry_time'] || Time.now + 10  ["../applications/pw-tracks/controllers/login_controller.rb", 43]
56 time_left = expiry_time - Time.now  ["../applications/pw-tracks/controllers/login_controller.rb", 44]
57 @session_expired = ( time_left < (10*60) ) # Session will time out before the next check  ["../applications/pw-tracks/controllers/login_controller.rb", 45]
58 end  ["../applications/pw-tracks/controllers/login_controller.rb", 46]
59 end  ["../applications/pw-tracks/controllers/login_controller.rb", 47]
60 respond_to do |format|  ["../applications/pw-tracks/controllers/login_controller.rb", 48]
61 format.js  ["../applications/pw-tracks/controllers/login_controller.rb", 49]
62 end  ["../applications/pw-tracks/controllers/login_controller.rb", 50]
63 end  ["../applications/pw-tracks/controllers/login_controller.rb", 51]
64   ["../applications/pw-tracks/controllers/login_controller.rb", 52]
65 private  ["../applications/pw-tracks/controllers/login_controller.rb", 53]
66   ["../applications/pw-tracks/controllers/login_controller.rb", 54]
67 def handle_post_success  ["../applications/pw-tracks/controllers/login_controller.rb", 55]
68 session['user_id'] = @user.id  ["../applications/pw-tracks/controllers/login_controller.rb", 56]
69 # If checkbox on login page checked, we don't expire the session after 1 hour  ["../applications/pw-tracks/controllers/login_controller.rb", 57]
70 # of inactivity and we remember this user for future browser sessions  ["../applications/pw-tracks/controllers/login_controller.rb", 58]
71 session['noexpiry'] = params['user_noexpiry']  ["../applications/pw-tracks/controllers/login_controller.rb", 59]
72 msg = (should_expire_sessions?) ? "will expire after 1 hour of inactivity." : "will not expire."  ["../applications/pw-tracks/controllers/login_controller.rb", 60]
73 notify :notice, "Login successful: session #{msg}"  ["../applications/pw-tracks/controllers/login_controller.rb", 61]
74 cookies[:tracks_login] = { :value => @user.login, :expires => Time.now + 1.year, :secure => SITE_CONFIG['secure_cookies'] }  ["../applications/pw-tracks/controllers/login_controller.rb", 62]
75 unless should_expire_sessions?  ["../applications/pw-tracks/controllers/login_controller.rb", 63]
76 @user.remember_me  ["../applications/pw-tracks/controllers/login_controller.rb", 64]
77 cookies[:auth_token] = { :value => @user.remember_token , :expires => @user.remember_token_expires_at, :secure => SITE_CONFIG['secure_cookies'] }  ["../applications/pw-tracks/controllers/login_controller.rb", 65]
78 end  ["../applications/pw-tracks/controllers/login_controller.rb", 66]
79 redirect_back_or_home  ["../applications/pw-tracks/controllers/login_controller.rb", 67]
80 end  ["../applications/pw-tracks/controllers/login_controller.rb", 68]
81   ["../applications/pw-tracks/controllers/login_controller.rb", 69]
82 def handle_post_failure  ["../applications/pw-tracks/controllers/login_controller.rb", 70]
83 @login = params['user_login']  ["../applications/pw-tracks/controllers/login_controller.rb", 71]
84 notify :warning, t('login.unsuccessful')  ["../applications/pw-tracks/controllers/login_controller.rb", 72]
85 end  ["../applications/pw-tracks/controllers/login_controller.rb", 73]
86   ["../applications/pw-tracks/controllers/login_controller.rb", 74]
87 def should_expire_sessions?  ["../applications/pw-tracks/controllers/login_controller.rb", 75]
88 session['noexpiry'] != "on"  ["../applications/pw-tracks/controllers/login_controller.rb", 76]
89 end  ["../applications/pw-tracks/controllers/login_controller.rb", 77]
90   ["../applications/pw-tracks/controllers/login_controller.rb", 78]
91 end  ["../applications/pw-tracks/controllers/login_controller.rb", 79]
LENGTH: 38
1 require 'openssl'  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 2]
3 class MailgunController < ApplicationController  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 4]
5 skip_before_filter :login_required, :only => [:mailgun]  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 5]
6 before_filter :verify, :only => [:mailgun]  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 6]
7 protect_from_forgery with: :null_session  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 8]
9 def mailgun  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 9]
10 unless params.include? 'body-mime'  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 10]
11 Rails.logger.info "Cannot process Mailgun request, no body-mime sent"  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 11]
12 render_failure "Unacceptable body-mime", 406  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 12]
13 return  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 13]
14 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 14]
15   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 15]
16 todo = MessageGateway.receive(params['body-mime'])  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 16]
17 if todo  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 17]
18 render :xml => todo.to_xml( *todo_xml_params )  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 18]
19 else  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 19]
20 render_failure "Todo not saved", 406  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 20]
21 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 21]
22 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 22]
23   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 23]
24 private  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 24]
25   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 25]
26 def verify  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 26]
27 unless params['signature'] == OpenSSL::HMAC.hexdigest(  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 27]
28 OpenSSL::Digest.new('sha256'),  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 28]
29 SITE_CONFIG['mailgun_api_key'],  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 29]
30 '%s%s' % [params['timestamp'], params['token']]  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 30]
31 )  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 31]
32 Rails.logger.info "Cannot verify Mailgun signature"  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 32]
33 render_failure "Access denied", 406  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 33]
34 return  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 34]
35 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 35]
36 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 36]
37   ["../applications/pw-tracks/controllers/mailgun_controller.rb", 37]
38 end  ["../applications/pw-tracks/controllers/mailgun_controller.rb", 38]
LENGTH: 79
1 class NotesController < ApplicationController  ["../applications/pw-tracks/controllers/notes_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/notes_controller.rb", 2]
3 before_filter :set_source_view  ["../applications/pw-tracks/controllers/notes_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/notes_controller.rb", 4]
5 def index  ["../applications/pw-tracks/controllers/notes_controller.rb", 5]
6 @all_notes = current_user.notes  ["../applications/pw-tracks/controllers/notes_controller.rb", 6]
7 @count = @all_notes.size  ["../applications/pw-tracks/controllers/notes_controller.rb", 7]
8 @page_title = "TRACKS::All notes"  ["../applications/pw-tracks/controllers/notes_controller.rb", 8]
9 @source_view = 'note_list'  ["../applications/pw-tracks/controllers/notes_controller.rb", 9]
10 respond_to do |format|  ["../applications/pw-tracks/controllers/notes_controller.rb", 10]
11 format.html  ["../applications/pw-tracks/controllers/notes_controller.rb", 11]
12 format.xml { render :xml => @all_notes.to_xml( :except => :user_id )  }  ["../applications/pw-tracks/controllers/notes_controller.rb", 12]
13 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 13]
14 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 14]
15   ["../applications/pw-tracks/controllers/notes_controller.rb", 15]
16 def show  ["../applications/pw-tracks/controllers/notes_controller.rb", 16]
17 @note = current_user.notes.find(params['id'])  ["../applications/pw-tracks/controllers/notes_controller.rb", 17]
18 @page_title = "TRACKS::Note " + @note.id.to_s  ["../applications/pw-tracks/controllers/notes_controller.rb", 18]
19 respond_to do |format|  ["../applications/pw-tracks/controllers/notes_controller.rb", 19]
20 format.html  ["../applications/pw-tracks/controllers/notes_controller.rb", 20]
21 format.m  ["../applications/pw-tracks/controllers/notes_controller.rb", 21]
22 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 22]
23 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 23]
24   ["../applications/pw-tracks/controllers/notes_controller.rb", 24]
25 def create  ["../applications/pw-tracks/controllers/notes_controller.rb", 25]
26 @note = current_user.notes.build  ["../applications/pw-tracks/controllers/notes_controller.rb", 26]
27 @note.attributes = note_params  ["../applications/pw-tracks/controllers/notes_controller.rb", 27]
28   ["../applications/pw-tracks/controllers/notes_controller.rb", 28]
29 @saved = @note.save  ["../applications/pw-tracks/controllers/notes_controller.rb", 29]
30   ["../applications/pw-tracks/controllers/notes_controller.rb", 30]
31 respond_to do |format|  ["../applications/pw-tracks/controllers/notes_controller.rb", 31]
32 format.js  ["../applications/pw-tracks/controllers/notes_controller.rb", 32]
33 format.xml do  ["../applications/pw-tracks/controllers/notes_controller.rb", 33]
34 if @saved  ["../applications/pw-tracks/controllers/notes_controller.rb", 34]
35 head :created, :location => note_url(@note), :text => "new note with id #{@note.id}"  ["../applications/pw-tracks/controllers/notes_controller.rb", 35]
36 else  ["../applications/pw-tracks/controllers/notes_controller.rb", 36]
37 render_failure @note.errors.full_messages.join(', ')  ["../applications/pw-tracks/controllers/notes_controller.rb", 37]
38 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 38]
39 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 39]
40 format.html do  ["../applications/pw-tracks/controllers/notes_controller.rb", 40]
41 render :text => 'unexpected request for html rendering'  ["../applications/pw-tracks/controllers/notes_controller.rb", 41]
42 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 42]
43 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 43]
44 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 44]
45   ["../applications/pw-tracks/controllers/notes_controller.rb", 45]
46 def update  ["../applications/pw-tracks/controllers/notes_controller.rb", 46]
47 @note = current_user.notes.find(params['id'])  ["../applications/pw-tracks/controllers/notes_controller.rb", 47]
48 @note.attributes = note_params  ["../applications/pw-tracks/controllers/notes_controller.rb", 48]
49 @saved = @note.save  ["../applications/pw-tracks/controllers/notes_controller.rb", 49]
50 respond_to do |format|  ["../applications/pw-tracks/controllers/notes_controller.rb", 50]
51 format.html  ["../applications/pw-tracks/controllers/notes_controller.rb", 51]
52 format.js { render }  ["../applications/pw-tracks/controllers/notes_controller.rb", 52]
53 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 53]
54 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 54]
55   ["../applications/pw-tracks/controllers/notes_controller.rb", 55]
56 def destroy  ["../applications/pw-tracks/controllers/notes_controller.rb", 56]
57 @note = current_user.notes.find(params['id'])  ["../applications/pw-tracks/controllers/notes_controller.rb", 57]
58 @note.destroy  ["../applications/pw-tracks/controllers/notes_controller.rb", 58]
59 set_source_view  ["../applications/pw-tracks/controllers/notes_controller.rb", 59]
60   ["../applications/pw-tracks/controllers/notes_controller.rb", 60]
61 respond_to do |format|  ["../applications/pw-tracks/controllers/notes_controller.rb", 61]
62 format.html  ["../applications/pw-tracks/controllers/notes_controller.rb", 62]
63 format.js { @down_count = current_user.notes.size }  ["../applications/pw-tracks/controllers/notes_controller.rb", 63]
64 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 64]
65 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 65]
66   ["../applications/pw-tracks/controllers/notes_controller.rb", 66]
67 protected  ["../applications/pw-tracks/controllers/notes_controller.rb", 67]
68   ["../applications/pw-tracks/controllers/notes_controller.rb", 68]
69 def set_source_view  ["../applications/pw-tracks/controllers/notes_controller.rb", 69]
70 @source_view = params['_source_view'] || 'note'  ["../applications/pw-tracks/controllers/notes_controller.rb", 70]
71 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 71]
72   ["../applications/pw-tracks/controllers/notes_controller.rb", 72]
73 private  ["../applications/pw-tracks/controllers/notes_controller.rb", 73]
74   ["../applications/pw-tracks/controllers/notes_controller.rb", 74]
75 def note_params  ["../applications/pw-tracks/controllers/notes_controller.rb", 75]
76 params.require(:note).permit(:project_id, :body)  ["../applications/pw-tracks/controllers/notes_controller.rb", 76]
77 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 77]
78   ["../applications/pw-tracks/controllers/notes_controller.rb", 78]
79 end  ["../applications/pw-tracks/controllers/notes_controller.rb", 79]
LENGTH: 69
1 class PreferencesController < ApplicationController  ["../applications/pw-tracks/controllers/preferences_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/preferences_controller.rb", 2]
3 def index  ["../applications/pw-tracks/controllers/preferences_controller.rb", 3]
4 @page_title = t('preferences.page_title')  ["../applications/pw-tracks/controllers/preferences_controller.rb", 4]
5 @prefs = current_user.prefs  ["../applications/pw-tracks/controllers/preferences_controller.rb", 5]
6 @user = current_user  ["../applications/pw-tracks/controllers/preferences_controller.rb", 6]
7 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/preferences_controller.rb", 8]
9 def update  ["../applications/pw-tracks/controllers/preferences_controller.rb", 9]
10 @prefs = current_user.prefs  ["../applications/pw-tracks/controllers/preferences_controller.rb", 10]
11 @user = current_user  ["../applications/pw-tracks/controllers/preferences_controller.rb", 11]
12 user_updated = current_user.update_attributes(user_params)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 12]
13 prefs_updated = current_user.preference.update_attributes(prefs_params)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 13]
14 if (user_updated && prefs_updated)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 14]
15 if params['user']['password'].present? # password updated?  ["../applications/pw-tracks/controllers/preferences_controller.rb", 15]
16 logout_user t('preferences.password_changed')  ["../applications/pw-tracks/controllers/preferences_controller.rb", 16]
17 else  ["../applications/pw-tracks/controllers/preferences_controller.rb", 17]
18 preference_updated  ["../applications/pw-tracks/controllers/preferences_controller.rb", 18]
19 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 19]
20 else  ["../applications/pw-tracks/controllers/preferences_controller.rb", 20]
21 msg = "Preferences could not be updated: "  ["../applications/pw-tracks/controllers/preferences_controller.rb", 21]
22 msg += "User model errors; " unless user_updated  ["../applications/pw-tracks/controllers/preferences_controller.rb", 22]
23 msg += "Prefs model errors; " unless prefs_updated  ["../applications/pw-tracks/controllers/preferences_controller.rb", 23]
24 notify :warning, msg  ["../applications/pw-tracks/controllers/preferences_controller.rb", 24]
25 render 'index'  ["../applications/pw-tracks/controllers/preferences_controller.rb", 25]
26 get_list_of_error_messages_for(@user)  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 1]
27 get_list_of_error_messages_for(@prefs)  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 2]
28 form_for(@prefs) do  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 3]
29 link_to t('preferences.tabs.profile'), "#profile", data: { toggle: "tab" }  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 4]
30 link_to t('preferences.tabs.authentication'), "#authentication", data: { toggle: "tab" }  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 5]
31 link_to t('preferences.tabs.date_and_time'), "#date_and_time", data: { toggle: "tab" }  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 6]
32 link_to t('preferences.tabs.tracks_behavior'), "#behavior", data: { toggle: "tab" }  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 7]
33 render :partial => 'profile'  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 8]
34 render :partial => 'authentication'  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 9]
35 render :partial => 'date_and_time'  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 10]
36 render :partial => 'tracks_behavior'  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 11]
37 t('common.update')  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 12]
38 end  ["../applications/pw-tracks//ruby_views/preferences/index.html.erb", 13]
39 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 26]
40 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 27]
41   ["../applications/pw-tracks/controllers/preferences_controller.rb", 28]
42 def render_date_format  ["../applications/pw-tracks/controllers/preferences_controller.rb", 29]
43 format = params[:date_format]  ["../applications/pw-tracks/controllers/preferences_controller.rb", 30]
44 render :text => l(Date.current, :format => format)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 31]
45 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 32]
46   ["../applications/pw-tracks/controllers/preferences_controller.rb", 33]
47 private  ["../applications/pw-tracks/controllers/preferences_controller.rb", 34]
48   ["../applications/pw-tracks/controllers/preferences_controller.rb", 35]
49 def prefs_params  ["../applications/pw-tracks/controllers/preferences_controller.rb", 36]
50 params.require(:prefs).permit(  ["../applications/pw-tracks/controllers/preferences_controller.rb", 37]
51 :date_format, :week_starts, :show_number_completed,  ["../applications/pw-tracks/controllers/preferences_controller.rb", 38]
52 :show_completed_projects_in_sidebar, :show_hidden_contexts_in_sidebar,  ["../applications/pw-tracks/controllers/preferences_controller.rb", 39]
53 :staleness_starts, :due_style, :locale, :title_date_format, :time_zone,  ["../applications/pw-tracks/controllers/preferences_controller.rb", 40]
54 :show_hidden_projects_in_sidebar, :show_project_on_todo_done,  ["../applications/pw-tracks/controllers/preferences_controller.rb", 41]
55 :review_period, :refresh, :verbose_action_descriptors,  ["../applications/pw-tracks/controllers/preferences_controller.rb", 42]
56 :mobile_todos_per_page, :sms_email, :sms_context_id)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 43]
57 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 44]
58   ["../applications/pw-tracks/controllers/preferences_controller.rb", 45]
59 def user_params  ["../applications/pw-tracks/controllers/preferences_controller.rb", 46]
60 params.require(:user).permit(:login, :first_name, :last_name, :password_confirmation, :password, :auth_type, :open_id_url)  ["../applications/pw-tracks/controllers/preferences_controller.rb", 47]
61 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 48]
62   ["../applications/pw-tracks/controllers/preferences_controller.rb", 49]
63 # Display notification if preferences are successful updated  ["../applications/pw-tracks/controllers/preferences_controller.rb", 50]
64 def preference_updated  ["../applications/pw-tracks/controllers/preferences_controller.rb", 51]
65 notify :notice, t('preferences.updated')  ["../applications/pw-tracks/controllers/preferences_controller.rb", 52]
66 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/preferences_controller.rb", 53]
67 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 54]
68   ["../applications/pw-tracks/controllers/preferences_controller.rb", 55]
69 end  ["../applications/pw-tracks/controllers/preferences_controller.rb", 56]
LENGTH: 450
1 class ProjectsController < ApplicationController  ["../applications/pw-tracks/controllers/projects_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/projects_controller.rb", 2]
3 helper :application, :todos, :notes  ["../applications/pw-tracks/controllers/projects_controller.rb", 3]
4 before_filter :set_source_view  ["../applications/pw-tracks/controllers/projects_controller.rb", 4]
5 before_filter :set_project_from_params, :only => [:update, :destroy, :show, :edit, :set_reviewed]  ["../applications/pw-tracks/controllers/projects_controller.rb", 5]
6 before_filter :default_context_filter, :only => [:create, :update]  ["../applications/pw-tracks/controllers/projects_controller.rb", 6]
7 skip_before_filter :login_required, :only => [:index]  ["../applications/pw-tracks/controllers/projects_controller.rb", 7]
8 prepend_before_filter :login_or_feed_token_required, :only => [:index]  ["../applications/pw-tracks/controllers/projects_controller.rb", 8]
9   ["../applications/pw-tracks/controllers/projects_controller.rb", 9]
10 def index  ["../applications/pw-tracks/controllers/projects_controller.rb", 10]
11 @source_view = params['_source_view'] || 'project_list'  ["../applications/pw-tracks/controllers/projects_controller.rb", 11]
12 if params[:projects_and_actions]  ["../applications/pw-tracks/controllers/projects_controller.rb", 12]
13 projects_and_actions  ["../applications/pw-tracks/controllers/projects_controller.rb", 13]
14 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 14]
15 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 15]
16 init_not_done_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 16]
17 init_hidden_todo_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 17]
18 if params[:only_active_with_no_next_actions]  ["../applications/pw-tracks/controllers/projects_controller.rb", 18]
19 @projects = current_user.projects.active.select { |p| count_undone_todos(p) == 0  }  ["../applications/pw-tracks/controllers/projects_controller.rb", 19]
20 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 20]
21 @projects = current_user.projects  ["../applications/pw-tracks/controllers/projects_controller.rb", 21]
22 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 22]
23 @active_projects = current_user.projects.active  ["../applications/pw-tracks/controllers/projects_controller.rb", 23]
24 @hidden_projects = current_user.projects.hidden  ["../applications/pw-tracks/controllers/projects_controller.rb", 24]
25 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 25]
26 format.html  do  ["../applications/pw-tracks/controllers/projects_controller.rb", 26]
27 @page_title = t('projects.list_projects')  ["../applications/pw-tracks/controllers/projects_controller.rb", 27]
28 @count = current_user.projects.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 28]
29 @completed_projects = current_user.projects.completed.limit(10)  ["../applications/pw-tracks/controllers/projects_controller.rb", 29]
30 @completed_count = current_user.projects.completed.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 30]
31 @no_projects = current_user.projects.empty?  ["../applications/pw-tracks/controllers/projects_controller.rb", 31]
32 current_user.projects.cache_note_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 32]
33 @new_project = current_user.projects.build  ["../applications/pw-tracks/controllers/projects_controller.rb", 33]
34 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 34]
35 format.m     do  ["../applications/pw-tracks/controllers/projects_controller.rb", 35]
36 @completed_projects = current_user.projects.completed  ["../applications/pw-tracks/controllers/projects_controller.rb", 36]
37 @down_count = @active_projects.size + @hidden_projects.size + @completed_projects.size  ["../applications/pw-tracks/controllers/projects_controller.rb", 37]
38 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/projects_controller.rb", 38]
39 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 39]
40 format.xml   { render :xml => @projects.to_xml( :except => :user_id )  }  ["../applications/pw-tracks/controllers/projects_controller.rb", 40]
41 format.any(:rss, :atom) do  ["../applications/pw-tracks/controllers/projects_controller.rb", 41]
42 @feed_title = I18n.t('models.project.feed_title')  ["../applications/pw-tracks/controllers/projects_controller.rb", 42]
43 @feed_description = I18n.t('models.project.feed_description', :username => current_user.display_name)  ["../applications/pw-tracks/controllers/projects_controller.rb", 43]
44 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 44]
45 format.text do  ["../applications/pw-tracks/controllers/projects_controller.rb", 45]
46 # somehow passing Mime::TEXT using content_type to render does not work  ["../applications/pw-tracks/controllers/projects_controller.rb", 46]
47 headers['Content-Type']=Mime::TEXT.to_s  ["../applications/pw-tracks/controllers/projects_controller.rb", 47]
48 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 48]
49 format.autocomplete do  ["../applications/pw-tracks/controllers/projects_controller.rb", 49]
50 projects = current_user.projects.active + current_user.projects.hidden  ["../applications/pw-tracks/controllers/projects_controller.rb", 50]
51 render :text => for_autocomplete(projects, params[:term])  ["../applications/pw-tracks/controllers/projects_controller.rb", 51]
52 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 52]
53 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 53]
54 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 54]
55 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 55]
56   ["../applications/pw-tracks/controllers/projects_controller.rb", 56]
57 def review  ["../applications/pw-tracks/controllers/projects_controller.rb", 57]
58 @source_view = params['_source_view'] || 'review'  ["../applications/pw-tracks/controllers/projects_controller.rb", 58]
59 @page_title = t('projects.list_reviews')  ["../applications/pw-tracks/controllers/projects_controller.rb", 59]
60 projects = current_user.projects  ["../applications/pw-tracks/controllers/projects_controller.rb", 60]
61 @projects_to_review = projects.select  {|p| p.needs_review?(current_user)}  ["../applications/pw-tracks/controllers/projects_controller.rb", 61]
62 @stalled_projects = projects.select  {|p| p.stalled?}  ["../applications/pw-tracks/controllers/projects_controller.rb", 62]
63 @blocked_projects = projects.select  {|p| p.blocked?}  ["../applications/pw-tracks/controllers/projects_controller.rb", 63]
64 @current_projects = projects.uncompleted.select { |p| not (p.needs_review?(current_user)) }.sort_by { |p| p.last_reviewed || Time.zone.at(0) }  ["../applications/pw-tracks/controllers/projects_controller.rb", 64]
65   ["../applications/pw-tracks/controllers/projects_controller.rb", 65]
66 init_not_done_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 66]
67 init_hidden_todo_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 67]
68 current_user.projects.cache_note_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 68]
69   ["../applications/pw-tracks/controllers/projects_controller.rb", 69]
70 @page_title = t('projects.list_reviews')  ["../applications/pw-tracks/controllers/projects_controller.rb", 70]
71 @count = @projects_to_review.count + @blocked_projects.count + @stalled_projects.count + @current_projects.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 71]
72   ["../applications/pw-tracks/controllers/projects_controller.rb", 72]
73 @no_projects = current_user.projects.empty?  ["../applications/pw-tracks/controllers/projects_controller.rb", 73]
74 @new_project = current_user.projects.build  ["../applications/pw-tracks/controllers/projects_controller.rb", 74]
75 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 75]
76   ["../applications/pw-tracks/controllers/projects_controller.rb", 76]
77 def done  ["../applications/pw-tracks/controllers/projects_controller.rb", 77]
78 @source_view = params['_source_view'] || 'project_list'  ["../applications/pw-tracks/controllers/projects_controller.rb", 78]
79 @page_title = t('projects.list_completed_projects')  ["../applications/pw-tracks/controllers/projects_controller.rb", 79]
80   ["../applications/pw-tracks/controllers/projects_controller.rb", 80]
81 items_per_page = 20  ["../applications/pw-tracks/controllers/projects_controller.rb", 81]
82 page = params[:page] || 1  ["../applications/pw-tracks/controllers/projects_controller.rb", 82]
83 @projects = current_user.projects.completed.paginate :page => page, :per_page => items_per_page  ["../applications/pw-tracks/controllers/projects_controller.rb", 83]
84 @count = @projects.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 84]
85 @total = current_user.projects.completed.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 85]
86 @no_projects = @projects.empty?  ["../applications/pw-tracks/controllers/projects_controller.rb", 86]
87   ["../applications/pw-tracks/controllers/projects_controller.rb", 87]
88 @range_low = (page.to_i-1) * items_per_page + 1  ["../applications/pw-tracks/controllers/projects_controller.rb", 88]
89 @range_high = @range_low + @projects.size - 1  ["../applications/pw-tracks/controllers/projects_controller.rb", 89]
90   ["../applications/pw-tracks/controllers/projects_controller.rb", 90]
91 @range_low = 0 if @total == 0  ["../applications/pw-tracks/controllers/projects_controller.rb", 91]
92 @range_high = @total if @range_high > @total  ["../applications/pw-tracks/controllers/projects_controller.rb", 92]
93   ["../applications/pw-tracks/controllers/projects_controller.rb", 93]
94 init_not_done_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 94]
95 end  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 1]
96 paginate_options = {  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 2]
97 :class => :link_in_container_header,  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 3]
98 :previous_label => '&laquo; '+ t('common.previous'),  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 4]
99 :next_label     => t('common.next')+' &raquo;',  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 5]
100 :inner_window   => 2  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 6]
101 }  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 7]
102   ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 8]
103 @no_projects ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 9]
104 t('projects.no_projects')  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 10]
105 " style=\"display:none\"" if @no_projects  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 11]
106 will_paginate @projects, paginate_options  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 12]
107 "#{@total} (#{@range_low}-#{@range_high})"  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 13]
108 t('states.completed_plural' )  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 14]
109 t('common.projects')  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 15]
110 render :partial => 'project_listing', :collection => @projects  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 16]
111   ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 1]
112 project = project_listing  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 2]
113 suppress_drag_handle ||= false  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 3]
114 suppress_edit_button ||= false  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 4]
115 suppress_delete_button ||= false  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 5]
116   ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 6]
117 dom_id(project, "container")  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 7]
118 dom_id(project)  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 8]
119 suppress_delete_button ? "" : link_to_delete_project(project, image_tag( "blank.png", :title => t('projects.delete_project_title'), :class=>"delete_item"))  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 9]
120 suppress_edit_button ? "" : link_to_edit_project(project, image_tag( "blank.png", :title => t('projects.edit_project_title'), :class=>"edit_item"))  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 10]
121 suppress_drag_handle ? "" : image_tag('grip.png', :width => '7', :height => '16', :border => '0', :title => t('common.drag_handle'), :class => 'grip')  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 11]
122 needsreview_class( project )  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 12]
123 link_to_project( project )  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 13]
124 " (#{count_undone_todos_and_notes_phrase(project)})".html_safe  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 14]
125 dom_id(project, 'edit')  ["../applications/pw-tracks//ruby_views/projects/_project_listing.html.erb", 15]
126 will_paginate @projects, paginate_options  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 17]
127 t('common.sort.sort')  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 18]
128 t('states.completed_plural' )  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 19]
129 t('common.projects')  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 20]
130 link_to(t("common.sort.alphabetically"), alphabetize_projects_path(:state => :completed),  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 21]
131 :id => "completed_alphabetize_link", :class => "alphabetize_link", :title => t('common.sort.alphabetically_title'), :x_confirm_message => t('common.sort.alphabetically_confirm'))  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 22]
132 link_to(t("common.sort.by_task_count"), actionize_projects_path(:state => :completed),  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 23]
133 :id => "completed_actionize_link", :class => "actionize_link", :title => t('common.sort.by_task_count_title'), :x_confirm_message => t('common.sort.by_task_count_title_confirm'))  ["../applications/pw-tracks//ruby_views/projects/done.html.erb", 24]
134   ["../applications/pw-tracks/controllers/projects_controller.rb", 95]
135   ["../applications/pw-tracks/controllers/projects_controller.rb", 96]
136 def set_reviewed  ["../applications/pw-tracks/controllers/projects_controller.rb", 97]
137 @project.last_reviewed = Time.zone.now  ["../applications/pw-tracks/controllers/projects_controller.rb", 98]
138 @project.save  ["../applications/pw-tracks/controllers/projects_controller.rb", 99]
139   ["../applications/pw-tracks/controllers/projects_controller.rb", 100]
140 case @source_view  ["../applications/pw-tracks/controllers/projects_controller.rb", 101]
141 when "project"  ["../applications/pw-tracks/controllers/projects_controller.rb", 102]
142 redirect_to :action => 'show'  ["../applications/pw-tracks/controllers/projects_controller.rb", 103]
143 when "project_list"  ["../applications/pw-tracks/controllers/projects_controller.rb", 104]
144 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/projects_controller.rb", 105]
145 when "review"  ["../applications/pw-tracks/controllers/projects_controller.rb", 106]
146 redirect_to :action => 'review'  ["../applications/pw-tracks/controllers/projects_controller.rb", 107]
147 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 108]
148 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/projects_controller.rb", 109]
149 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 110]
150 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 111]
151   ["../applications/pw-tracks/controllers/projects_controller.rb", 112]
152 def projects_and_actions  ["../applications/pw-tracks/controllers/projects_controller.rb", 113]
153 @projects = current_user.projects.active  ["../applications/pw-tracks/controllers/projects_controller.rb", 114]
154 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 115]
155 format.text  {  ["../applications/pw-tracks/controllers/projects_controller.rb", 116]
156 # somehow passing Mime::TEXT using content_type to render does not work  ["../applications/pw-tracks/controllers/projects_controller.rb", 117]
157 headers['Content-Type']=Mime::TEXT.to_s  ["../applications/pw-tracks/controllers/projects_controller.rb", 118]
158 render :action => 'index_text_projects_and_actions', :layout => false, :content_type => Mime::TEXT  ["../applications/pw-tracks/controllers/projects_controller.rb", 119]
159 }  ["../applications/pw-tracks/controllers/projects_controller.rb", 120]
160 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 121]
161 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 122]
162   ["../applications/pw-tracks/controllers/projects_controller.rb", 123]
163 def show  ["../applications/pw-tracks/controllers/projects_controller.rb", 124]
164 @max_completed = current_user.prefs.show_number_completed  ["../applications/pw-tracks/controllers/projects_controller.rb", 125]
165 init_data_for_sidebar unless mobile?  ["../applications/pw-tracks/controllers/projects_controller.rb", 126]
166 @page_title = t('projects.page_title', :project => @project.name)  ["../applications/pw-tracks/controllers/projects_controller.rb", 127]
167   ["../applications/pw-tracks/controllers/projects_controller.rb", 128]
168 @not_done_todos = @project.todos.active_or_hidden.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/projects_controller.rb", 129]
169 @deferred_todos = @project.todos.deferred.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/projects_controller.rb", 130]
170 @pending_todos = @project.todos.pending.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/projects_controller.rb", 131]
171 @contexts_to_show = current_user.contexts.active  ["../applications/pw-tracks/controllers/projects_controller.rb", 132]
172 @projects_to_show = [@project]  ["../applications/pw-tracks/controllers/projects_controller.rb", 133]
173   ["../applications/pw-tracks/controllers/projects_controller.rb", 134]
174 @done = {}  ["../applications/pw-tracks/controllers/projects_controller.rb", 135]
175 @done = @project.todos.completed.  ["../applications/pw-tracks/controllers/projects_controller.rb", 136]
176 reorder("todos.completed_at DESC").  ["../applications/pw-tracks/controllers/projects_controller.rb", 137]
177 limit(current_user.prefs.show_number_completed).  ["../applications/pw-tracks/controllers/projects_controller.rb", 138]
178 includes(Todo::DEFAULT_INCLUDES) unless @max_completed == 0  ["../applications/pw-tracks/controllers/projects_controller.rb", 139]
179   ["../applications/pw-tracks/controllers/projects_controller.rb", 140]
180 @down_count = @not_done_todos.size + @deferred_todos.size + @pending_todos.size  ["../applications/pw-tracks/controllers/projects_controller.rb", 141]
181 @count=@down_count  ["../applications/pw-tracks/controllers/projects_controller.rb", 142]
182 @next_project = current_user.projects.next_from(@project)  ["../applications/pw-tracks/controllers/projects_controller.rb", 143]
183 @previous_project = current_user.projects.previous_from(@project)  ["../applications/pw-tracks/controllers/projects_controller.rb", 144]
184 @default_tags = @project.default_tags  ["../applications/pw-tracks/controllers/projects_controller.rb", 145]
185 @new_note = current_user.notes.new  ["../applications/pw-tracks/controllers/projects_controller.rb", 146]
186 @new_note.project_id = @project.id  ["../applications/pw-tracks/controllers/projects_controller.rb", 147]
187 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 148]
188 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 149]
189 format.html  ["../applications/pw-tracks/controllers/projects_controller.rb", 150]
190 format.m     do  ["../applications/pw-tracks/controllers/projects_controller.rb", 151]
191 if @project.default_context.nil?  ["../applications/pw-tracks/controllers/projects_controller.rb", 152]
192 @project_default_context = t('projects.no_default_context')  ["../applications/pw-tracks/controllers/projects_controller.rb", 153]
193 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 154]
194 @project_default_context = t('projects.default_context', :context => @project.default_context.name)  ["../applications/pw-tracks/controllers/projects_controller.rb", 155]
195 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 156]
196 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/projects_controller.rb", 157]
197 @mobile_from_project = @project.id  ["../applications/pw-tracks/controllers/projects_controller.rb", 158]
198 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 159]
199 format.xml   do  ["../applications/pw-tracks/controllers/projects_controller.rb", 160]
200 render :xml => @project.to_xml(:except => :user_id) { |xml|  ["../applications/pw-tracks/controllers/projects_controller.rb", 161]
201 xml.not_done { @not_done_todos.each { |child| child.to_xml(:builder => xml, :skip_instruct => true) } }  ["../applications/pw-tracks/controllers/projects_controller.rb", 162]
202 xml.deferred { @deferred_todos.each { |child| child.to_xml(:builder => xml, :skip_instruct => true) } }  ["../applications/pw-tracks/controllers/projects_controller.rb", 163]
203 xml.pending { @pending_todos.each { |child| child.to_xml(:builder => xml, :skip_instruct => true) } }  ["../applications/pw-tracks/controllers/projects_controller.rb", 164]
204 xml.done { @done.each { |child| child.to_xml(:builder => xml, :skip_instruct => true) } }  ["../applications/pw-tracks/controllers/projects_controller.rb", 165]
205 }  ["../applications/pw-tracks/controllers/projects_controller.rb", 166]
206 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 167]
207 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 168]
208 end  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 1]
209 deferred_pending_options = {:append_descriptor => nil, :parent_container_type => 'project'}  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 2]
210 done_todo_options = {  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 3]
211 :append_descriptor => t('projects.last_completed_in_project', :number=>prefs.show_number_completed),  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 4]
212 :suppress_project => true,  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 5]
213 :parent_container_type => 'project'  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 6]
214 }  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 7]
215 if @not_done_todos.count == 0  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 8]
216 # force project view so one empty container will be shown with an empty message  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 9]
217 @group_view_by = 'project'  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 10]
218 end  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 11]
219   ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 12]
220 project_next_prev  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 13]
221 render :partial => "project_settings_container", :locals => {:project => @project}  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 14]
222 show_project_name(project)  ["../applications/pw-tracks//ruby_views/projects/_project_settings_container.html.erb", 1]
223 show_project_settings(project)  ["../applications/pw-tracks//ruby_views/projects/_project_settings_container.html.erb", 2]
224 empty_message_holder("not_done_context", @not_done_todos.empty?)  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 15]
225 show_grouped_todos({:collapsible => false, :show_empty_containers => false, :parent_container_type => 'project' })  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 16]
226 show_deferred_pending_todos(@deferred_todos, @pending_todos, deferred_pending_options)  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 17]
227 show_done_todos(@done, done_todo_options) unless @done.nil?  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 18]
228 link_to t('projects.add_note'), '#'  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 19]
229 t('projects.notes')  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 20]
230 @project.notes.empty? ? 'block' : 'none'  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 21]
231 t('projects.no_notes_attached')  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 22]
232 render :partial => "notes/notes_summary", :collection => @project.notes  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 23]
233 note = notes_summary  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 1]
234 dom_id(note)  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 2]
235 link_to(  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 3]
236 image_tag("blank.png", :border => 0),  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 4]
237 note,  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 5]
238 :title => t('notes.show_note_title'),  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 6]
239 :class => "link_to_notes icon",  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 7]
240 :id => dom_id(note, "link"))  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 8]
241 rendered_note(note)  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 9]
242 note = nil  ["../applications/pw-tracks//ruby_views/notes/_notes_summary.html.erb", 10]
243 render :partial => "notes/note_edit_form", :object => @new_note, :locals => {:submit_text => t('projects.add_note_submit')}  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 24]
244   ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 1]
245 submit_text ||= t('common.update')  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 2]
246 note = note_edit_form  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 3]
247   ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 4]
248   ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 5]
249 form_for(note, :html => {  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 6]
250 :id => dom_id(note, 'edit_form'),  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 7]
251 :class => "inline-form edit-note-form"}) do |f|  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 8]
252   ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 9]
253 get_list_of_error_messages_for(note)  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 10]
254 f.hidden_field( "project_id" )  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 11]
255 f.text_area( "body", "cols" => 70, "rows" => 15)  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 12]
256 dom_id(note, 'submit')  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 13]
257 image_tag("accept.png", :alt => "")  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 14]
258 submit_text  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 15]
259 dom_id(note, 'edit_form')  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 16]
260 image_tag("cancel.png", :alt => "")  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 17]
261 t 'common.cancel'  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 18]
262 end  ["../applications/pw-tracks//ruby_views/notes/_note_edit_form.html.erb", 19]
263 render :partial => "shared/add_new_item_form"  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 25]
264 render :file => "sidebar/sidebar"  ["../applications/pw-tracks//ruby_views/projects/show.html.erb", 26]
265   ["../applications/pw-tracks/controllers/projects_controller.rb", 169]
266   ["../applications/pw-tracks/controllers/projects_controller.rb", 170]
267 def create  ["../applications/pw-tracks/controllers/projects_controller.rb", 171]
268 if params[:format] == 'application/xml' && params['exception']  ["../applications/pw-tracks/controllers/projects_controller.rb", 172]
269 render_failure "Expected post format is valid xml like so: <project><name>project name</name></project>.", 400  ["../applications/pw-tracks/controllers/projects_controller.rb", 173]
270 return  ["../applications/pw-tracks/controllers/projects_controller.rb", 174]
271 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 175]
272 @project = current_user.projects.build(project_params)  ["../applications/pw-tracks/controllers/projects_controller.rb", 176]
273 @go_to_project = params['go_to_project']  ["../applications/pw-tracks/controllers/projects_controller.rb", 177]
274 @saved = @project.save  ["../applications/pw-tracks/controllers/projects_controller.rb", 178]
275 @project_not_done_counts = { @project.id => 0 }  ["../applications/pw-tracks/controllers/projects_controller.rb", 179]
276 @active_projects_count = current_user.projects.active.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 180]
277 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 181]
278   ["../applications/pw-tracks/controllers/projects_controller.rb", 182]
279 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 183]
280 format.js do  ["../applications/pw-tracks/controllers/projects_controller.rb", 184]
281 @down_count = current_user.projects.size  ["../applications/pw-tracks/controllers/projects_controller.rb", 185]
282 init_not_done_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 186]
283 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 187]
284 format.xml do  ["../applications/pw-tracks/controllers/projects_controller.rb", 188]
285 if @project.new_record?  ["../applications/pw-tracks/controllers/projects_controller.rb", 189]
286 render_failure @project.errors.to_xml.html_safe, 409  ["../applications/pw-tracks/controllers/projects_controller.rb", 190]
287 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 191]
288 head :created, :location => project_url(@project), :text => @project.id  ["../applications/pw-tracks/controllers/projects_controller.rb", 192]
289 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 193]
290 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 194]
291 format.html {redirect_to :action => 'index'}  ["../applications/pw-tracks/controllers/projects_controller.rb", 195]
292 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 196]
293 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 197]
294   ["../applications/pw-tracks/controllers/projects_controller.rb", 198]
295 # Edit the details of the project  ["../applications/pw-tracks/controllers/projects_controller.rb", 199]
296 #  ["../applications/pw-tracks/controllers/projects_controller.rb", 200]
297 def update  ["../applications/pw-tracks/controllers/projects_controller.rb", 201]
298 template = ""  ["../applications/pw-tracks/controllers/projects_controller.rb", 202]
299   ["../applications/pw-tracks/controllers/projects_controller.rb", 203]
300 params['project'] ||= {}  ["../applications/pw-tracks/controllers/projects_controller.rb", 204]
301 if params['project']['state']  ["../applications/pw-tracks/controllers/projects_controller.rb", 205]
302 @new_state = params['project']['state']  ["../applications/pw-tracks/controllers/projects_controller.rb", 206]
303 @state_changed = @project.state != @new_state  ["../applications/pw-tracks/controllers/projects_controller.rb", 207]
304 params['project'].delete('state')  ["../applications/pw-tracks/controllers/projects_controller.rb", 208]
305 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 209]
306 success_text = if params['field'] == 'name' && params['value']  ["../applications/pw-tracks/controllers/projects_controller.rb", 210]
307 params['project']['id'] = params['id']  ["../applications/pw-tracks/controllers/projects_controller.rb", 211]
308 params['project']['name'] = params['value']  ["../applications/pw-tracks/controllers/projects_controller.rb", 212]
309 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 213]
310   ["../applications/pw-tracks/controllers/projects_controller.rb", 214]
311 @project.attributes = project_params  ["../applications/pw-tracks/controllers/projects_controller.rb", 215]
312 @saved = @project.save  ["../applications/pw-tracks/controllers/projects_controller.rb", 216]
313 if @saved  ["../applications/pw-tracks/controllers/projects_controller.rb", 217]
314 @project.transition_to(@new_state) if @state_changed  ["../applications/pw-tracks/controllers/projects_controller.rb", 218]
315 if boolean_param('wants_render')  ["../applications/pw-tracks/controllers/projects_controller.rb", 219]
316 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 220]
317 update_state_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 221]
318 init_data_for_sidebar  ["../applications/pw-tracks/controllers/projects_controller.rb", 222]
319 init_hidden_todo_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 223]
320   ["../applications/pw-tracks/controllers/projects_controller.rb", 224]
321 template = 'projects/update'  ["../applications/pw-tracks/controllers/projects_controller.rb", 225]
322   ["../applications/pw-tracks/controllers/projects_controller.rb", 226]
323 # TODO: are these params ever set? or is this dead code?  ["../applications/pw-tracks/controllers/projects_controller.rb", 227]
324 elsif boolean_param('update_status')  ["../applications/pw-tracks/controllers/projects_controller.rb", 228]
325 template = 'projects/update_status'  ["../applications/pw-tracks/controllers/projects_controller.rb", 229]
326 elsif boolean_param('update_default_context')  ["../applications/pw-tracks/controllers/projects_controller.rb", 230]
327 @initial_context_name = @project.default_context.name  ["../applications/pw-tracks/controllers/projects_controller.rb", 231]
328 template = 'projects/update_default_context'  ["../applications/pw-tracks/controllers/projects_controller.rb", 232]
329 elsif boolean_param('update_default_tags')  ["../applications/pw-tracks/controllers/projects_controller.rb", 233]
330 template = 'projects/update_default_tags'  ["../applications/pw-tracks/controllers/projects_controller.rb", 234]
331 elsif boolean_param('update_project_name')  ["../applications/pw-tracks/controllers/projects_controller.rb", 235]
332 # clicking on a project name in the project view gives a form triggering this  ["../applications/pw-tracks/controllers/projects_controller.rb", 236]
333 @projects = current_user.projects  ["../applications/pw-tracks/controllers/projects_controller.rb", 237]
334 template = 'projects/update_project_name'  ["../applications/pw-tracks/controllers/projects_controller.rb", 238]
335 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 239]
336 render :text => success_text || 'Success'  ["../applications/pw-tracks/controllers/projects_controller.rb", 240]
337 return  ["../applications/pw-tracks/controllers/projects_controller.rb", 241]
338 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 242]
339 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 243]
340 init_data_for_sidebar  ["../applications/pw-tracks/controllers/projects_controller.rb", 244]
341 template = 'projects/update'  ["../applications/pw-tracks/controllers/projects_controller.rb", 245]
342 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 246]
343   ["../applications/pw-tracks/controllers/projects_controller.rb", 247]
344 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 248]
345 format.js { render :template => template }  ["../applications/pw-tracks/controllers/projects_controller.rb", 249]
346 format.html { redirect_to :action => 'index'}  ["../applications/pw-tracks/controllers/projects_controller.rb", 250]
347 format.xml {  ["../applications/pw-tracks/controllers/projects_controller.rb", 251]
348 if @saved  ["../applications/pw-tracks/controllers/projects_controller.rb", 252]
349 render :xml => @project.to_xml( :except => :user_id )  ["../applications/pw-tracks/controllers/projects_controller.rb", 253]
350 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 254]
351 render :text => "Error on update: #{@project.errors.full_messages.inject("") {|v, e| v + e + " " }}", :status => 409  ["../applications/pw-tracks/controllers/projects_controller.rb", 255]
352 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 256]
353 }  ["../applications/pw-tracks/controllers/projects_controller.rb", 257]
354 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 258]
355   ["../applications/pw-tracks/controllers/projects_controller.rb", 259]
356 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 260]
357   ["../applications/pw-tracks/controllers/projects_controller.rb", 261]
358 def edit  ["../applications/pw-tracks/controllers/projects_controller.rb", 262]
359 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 263]
360 format.js  ["../applications/pw-tracks/controllers/projects_controller.rb", 264]
361 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 265]
362 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 266]
363   ["../applications/pw-tracks/controllers/projects_controller.rb", 267]
364 def destroy  ["../applications/pw-tracks/controllers/projects_controller.rb", 268]
365 @project.recurring_todos.each(&:remove_from_project!)  ["../applications/pw-tracks/controllers/projects_controller.rb", 269]
366 @project.destroy  ["../applications/pw-tracks/controllers/projects_controller.rb", 270]
367   ["../applications/pw-tracks/controllers/projects_controller.rb", 271]
368 respond_to do |format|  ["../applications/pw-tracks/controllers/projects_controller.rb", 272]
369 format.js {  ["../applications/pw-tracks/controllers/projects_controller.rb", 273]
370 @down_count = current_user.projects.size  ["../applications/pw-tracks/controllers/projects_controller.rb", 274]
371 update_state_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 275]
372 }  ["../applications/pw-tracks/controllers/projects_controller.rb", 276]
373 format.xml { render :text => "Deleted project #{@project.name}" }  ["../applications/pw-tracks/controllers/projects_controller.rb", 277]
374 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 278]
375 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 279]
376   ["../applications/pw-tracks/controllers/projects_controller.rb", 280]
377 def order  ["../applications/pw-tracks/controllers/projects_controller.rb", 281]
378 project_ids = params["container_project"]  ["../applications/pw-tracks/controllers/projects_controller.rb", 282]
379 @projects = current_user.projects.update_positions( project_ids )  ["../applications/pw-tracks/controllers/projects_controller.rb", 283]
380 render :nothing => true  ["../applications/pw-tracks/controllers/projects_controller.rb", 284]
381 rescue  ["../applications/pw-tracks/controllers/projects_controller.rb", 285]
382 notify :error, $!  ["../applications/pw-tracks/controllers/projects_controller.rb", 286]
383 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/projects_controller.rb", 287]
384 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 288]
385   ["../applications/pw-tracks/controllers/projects_controller.rb", 289]
386 def alphabetize  ["../applications/pw-tracks/controllers/projects_controller.rb", 290]
387 @state = params['state']  ["../applications/pw-tracks/controllers/projects_controller.rb", 291]
388 @projects = current_user.projects.alphabetize(:state => @state) if @state  ["../applications/pw-tracks/controllers/projects_controller.rb", 292]
389 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 293]
390 init_not_done_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 294]
391 init_hidden_todo_counts(['project']) if @state == 'hidden'  ["../applications/pw-tracks/controllers/projects_controller.rb", 295]
392 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 296]
393   ["../applications/pw-tracks/controllers/projects_controller.rb", 297]
394 def actionize  ["../applications/pw-tracks/controllers/projects_controller.rb", 298]
395 @state = params['state']  ["../applications/pw-tracks/controllers/projects_controller.rb", 299]
396 @projects = current_user.projects.actionize(:state => @state) if @state  ["../applications/pw-tracks/controllers/projects_controller.rb", 300]
397 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/projects_controller.rb", 301]
398 init_not_done_counts(['project'])  ["../applications/pw-tracks/controllers/projects_controller.rb", 302]
399 init_hidden_todo_counts(['project']) if @state == 'hidden'  ["../applications/pw-tracks/controllers/projects_controller.rb", 303]
400 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 304]
401   ["../applications/pw-tracks/controllers/projects_controller.rb", 305]
402 def done_todos  ["../applications/pw-tracks/controllers/projects_controller.rb", 306]
403 done_todos_for current_user.projects.find(params[:id])  ["../applications/pw-tracks/controllers/projects_controller.rb", 307]
404 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 308]
405   ["../applications/pw-tracks/controllers/projects_controller.rb", 309]
406 def all_done_todos  ["../applications/pw-tracks/controllers/projects_controller.rb", 310]
407 all_done_todos_for current_user.projects.find(params[:id])  ["../applications/pw-tracks/controllers/projects_controller.rb", 311]
408 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 312]
409   ["../applications/pw-tracks/controllers/projects_controller.rb", 313]
410 protected  ["../applications/pw-tracks/controllers/projects_controller.rb", 314]
411   ["../applications/pw-tracks/controllers/projects_controller.rb", 315]
412 def update_state_counts  ["../applications/pw-tracks/controllers/projects_controller.rb", 316]
413 @active_projects_count = current_user.projects.active.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 317]
414 @hidden_projects_count = current_user.projects.hidden.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 318]
415 @completed_projects_count = current_user.projects.completed.count  ["../applications/pw-tracks/controllers/projects_controller.rb", 319]
416 @show_active_projects = @active_projects_count > 0  ["../applications/pw-tracks/controllers/projects_controller.rb", 320]
417 @show_hidden_projects = @hidden_projects_count > 0  ["../applications/pw-tracks/controllers/projects_controller.rb", 321]
418 @show_completed_projects = @completed_projects_count > 0  ["../applications/pw-tracks/controllers/projects_controller.rb", 322]
419 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 323]
420   ["../applications/pw-tracks/controllers/projects_controller.rb", 324]
421 def set_project_from_params  ["../applications/pw-tracks/controllers/projects_controller.rb", 325]
422 @project = current_user.projects.find_by_params(params)  ["../applications/pw-tracks/controllers/projects_controller.rb", 326]
423 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 327]
424   ["../applications/pw-tracks/controllers/projects_controller.rb", 328]
425 def set_source_view  ["../applications/pw-tracks/controllers/projects_controller.rb", 329]
426 @source_view = params['_source_view'] || 'project'  ["../applications/pw-tracks/controllers/projects_controller.rb", 330]
427 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 331]
428   ["../applications/pw-tracks/controllers/projects_controller.rb", 332]
429 def default_context_filter  ["../applications/pw-tracks/controllers/projects_controller.rb", 333]
430 p = params['project']  ["../applications/pw-tracks/controllers/projects_controller.rb", 334]
431 p = params['request']['project'] if p.nil? && params['request']  ["../applications/pw-tracks/controllers/projects_controller.rb", 335]
432 p = {} if p.nil?  ["../applications/pw-tracks/controllers/projects_controller.rb", 336]
433 default_context_name = p['default_context_name']  ["../applications/pw-tracks/controllers/projects_controller.rb", 337]
434 p.delete('default_context_name')  ["../applications/pw-tracks/controllers/projects_controller.rb", 338]
435   ["../applications/pw-tracks/controllers/projects_controller.rb", 339]
436 if default_context_name.present?  ["../applications/pw-tracks/controllers/projects_controller.rb", 340]
437 default_context = current_user.contexts.where(:name => default_context_name).first_or_create  ["../applications/pw-tracks/controllers/projects_controller.rb", 341]
438 p['default_context_id'] = default_context.id  ["../applications/pw-tracks/controllers/projects_controller.rb", 342]
439 else  ["../applications/pw-tracks/controllers/projects_controller.rb", 343]
440 p['default_context_id'] = nil  ["../applications/pw-tracks/controllers/projects_controller.rb", 344]
441 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 345]
442 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 346]
443   ["../applications/pw-tracks/controllers/projects_controller.rb", 347]
444 private  ["../applications/pw-tracks/controllers/projects_controller.rb", 348]
445   ["../applications/pw-tracks/controllers/projects_controller.rb", 349]
446 def project_params  ["../applications/pw-tracks/controllers/projects_controller.rb", 350]
447 params.require(:project).permit(:name, :position, :user_id, :description, :state, :default_context_id, :default_tags)  ["../applications/pw-tracks/controllers/projects_controller.rb", 351]
448 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 352]
449   ["../applications/pw-tracks/controllers/projects_controller.rb", 353]
450 end  ["../applications/pw-tracks/controllers/projects_controller.rb", 354]
LENGTH: 53
1 module RecurringTodos  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 1]
2   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 2]
3 class FormHelper  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 3]
4   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 4]
5 def initialize(recurring_todo)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 5]
6 @recurring_todo = recurring_todo  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 6]
7   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 7]
8 @method_map = {  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 8]
9 # delegate daily_xxx to daily_pattern.xxx  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 9]
10 "daily"   => {prefix: "",    method: daily_pattern},  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 10]
11 "weekly"  => {prefix: "",    method: weekly_pattern},  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 11]
12 "monthly" => {prefix: "",    method: monthly_pattern},  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 12]
13 "yearly"  => {prefix: "",    method: yearly_pattern},  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 13]
14 # delegate on_xxx to weekly_pattern.on_xxx  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 14]
15 "on"      => {prefix: "on_", method: weekly_pattern}  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 15]
16 }  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 16]
17 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 17]
18   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 18]
19 def create_pattern(pattern_class)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 19]
20 pattern = pattern_class.new(@recurring_todo.user)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 20]
21 pattern.build_from_recurring_todo(@recurring_todo)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 21]
22 pattern  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 22]
23 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 23]
24   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 24]
25 def daily_pattern  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 25]
26 @daily_pattern ||= create_pattern(DailyRecurrencePattern)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 26]
27 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 27]
28   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 28]
29 def weekly_pattern  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 29]
30 @weekly_pattern ||= create_pattern(WeeklyRecurrencePattern)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 30]
31 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 31]
32   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 32]
33 def monthly_pattern  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 33]
34 @monthly_pattern ||= create_pattern(MonthlyRecurrencePattern)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 34]
35 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 35]
36   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 36]
37 def yearly_pattern  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 37]
38 @yearly_pattern ||= create_pattern(YearlyRecurrencePattern)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 38]
39 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 39]
40   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 40]
41 def method_missing(method, *args)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 41]
42 # delegate daily_xxx to daily_pattern, weekly_xxx to weekly_pattern, etc.  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 42]
43 if method.to_s =~ /^([^_]+)_(.+)$/  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 43]
44 return @method_map[$1][:method].send(@method_map[$1][:prefix]+$2, *args) unless @method_map[$1].nil?  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 44]
45 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 45]
46   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 46]
47 # no match, let @recurring_todo handle it, or fail  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 47]
48 @recurring_todo.send(method, *args)  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 48]
49 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 49]
50   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 50]
51 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 51]
52   ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 52]
53 end  ["../applications/pw-tracks/controllers/recurring_todos/form_helper.rb", 53]
LENGTH: 249
1 class RecurringTodosController < ApplicationController  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 2]
3 helper :todos, :recurring_todos  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 4]
5 append_before_filter :init, :only => [:index, :new, :edit, :create]  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 5]
6 append_before_filter :get_recurring_todo_from_param, :only => [:destroy, :toggle_check, :toggle_star, :edit, :update]  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 6]
7   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 7]
8 def index  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 8]
9 @page_title = t('todos.recurring_actions_title')  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 9]
10 @source_view = params['_source_view'] || 'recurring_todo'  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 10]
11 find_and_inactivate  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 11]
12 @recurring_todos = current_user.recurring_todos.active.includes(:tags, :taggings).paginate(:page => params[:page])  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 12]
13 @completed_recurring_todos = current_user.recurring_todos.limit(10).completed.includes(:tags, :taggings)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 13]
14   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 14]
15 @no_recurring_todos = @recurring_todos.count == 0  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 15]
16 @no_completed_recurring_todos = @completed_recurring_todos.count == 0  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 16]
17 @count = @recurring_todos.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 17]
18   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 18]
19 @new_recurring_todo = RecurringTodo.new  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 19]
20 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 20]
21   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 21]
22 def new  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 22]
23 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 23]
24   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 24]
25 def show  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 25]
26 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 26]
27   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 27]
28 def done  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 28]
29 @source_view = params['_source_view'] || 'recurring_todo'  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 29]
30 @page_title = t('todos.completed_recurring_actions_title')  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 30]
31   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 31]
32 items_per_page = 20  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 32]
33 page = params[:page] || 1  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 33]
34 @completed_recurring_todos = current_user.recurring_todos.completed.paginate :page => page, :per_page => items_per_page  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 34]
35 @total = @count = current_user.recurring_todos.completed.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 35]
36   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 36]
37 @range_low = (page.to_i-1) * items_per_page + 1  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 37]
38 @range_high = @range_low + @completed_recurring_todos.size - 1  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 38]
39   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 39]
40 @range_low = 0 if @total == 0  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 40]
41 @range_high = @total if @range_high > @total  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 41]
42 end  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 1]
43 paginate_options = {  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 2]
44 :class => :link_in_container_header,  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 3]
45 :previous_label => '&laquo; '+ t('common.previous'),  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 4]
46 :next_label     => t('common.next')+' &raquo;',  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 5]
47 :inner_window   => 2  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 6]
48 }  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 7]
49   ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 8]
50 will_paginate @completed_recurring_todos, paginate_options  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 9]
51 "#{@total} (#{@range_low}-#{@range_high})"  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 10]
52 t('todos.completed_recurring')  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 11]
53 @no_completed_recurring_todos ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 12]
54 t('todos.no_completed_recurring')  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 13]
55 render :partial => @completed_recurring_todos  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 14]
56 will_paginate @completed_recurring_todos, paginate_options  ["../applications/pw-tracks//ruby_views/recurring_todos/done.html.erb", 15]
57   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 42]
58   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 43]
59 def edit  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 44]
60 @form_helper = RecurringTodos::FormHelper.new(@recurring_todo)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 45]
61   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 46]
62 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 47]
63 format.js  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 48]
64 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 49]
65 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 50]
66   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 51]
67 def update  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 52]
68 updater = RecurringTodos::RecurringTodosBuilder.new(current_user, update_recurring_todo_params)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 53]
69 @saved = updater.update(@recurring_todo)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 54]
70   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 55]
71 @recurring_todo.reload  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 56]
72   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 57]
73 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 58]
74 format.js  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 59]
75 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 60]
76 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 61]
77   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 62]
78 def create  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 63]
79 builder = RecurringTodos::RecurringTodosBuilder.new(current_user, all_recurring_todo_params)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 64]
80 @saved = builder.save  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 65]
81   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 66]
82 if @saved  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 67]
83 @recurring_todo = builder.saved_recurring_todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 68]
84 todo_saved = TodoFromRecurringTodo.new(current_user, @recurring_todo).create.nil? == false  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 69]
85   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 70]
86 @status_message =  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 71]
87 t('todos.recurring_action_saved') + " / " +  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 72]
88 t("todos.new_related_todo_#{todo_saved ? "" : "not_"}created_short")  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 73]
89   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 74]
90 @down_count = current_user.recurring_todos.active.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 75]
91 @new_recurring_todo = RecurringTodo.new  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 76]
92 else  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 77]
93 @recurring_todo = builder.recurring_todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 78]
94 @status_message = t('todos.error_saving_recurring')  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 79]
95 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 80]
96   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 81]
97 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 82]
98 format.js  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 83]
99 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 84]
100 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 85]
101   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 86]
102 def destroy  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 87]
103 @number_of_todos = @recurring_todo.todos.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 88]
104   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 89]
105 # remove all references to this recurring todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 90]
106 @recurring_todo.clear_todos_association  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 91]
107   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 92]
108 # delete the recurring todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 93]
109 @saved = @recurring_todo.destroy  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 94]
110   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 95]
111 # count remaining recurring todos  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 96]
112 @active_remaining = current_user.recurring_todos.active.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 97]
113 @completed_remaining = current_user.recurring_todos.completed.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 98]
114   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 99]
115 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 100]
116   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 101]
117 format.html do  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 102]
118 if @saved  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 103]
119 notify :notice, t('todos.recurring_deleted_success')  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 104]
120 else  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 105]
121 notify :error,  t('todos.error_deleting_recurring', :description => @recurring_todo.description)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 106]
122 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 107]
123 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 108]
124 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 109]
125   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 110]
126 format.js do  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 111]
127 render  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 112]
128 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 113]
129 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 114]
130 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 115]
131   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 116]
132 def toggle_check  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 117]
133 @saved = @recurring_todo.toggle_completion!  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 118]
134   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 119]
135 @down_count = current_user.recurring_todos.active.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 120]
136 @active_remaining = @down_count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 121]
137 @completed_remaining = 0  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 122]
138   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 123]
139 if @recurring_todo.active?  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 124]
140 @completed_remaining = current_user.recurring_todos.completed.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 125]
141   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 126]
142 # from completed back to active -> check if there is an active todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 127]
143 @active_todos = @recurring_todo.todos.active.count  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 128]
144 # create todo if there is no active todo belonging to the activated  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 129]
145 # recurring_todo  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 130]
146 @new_recurring_todo = TodoFromRecurringTodo.new(current_user, @recurring_todo).create if @active_todos == 0  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 131]
147 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 132]
148   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 133]
149 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 134]
150 format.js  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 135]
151 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 136]
152 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 137]
153   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 138]
154 def toggle_star  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 139]
155 @recurring_todo.toggle_star!  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 140]
156 @saved = @recurring_todo.save!  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 141]
157 respond_to do |format|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 142]
158 format.js  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 143]
159 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 144]
160 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 145]
161   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 146]
162 private  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 147]
163   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 148]
164 def recurring_todo_params  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 149]
165 params.require(:recurring_todo).permit(  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 150]
166 # model attributes  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 151]
167 :context_id, :project_id, :description, :notes, :state, :start_from,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 152]
168 :ends_on, :end_date, :number_of_occurrences, :occurrences_count, :target,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 153]
169 :show_from_delta, :recurring_period, :recurrence_selector, :every_other1,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 154]
170 :every_other2, :every_other3, :every_day, :only_work_days, :every_count,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 155]
171 :weekday, :show_always, :context_name, :project_name, :tag_list,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 156]
172 # form attributes  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 157]
173 :recurring_period, :daily_selector, :monthly_selector, :yearly_selector,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 158]
174 :recurring_target, :daily_every_x_days, :monthly_day_of_week,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 159]
175 :monthly_every_x_day, :monthly_every_x_month2, :monthly_every_x_month,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 160]
176 :monthly_every_xth_day, :recurring_show_days_before,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 161]
177 :recurring_show_always, :weekly_every_x_week, :weekly_return_monday,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 162]
178 :yearly_day_of_week, :yearly_every_x_day, :yearly_every_xth_day,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 163]
179 :yearly_month_of_year2, :yearly_month_of_year,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 164]
180 # derived attributes  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 165]
181 :weekly_return_monday, :weekly_return_tuesday, :weekly_return_wednesday,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 166]
182 :weekly_return_thursday, :weekly_return_friday, :weekly_return_saturday, :weekly_return_sunday  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 167]
183 )  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 168]
184 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 169]
185   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 170]
186 def all_recurring_todo_params  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 171]
187 # move context_name, project_name and tag_list into :recurring_todo hash for easier processing  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 172]
188 {  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 173]
189 context_name: :context_name,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 174]
190 project_name: :project_name,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 175]
191 tag_list:     :tag_list  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 176]
192 }.each do |target,source|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 177]
193 move_into_recurring_todo_param(params, target, source)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 178]
194 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 179]
195 recurring_todo_params  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 180]
196 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 181]
197   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 182]
198 def update_recurring_todo_params  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 183]
199 # we needed to rename the recurring_period selector in the edit form because  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 184]
200 # the form for a new recurring todo and the edit form are on the same page.  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 185]
201 # Same goes for start_from and end_date  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 186]
202 params['recurring_todo']['recurring_period'] = params['recurring_edit_todo']['recurring_period']  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 187]
203   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 188]
204 {  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 189]
205 context_name: :context_name,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 190]
206 project_name: :project_name,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 191]
207 tag_list:     :edit_recurring_todo_tag_list,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 192]
208 end_date:     :recurring_todo_edit_end_date,  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 193]
209 start_from:   :recurring_todo_edit_start_from  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 194]
210 }.each do |target,source|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 195]
211 move_into_recurring_todo_param(params, target, source)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 196]
212 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 197]
213   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 198]
214 # make sure that we set weekly_return_xxx to empty (space) when they are  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 199]
215 # not checked (and thus not present in params["recurring_todo"])  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 200]
216 %w{monday tuesday wednesday thursday friday saturday sunday}.each do |day|  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 201]
217 params["recurring_todo"]["weekly_return_#{day}"]=' ' if params["recurring_todo"]["weekly_return_#{day}"].nil?  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 202]
218 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 203]
219   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 204]
220 recurring_todo_params  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 205]
221 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 206]
222   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 207]
223 def move_into_recurring_todo_param(params, target, source)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 208]
224 params[:recurring_todo][target] = params[source] unless params[source].blank?  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 209]
225 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 210]
226   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 211]
227 def init  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 212]
228 @days_of_week   = (0..6).map{|i| [t('date.day_names')[i], i] }  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 213]
229 @months_of_year = (1..12).map{|i| [t('date.month_names')[i], i] }  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 214]
230 @xth_day = [[t('common.first'),1],[t('common.second'),2],[t('common.third'),3],[t('common.fourth'),4],[t('common.last'),5]]  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 215]
231 @projects = current_user.projects.includes(:default_context)  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 216]
232 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 217]
233 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 218]
234   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 219]
235 def get_recurring_todo_from_param  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 220]
236 @recurring_todo = current_user.recurring_todos.find(params[:id])  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 221]
237 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 222]
238   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 223]
239 def find_and_inactivate  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 224]
240 # find active recurring todos without active todos and inactivate them  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 225]
241   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 226]
242 current_user.recurring_todos.active.  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 227]
243 select("recurring_todos.id, recurring_todos.state").  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 228]
244 joins("LEFT JOIN todos fai_todos ON (recurring_todos.id = fai_todos.recurring_todo_id) AND (NOT fai_todos.state='completed')").  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 229]
245 where("fai_todos.id IS NULL").  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 230]
246 each { |rt| current_user.recurring_todos.find(rt.id).toggle_completion! }  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 231]
247 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 232]
248   ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 233]
249 end  ["../applications/pw-tracks/controllers/recurring_todos_controller.rb", 234]
LENGTH: 22
1 class SearchController < ApplicationController  ["../applications/pw-tracks/controllers/search_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/search_controller.rb", 2]
3 helper :todos, :application, :notes, :projects, :contexts  ["../applications/pw-tracks/controllers/search_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/search_controller.rb", 4]
5 def results  ["../applications/pw-tracks/controllers/search_controller.rb", 5]
6 @source_view = params['_source_view'] || 'search'  ["../applications/pw-tracks/controllers/search_controller.rb", 6]
7 @page_title = "TRACKS::Search Results for #{params[:search]}"  ["../applications/pw-tracks/controllers/search_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/search_controller.rb", 8]
9 searcher = Search::SearchResults.new(current_user, params[:search])  ["../applications/pw-tracks/controllers/search_controller.rb", 9]
10 searcher.search  ["../applications/pw-tracks/controllers/search_controller.rb", 10]
11   ["../applications/pw-tracks/controllers/search_controller.rb", 11]
12 @results = searcher.results  ["../applications/pw-tracks/controllers/search_controller.rb", 12]
13 @count = searcher.number_of_finds  ["../applications/pw-tracks/controllers/search_controller.rb", 13]
14   ["../applications/pw-tracks/controllers/search_controller.rb", 14]
15 init_not_done_counts  ["../applications/pw-tracks/controllers/search_controller.rb", 15]
16 init_hidden_todo_counts  ["../applications/pw-tracks/controllers/search_controller.rb", 16]
17 end  ["../applications/pw-tracks/controllers/search_controller.rb", 17]
18   ["../applications/pw-tracks/controllers/search_controller.rb", 18]
19 def index  ["../applications/pw-tracks/controllers/search_controller.rb", 19]
20 @page_title = "TRACKS::Search"  ["../applications/pw-tracks/controllers/search_controller.rb", 20]
21 end  ["../applications/pw-tracks/controllers/search_controller.rb", 21]
22 end  ["../applications/pw-tracks/controllers/search_controller.rb", 22]
LENGTH: 637
1 class StatsController < ApplicationController  ["../applications/pw-tracks/controllers/stats_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/stats_controller.rb", 2]
3 SECONDS_PER_DAY = 86400;  ["../applications/pw-tracks/controllers/stats_controller.rb", 3]
4   ["../applications/pw-tracks/controllers/stats_controller.rb", 4]
5 helper :todos, :projects, :recurring_todos  ["../applications/pw-tracks/controllers/stats_controller.rb", 5]
6 append_before_filter :init, :except => :index  ["../applications/pw-tracks/controllers/stats_controller.rb", 6]
7   ["../applications/pw-tracks/controllers/stats_controller.rb", 7]
8 def index  ["../applications/pw-tracks/controllers/stats_controller.rb", 8]
9 @page_title = t('stats.index_title')  ["../applications/pw-tracks/controllers/stats_controller.rb", 9]
10 @hidden_contexts = current_user.contexts.hidden  ["../applications/pw-tracks/controllers/stats_controller.rb", 10]
11 @stats = Stats::UserStats.new(current_user)  ["../applications/pw-tracks/controllers/stats_controller.rb", 11]
12 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 12]
13   ["../applications/pw-tracks/controllers/stats_controller.rb", 13]
14 def actions_done_last12months_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 14]
15 # get actions created and completed in the past 12+3 months. +3 for running  ["../applications/pw-tracks/controllers/stats_controller.rb", 15]
16 # - outermost set of entries needed for these calculations  ["../applications/pw-tracks/controllers/stats_controller.rb", 16]
17 actions_last12months = current_user.todos.created_or_completed_after(@cut_off_year_plus3).select("completed_at,created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 17]
18   ["../applications/pw-tracks/controllers/stats_controller.rb", 18]
19 # convert to array and fill in non-existing months  ["../applications/pw-tracks/controllers/stats_controller.rb", 19]
20 @actions_done_last12months_array = put_events_into_month_buckets(actions_last12months, 13, :completed_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 20]
21 @actions_created_last12months_array = put_events_into_month_buckets(actions_last12months, 13, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 21]
22   ["../applications/pw-tracks/controllers/stats_controller.rb", 22]
23 # find max for graph in both arrays  ["../applications/pw-tracks/controllers/stats_controller.rb", 23]
24 @max = (@actions_done_last12months_array + @actions_created_last12months_array).max  ["../applications/pw-tracks/controllers/stats_controller.rb", 24]
25   ["../applications/pw-tracks/controllers/stats_controller.rb", 25]
26 # find running avg  ["../applications/pw-tracks/controllers/stats_controller.rb", 26]
27 done_in_last_15_months = put_events_into_month_buckets(actions_last12months, 16, :completed_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 27]
28 created_in_last_15_months = put_events_into_month_buckets(actions_last12months, 16, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 28]
29   ["../applications/pw-tracks/controllers/stats_controller.rb", 29]
30 @actions_done_avg_last12months_array = compute_running_avg_array(done_in_last_15_months, 13)  ["../applications/pw-tracks/controllers/stats_controller.rb", 30]
31 @actions_created_avg_last12months_array = compute_running_avg_array(created_in_last_15_months, 13)  ["../applications/pw-tracks/controllers/stats_controller.rb", 31]
32   ["../applications/pw-tracks/controllers/stats_controller.rb", 32]
33 # interpolate avg for current month.  ["../applications/pw-tracks/controllers/stats_controller.rb", 33]
34 @interpolated_actions_created_this_month = interpolate_avg_for_current_month(@actions_created_last12months_array)  ["../applications/pw-tracks/controllers/stats_controller.rb", 34]
35 @interpolated_actions_done_this_month = interpolate_avg_for_current_month(@actions_done_last12months_array)  ["../applications/pw-tracks/controllers/stats_controller.rb", 35]
36   ["../applications/pw-tracks/controllers/stats_controller.rb", 36]
37 @created_count_array = Array.new(13, actions_last12months.created_after(@cut_off_year).count(:all)/12.0)  ["../applications/pw-tracks/controllers/stats_controller.rb", 37]
38 @done_count_array    = Array.new(13, actions_last12months.completed_after(@cut_off_year).count(:all)/12.0)  ["../applications/pw-tracks/controllers/stats_controller.rb", 38]
39 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 39]
40 end  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 1]
41 url = url_for :controller => 'stats', :action => 'actions_done_last_years'  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 2]
42   ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 3]
43 t('stats.actions_lastyear_title')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 4]
44 t('stats.legend.number_of_actions')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 5]
45 t('stats.legend.months_ago')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 6]
46 t('stats.labels.created')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 7]
47 t('stats.labels.completed')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 8]
48 t('stats.labels.avg_created')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 9]
49 t('stats.labels.avg_completed')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 10]
50 t('stats.labels.month_avg_created', :months => 3)  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 11]
51 t('stats.labels.month_avg_completed', :months => 3)  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 12]
52 @actions_created_last12months_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 13]
53 Array.new(13,url).join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 14]
54 Array.new(13,url).join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 15]
55 @actions_done_last12months_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 16]
56 @created_count_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 17]
57 @done_count_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 18]
58 @actions_created_avg_last12months_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 19]
59 @actions_done_avg_last12months_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 20]
60 @interpolated_actions_created_this_month  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 21]
61 @actions_done_avg_last12months_array[1]  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 22]
62 @interpolated_actions_done_this_month  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 23]
63 @actions_created_avg_last12months_array[1]  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 24]
64 array_of_month_labels(@done_count_array.size).join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 25]
65 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 26]
66 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 27]
67 @max+@max/10+1  ["../applications/pw-tracks//ruby_views/stats/actions_done_last12months_data.html.erb", 28]
68   ["../applications/pw-tracks/controllers/stats_controller.rb", 40]
69   ["../applications/pw-tracks/controllers/stats_controller.rb", 41]
70 def interpolate_avg_for_current_month(set)  ["../applications/pw-tracks/controllers/stats_controller.rb", 42]
71 (set[0]*(1/percent_of_month) + set[1] + set[2]) / 3.0  ["../applications/pw-tracks/controllers/stats_controller.rb", 43]
72 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 44]
73   ["../applications/pw-tracks/controllers/stats_controller.rb", 45]
74 def percent_of_month  ["../applications/pw-tracks/controllers/stats_controller.rb", 46]
75 Time.zone.now.day / Time.zone.now.end_of_month.day.to_f  ["../applications/pw-tracks/controllers/stats_controller.rb", 47]
76 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 48]
77   ["../applications/pw-tracks/controllers/stats_controller.rb", 49]
78 def actions_done_last_years  ["../applications/pw-tracks/controllers/stats_controller.rb", 50]
79 @page_title = t('stats.index_title')  ["../applications/pw-tracks/controllers/stats_controller.rb", 51]
80 @chart = Stats::Chart.new('actions_done_lastyears_data', :height => 400, :width => 900)  ["../applications/pw-tracks/controllers/stats_controller.rb", 52]
81 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 53]
82   ["../applications/pw-tracks/controllers/stats_controller.rb", 54]
83 def actions_done_lastyears_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 55]
84 actions_last_months = current_user.todos.select("completed_at,created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 56]
85   ["../applications/pw-tracks/controllers/stats_controller.rb", 57]
86 month_count = difference_in_months(@today, actions_last_months.minimum(:created_at))  ["../applications/pw-tracks/controllers/stats_controller.rb", 58]
87 # because this action is not scoped by date, the minimum created_at should always be  ["../applications/pw-tracks/controllers/stats_controller.rb", 59]
88 # less than the minimum completed_at, so no reason to check minimum completed_at  ["../applications/pw-tracks/controllers/stats_controller.rb", 60]
89   ["../applications/pw-tracks/controllers/stats_controller.rb", 61]
90 # convert to array and fill in non-existing months  ["../applications/pw-tracks/controllers/stats_controller.rb", 62]
91 @actions_done_last_months_array = put_events_into_month_buckets(actions_last_months, month_count+1, :completed_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 63]
92 @actions_created_last_months_array = put_events_into_month_buckets(actions_last_months, month_count+1, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 64]
93   ["../applications/pw-tracks/controllers/stats_controller.rb", 65]
94 # find max for graph in both hashes  ["../applications/pw-tracks/controllers/stats_controller.rb", 66]
95 @max = (@actions_done_last_months_array + @actions_created_last_months_array).max  ["../applications/pw-tracks/controllers/stats_controller.rb", 67]
96   ["../applications/pw-tracks/controllers/stats_controller.rb", 68]
97 # set running avg  ["../applications/pw-tracks/controllers/stats_controller.rb", 69]
98 @actions_done_avg_last_months_array = compute_running_avg_array(@actions_done_last_months_array,month_count+1)  ["../applications/pw-tracks/controllers/stats_controller.rb", 70]
99 @actions_created_avg_last_months_array = compute_running_avg_array(@actions_created_last_months_array,month_count+1)  ["../applications/pw-tracks/controllers/stats_controller.rb", 71]
100   ["../applications/pw-tracks/controllers/stats_controller.rb", 72]
101 # interpolate avg for this month.  ["../applications/pw-tracks/controllers/stats_controller.rb", 73]
102 @interpolated_actions_created_this_month = interpolate_avg_for_current_month(@actions_created_last_months_array)  ["../applications/pw-tracks/controllers/stats_controller.rb", 74]
103 @interpolated_actions_done_this_month = interpolate_avg_for_current_month(@actions_done_last_months_array)  ["../applications/pw-tracks/controllers/stats_controller.rb", 75]
104   ["../applications/pw-tracks/controllers/stats_controller.rb", 76]
105 @created_count_array = Array.new(month_count+1, actions_last_months.select { |x| x.created_at }.size/month_count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 77]
106 @done_count_array    = Array.new(month_count+1, actions_last_months.select { |x| x.completed_at }.size/month_count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 78]
107   ["../applications/pw-tracks/controllers/stats_controller.rb", 79]
108 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 80]
109 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 81]
110   ["../applications/pw-tracks/controllers/stats_controller.rb", 82]
111 def actions_done_last30days_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 83]
112 # get actions created and completed in the past 30 days.  ["../applications/pw-tracks/controllers/stats_controller.rb", 84]
113 @actions_done_last30days = current_user.todos.completed_after(@cut_off_30days).select("completed_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 85]
114 @actions_created_last30days = current_user.todos.created_after(@cut_off_30days).select("created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 86]
115   ["../applications/pw-tracks/controllers/stats_controller.rb", 87]
116 # convert to array. 30+1 to have 30 complete days and one current day [0]  ["../applications/pw-tracks/controllers/stats_controller.rb", 88]
117 @actions_done_last30days_array = convert_to_days_from_today_array(@actions_done_last30days, 31, :completed_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 89]
118 @actions_created_last30days_array = convert_to_days_from_today_array(@actions_created_last30days, 31, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 90]
119   ["../applications/pw-tracks/controllers/stats_controller.rb", 91]
120 # find max for graph in both hashes  ["../applications/pw-tracks/controllers/stats_controller.rb", 92]
121 @max = [@actions_done_last30days_array.max, @actions_created_last30days_array.max].max  ["../applications/pw-tracks/controllers/stats_controller.rb", 93]
122   ["../applications/pw-tracks/controllers/stats_controller.rb", 94]
123 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 95]
124 end  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 1]
125 created_count_array = Array.new(30){ |i| @actions_created_last30days.size/30.0 }  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 2]
126 done_count_array    = Array.new(30){ |i| @actions_done_last30days.size/30.0 }  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 3]
127 # TODO: make the strftime i18n proof  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 4]
128 time_labels         = Array.new(30){ |i| l(Time.zone.now-i.days, :format => :stats)  }  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 5]
129   ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 6]
130 t('stats.actions_30days_title')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 7]
131 t('stats.legend.number_of_actions')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 8]
132 t('stats.legend.number_of_days')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 9]
133 t('stats.labels.created')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 10]
134 t('stats.labels.completed')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 11]
135 t('stats.labels.avg_created')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 12]
136 t('stats.labels.avg_completed')  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 13]
137 @actions_created_last30days_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 14]
138 @actions_done_last30days_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 15]
139 created_count_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 16]
140 done_count_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 17]
141 time_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 18]
142 # max + 10% for some extra space at the top  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 19]
143 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 20]
144 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 21]
145   ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 22]
146 @max+@max/10+1  ["../applications/pw-tracks//ruby_views/stats/actions_done_last30days_data.html.erb", 23]
147   ["../applications/pw-tracks/controllers/stats_controller.rb", 96]
148   ["../applications/pw-tracks/controllers/stats_controller.rb", 97]
149 def actions_completion_time_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 98]
150 @actions_completion_time = current_user.todos.completed.select("completed_at, created_at").reorder("completed_at DESC" )  ["../applications/pw-tracks/controllers/stats_controller.rb", 99]
151   ["../applications/pw-tracks/controllers/stats_controller.rb", 100]
152 # convert to array and fill in non-existing weeks with 0  ["../applications/pw-tracks/controllers/stats_controller.rb", 101]
153 @max_weeks = @actions_completion_time.last ? difference_in_weeks(@today, @actions_completion_time.last.completed_at) : 1  ["../applications/pw-tracks/controllers/stats_controller.rb", 102]
154 @actions_completed_per_week_array = convert_to_weeks_running_array(@actions_completion_time, @max_weeks+1)  ["../applications/pw-tracks/controllers/stats_controller.rb", 103]
155   ["../applications/pw-tracks/controllers/stats_controller.rb", 104]
156 # stop the chart after 10 weeks  ["../applications/pw-tracks/controllers/stats_controller.rb", 105]
157 @count = [10, @max_weeks].min  ["../applications/pw-tracks/controllers/stats_controller.rb", 106]
158   ["../applications/pw-tracks/controllers/stats_controller.rb", 107]
159 # convert to new array to hold max @cut_off elems + 1 for sum of actions after @cut_off  ["../applications/pw-tracks/controllers/stats_controller.rb", 108]
160 @actions_completion_time_array = cut_off_array_with_sum(@actions_completed_per_week_array, @count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 109]
161 @max_actions = @actions_completion_time_array.max  ["../applications/pw-tracks/controllers/stats_controller.rb", 110]
162   ["../applications/pw-tracks/controllers/stats_controller.rb", 111]
163 # get percentage done cumulative  ["../applications/pw-tracks/controllers/stats_controller.rb", 112]
164 @cum_percent_done = convert_to_cumulative_array(@actions_completion_time_array, @actions_completion_time.count(:all))  ["../applications/pw-tracks/controllers/stats_controller.rb", 113]
165   ["../applications/pw-tracks/controllers/stats_controller.rb", 114]
166 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 115]
167 end  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 1]
168 time_labels         = Array.new(@count){ |i| "#{i}-#{i+1}" }  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 2]
169 time_labels[0]      = t('stats.within_one')  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 3]
170 time_labels[@count] = "> #{@count}"  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 4]
171   ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 5]
172 t('stats.action_completion_time_title')  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 6]
173 t('stats.legend.actions')  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 7]
174 t('stats.legend.percentage')  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 8]
175 t('stats.legend.running_time')  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 9]
176 @actions_completion_time_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 10]
177 @cum_percent_done.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 11]
178 time_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 12]
179   ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 13]
180 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 14]
181 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 15]
182   ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 16]
183 1+@max_actions+@max_actions/10  ["../applications/pw-tracks//ruby_views/stats/actions_completion_time_data.html.erb", 17]
184   ["../applications/pw-tracks/controllers/stats_controller.rb", 116]
185   ["../applications/pw-tracks/controllers/stats_controller.rb", 117]
186 def actions_running_time_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 118]
187 @actions_running_time = current_user.todos.not_completed.select("created_at").reorder("created_at DESC")  ["../applications/pw-tracks/controllers/stats_controller.rb", 119]
188   ["../applications/pw-tracks/controllers/stats_controller.rb", 120]
189 # convert to array and fill in non-existing weeks with 0  ["../applications/pw-tracks/controllers/stats_controller.rb", 121]
190 @max_weeks = difference_in_weeks(@today, @actions_running_time.last.created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 122]
191 @actions_running_per_week_array = convert_to_weeks_from_today_array(@actions_running_time, @max_weeks+1, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 123]
192   ["../applications/pw-tracks/controllers/stats_controller.rb", 124]
193 # cut off chart at 52 weeks = one year  ["../applications/pw-tracks/controllers/stats_controller.rb", 125]
194 @count = [52, @max_weeks].min  ["../applications/pw-tracks/controllers/stats_controller.rb", 126]
195   ["../applications/pw-tracks/controllers/stats_controller.rb", 127]
196 # convert to new array to hold max @cut_off elems + 1 for sum of actions after @cut_off  ["../applications/pw-tracks/controllers/stats_controller.rb", 128]
197 @actions_running_time_array = cut_off_array_with_sum(@actions_running_per_week_array, @count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 129]
198 @max_actions = @actions_running_time_array.max  ["../applications/pw-tracks/controllers/stats_controller.rb", 130]
199   ["../applications/pw-tracks/controllers/stats_controller.rb", 131]
200 # get percentage done cumulative  ["../applications/pw-tracks/controllers/stats_controller.rb", 132]
201 @cum_percent_done = convert_to_cumulative_array(@actions_running_time_array, @actions_running_time.count )  ["../applications/pw-tracks/controllers/stats_controller.rb", 133]
202   ["../applications/pw-tracks/controllers/stats_controller.rb", 134]
203 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 135]
204 end  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 1]
205 url_labels = Array.new(@count){ |i| url_for(:controller => 'stats', :action => 'show_selected_actions_from_chart', :index => i, :id=> "art") }  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 2]
206 url_labels[@count]=url_for(:controller => 'stats', :action => 'show_selected_actions_from_chart', :index => @count, :id=> "art_end")  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 3]
207   ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 4]
208 time_labels         = Array.new(@count){ |i| "#{i}-#{i+1}" }  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 5]
209 time_labels[0] = "< 1"  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 6]
210 time_labels[@count] = "> #{@count}"  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 7]
211   ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 8]
212 t('stats.running_time_all')  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 9]
213 t('stats.running_time_all_legend.actions')  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 10]
214 t('stats.running_time_all_legend.percentage')  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 11]
215 t('stats.running_time_all_legend.running_time')  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 12]
216 @actions_running_time_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 13]
217 url_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 14]
218 @cum_percent_done.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 15]
219 time_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 16]
220   ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 17]
221 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 18]
222 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 19]
223   ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 20]
224 1+@max_actions+@max_actions/10  ["../applications/pw-tracks//ruby_views/stats/actions_running_time_data.html.erb", 21]
225   ["../applications/pw-tracks/controllers/stats_controller.rb", 136]
226   ["../applications/pw-tracks/controllers/stats_controller.rb", 137]
227 def actions_visible_running_time_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 138]
228 # running means  ["../applications/pw-tracks/controllers/stats_controller.rb", 139]
229 # - not completed (completed_at must be null)  ["../applications/pw-tracks/controllers/stats_controller.rb", 140]
230 # visible means  ["../applications/pw-tracks/controllers/stats_controller.rb", 141]
231 # - actions not part of a hidden project  ["../applications/pw-tracks/controllers/stats_controller.rb", 142]
232 # - actions not part of a hidden context  ["../applications/pw-tracks/controllers/stats_controller.rb", 143]
233 # - actions not deferred (show_from must be null)  ["../applications/pw-tracks/controllers/stats_controller.rb", 144]
234 # - actions not pending/blocked  ["../applications/pw-tracks/controllers/stats_controller.rb", 145]
235   ["../applications/pw-tracks/controllers/stats_controller.rb", 146]
236 @actions_running_time = current_user.todos.not_completed.not_hidden.not_deferred_or_blocked.  ["../applications/pw-tracks/controllers/stats_controller.rb", 147]
237 select("todos.created_at").  ["../applications/pw-tracks/controllers/stats_controller.rb", 148]
238 reorder("todos.created_at DESC")  ["../applications/pw-tracks/controllers/stats_controller.rb", 149]
239   ["../applications/pw-tracks/controllers/stats_controller.rb", 150]
240 @max_weeks = difference_in_weeks(@today, @actions_running_time.last.created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 151]
241 @actions_running_per_week_array = convert_to_weeks_from_today_array(@actions_running_time, @max_weeks+1, :created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 152]
242   ["../applications/pw-tracks/controllers/stats_controller.rb", 153]
243 # cut off chart at 52 weeks = one year  ["../applications/pw-tracks/controllers/stats_controller.rb", 154]
244 @count = [52, @max_weeks].min  ["../applications/pw-tracks/controllers/stats_controller.rb", 155]
245   ["../applications/pw-tracks/controllers/stats_controller.rb", 156]
246 # convert to new array to hold max @cut_off elems + 1 for sum of actions after @cut_off  ["../applications/pw-tracks/controllers/stats_controller.rb", 157]
247 @actions_running_time_array = cut_off_array_with_sum(@actions_running_per_week_array, @count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 158]
248 @max_actions = @actions_running_time_array.max  ["../applications/pw-tracks/controllers/stats_controller.rb", 159]
249   ["../applications/pw-tracks/controllers/stats_controller.rb", 160]
250 # get percentage done cumulative  ["../applications/pw-tracks/controllers/stats_controller.rb", 161]
251 @cum_percent_done = convert_to_cumulative_array(@actions_running_time_array, @actions_running_time.count )  ["../applications/pw-tracks/controllers/stats_controller.rb", 162]
252   ["../applications/pw-tracks/controllers/stats_controller.rb", 163]
253 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 164]
254 end  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 1]
255 url_labels = Array.new(@count){ |i| url_for(:controller => 'stats', :action => 'show_selected_actions_from_chart', :index => i, :id=> "avrt") }  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 2]
256 url_labels[@count]=url_for(:controller => 'stats', :action => 'show_selected_actions_from_chart', :index => @count, :id=> "avrt_end")  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 3]
257   ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 4]
258 time_labels         = Array.new(@count){ |i| "#{i}-#{i+1}" }  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 5]
259 time_labels[0] = "< 1"  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 6]
260 time_labels[@count] = "> #{@count}"  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 7]
261   ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 8]
262 t('stats.current_running_time_of_incomplete_visible_actions')  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 9]
263 t('stats.running_time_legend.actions')  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 10]
264 t('stats.running_time_legend.percentage')  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 11]
265 t('stats.running_time_legend.weeks')  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 12]
266 @actions_running_time_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 13]
267 url_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 14]
268 @cum_percent_done.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 15]
269 time_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 16]
270   ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 17]
271 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 18]
272 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 19]
273   ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 20]
274 1+@max_actions+@max_actions/10  ["../applications/pw-tracks//ruby_views/stats/actions_visible_running_time_data.html.erb", 21]
275   ["../applications/pw-tracks/controllers/stats_controller.rb", 165]
276   ["../applications/pw-tracks/controllers/stats_controller.rb", 166]
277 def actions_open_per_week_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 167]
278 @actions_started = current_user.todos.created_after(@today-53.weeks).  ["../applications/pw-tracks/controllers/stats_controller.rb", 168]
279 select("todos.created_at, todos.completed_at").  ["../applications/pw-tracks/controllers/stats_controller.rb", 169]
280 reorder("todos.created_at DESC")  ["../applications/pw-tracks/controllers/stats_controller.rb", 170]
281   ["../applications/pw-tracks/controllers/stats_controller.rb", 171]
282 @max_weeks = difference_in_weeks(@today, @actions_started.last.created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 172]
283   ["../applications/pw-tracks/controllers/stats_controller.rb", 173]
284 # cut off chart at 52 weeks = one year  ["../applications/pw-tracks/controllers/stats_controller.rb", 174]
285 @count = [52, @max_weeks].min  ["../applications/pw-tracks/controllers/stats_controller.rb", 175]
286   ["../applications/pw-tracks/controllers/stats_controller.rb", 176]
287 @actions_open_per_week_array = convert_to_weeks_running_from_today_array(@actions_started, @max_weeks+1)  ["../applications/pw-tracks/controllers/stats_controller.rb", 177]
288 @actions_open_per_week_array = cut_off_array(@actions_open_per_week_array, @count)  ["../applications/pw-tracks/controllers/stats_controller.rb", 178]
289 @max_actions = (@actions_open_per_week_array.max or 0)  ["../applications/pw-tracks/controllers/stats_controller.rb", 179]
290   ["../applications/pw-tracks/controllers/stats_controller.rb", 180]
291 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 181]
292 end  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 1]
293 time_labels         = Array.new(@count+1){ |i| "#{i}-#{i+1}" }  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 2]
294 time_labels[0]      = "< 1"  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 3]
295   ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 4]
296 t('stats.open_per_week')  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 5]
297 t('stats.open_per_week_legend.actions')  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 6]
298 t('stats.open_per_week_legend.weeks')  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 7]
299 @actions_open_per_week_array.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 8]
300 time_labels.join(",")  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 9]
301   ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 10]
302 # add one to @max for people who have no actions completed yet.  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 11]
303 # OpenFlashChart cannot handle y_max=0  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 12]
304   ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 13]
305 1+@max_actions+@max_actions/10  ["../applications/pw-tracks//ruby_views/stats/actions_open_per_week_data.html.erb", 14]
306   ["../applications/pw-tracks/controllers/stats_controller.rb", 182]
307   ["../applications/pw-tracks/controllers/stats_controller.rb", 183]
308 def context_total_actions_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 184]
309 actions = Stats::TopContextsQuery.new(current_user).result  ["../applications/pw-tracks/controllers/stats_controller.rb", 185]
310   ["../applications/pw-tracks/controllers/stats_controller.rb", 186]
311 @data = Stats::PieChartData.new(actions, t('stats.spread_of_actions_for_all_context'), 70)  ["../applications/pw-tracks/controllers/stats_controller.rb", 187]
312   ["../applications/pw-tracks/controllers/stats_controller.rb", 188]
313 render :pie_chart_data, :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 189]
314 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 190]
315   ["../applications/pw-tracks/controllers/stats_controller.rb", 191]
316 def context_running_actions_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 192]
317 actions = Stats::TopContextsQuery.new(current_user, :running => true).result  ["../applications/pw-tracks/controllers/stats_controller.rb", 193]
318 @data = Stats::PieChartData.new(actions, t('stats.spread_of_running_actions_for_visible_contexts'), 60)  ["../applications/pw-tracks/controllers/stats_controller.rb", 194]
319   ["../applications/pw-tracks/controllers/stats_controller.rb", 195]
320 render :pie_chart_data, :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 196]
321 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 197]
322   ["../applications/pw-tracks/controllers/stats_controller.rb", 198]
323 def actions_day_of_week_all_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 199]
324 @actions_creation_day = current_user.todos.select("created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 200]
325 @actions_completion_day = current_user.todos.completed.select("completed_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 201]
326   ["../applications/pw-tracks/controllers/stats_controller.rb", 202]
327 # convert to array and fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 203]
328 @actions_creation_day_array = Array.new(7) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 204]
329 @actions_creation_day.each { |t| @actions_creation_day_array[ t.created_at.wday ] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 205]
330 @max = @actions_creation_day_array.max  ["../applications/pw-tracks/controllers/stats_controller.rb", 206]
331   ["../applications/pw-tracks/controllers/stats_controller.rb", 207]
332 # convert to array and fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 208]
333 @actions_completion_day_array = Array.new(7) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 209]
334 @actions_completion_day.each { |t| @actions_completion_day_array[ t.completed_at.wday ] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 210]
335 @max = @actions_completion_day_array.max  ["../applications/pw-tracks/controllers/stats_controller.rb", 211]
336   ["../applications/pw-tracks/controllers/stats_controller.rb", 212]
337 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 213]
338 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 214]
339   ["../applications/pw-tracks/controllers/stats_controller.rb", 215]
340 def actions_day_of_week_30days_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 216]
341 @actions_creation_day = current_user.todos.created_after(@cut_off_month).select("created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 217]
342 @actions_completion_day = current_user.todos.completed_after(@cut_off_month).select("completed_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 218]
343   ["../applications/pw-tracks/controllers/stats_controller.rb", 219]
344 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 220]
345 @max=0  ["../applications/pw-tracks/controllers/stats_controller.rb", 221]
346 @actions_creation_day_array = Array.new(7) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 222]
347 @actions_creation_day.each { |r| @actions_creation_day_array[ r.created_at.wday ] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 223]
348   ["../applications/pw-tracks/controllers/stats_controller.rb", 224]
349 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 225]
350 @actions_completion_day_array = Array.new(7) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 226]
351 @actions_completion_day.each { |r| @actions_completion_day_array[r.completed_at.wday] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 227]
352   ["../applications/pw-tracks/controllers/stats_controller.rb", 228]
353 @max = [@actions_creation_day_array.max, @actions_completion_day_array.max].max  ["../applications/pw-tracks/controllers/stats_controller.rb", 229]
354   ["../applications/pw-tracks/controllers/stats_controller.rb", 230]
355 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 231]
356 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 232]
357   ["../applications/pw-tracks/controllers/stats_controller.rb", 233]
358 def actions_time_of_day_all_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 234]
359 @actions_creation_hour = current_user.todos.select("created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 235]
360 @actions_completion_hour = current_user.todos.completed.select("completed_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 236]
361   ["../applications/pw-tracks/controllers/stats_controller.rb", 237]
362 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 238]
363 @actions_creation_hour_array = Array.new(24) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 239]
364 @actions_creation_hour.each{|r| @actions_creation_hour_array[r.created_at.hour] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 240]
365   ["../applications/pw-tracks/controllers/stats_controller.rb", 241]
366 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 242]
367 @actions_completion_hour_array = Array.new(24) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 243]
368 @actions_completion_hour.each{|r| @actions_completion_hour_array[r.completed_at.hour] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 244]
369   ["../applications/pw-tracks/controllers/stats_controller.rb", 245]
370 @max = [@actions_creation_hour_array.max, @actions_completion_hour_array.max].max  ["../applications/pw-tracks/controllers/stats_controller.rb", 246]
371   ["../applications/pw-tracks/controllers/stats_controller.rb", 247]
372 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 248]
373 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 249]
374   ["../applications/pw-tracks/controllers/stats_controller.rb", 250]
375 def actions_time_of_day_30days_data  ["../applications/pw-tracks/controllers/stats_controller.rb", 251]
376 @actions_creation_hour = current_user.todos.created_after(@cut_off_month).select("created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 252]
377 @actions_completion_hour = current_user.todos.completed_after(@cut_off_month).select("completed_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 253]
378   ["../applications/pw-tracks/controllers/stats_controller.rb", 254]
379 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 255]
380 @actions_creation_hour_array = Array.new(24) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 256]
381 @actions_creation_hour.each{|r| @actions_creation_hour_array[r.created_at.hour] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 257]
382   ["../applications/pw-tracks/controllers/stats_controller.rb", 258]
383 # convert to hash to be able to fill in non-existing days  ["../applications/pw-tracks/controllers/stats_controller.rb", 259]
384 @actions_completion_hour_array = Array.new(24) { |i| 0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 260]
385 @actions_completion_hour.each{|r| @actions_completion_hour_array[r.completed_at.hour] += 1 }  ["../applications/pw-tracks/controllers/stats_controller.rb", 261]
386   ["../applications/pw-tracks/controllers/stats_controller.rb", 262]
387 @max = [@actions_creation_hour_array.max, @max = @actions_completion_hour_array.max].max  ["../applications/pw-tracks/controllers/stats_controller.rb", 263]
388   ["../applications/pw-tracks/controllers/stats_controller.rb", 264]
389 render :layout => false  ["../applications/pw-tracks/controllers/stats_controller.rb", 265]
390 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 266]
391   ["../applications/pw-tracks/controllers/stats_controller.rb", 267]
392 def show_selected_actions_from_chart  ["../applications/pw-tracks/controllers/stats_controller.rb", 268]
393 @page_title = t('stats.action_selection_title')  ["../applications/pw-tracks/controllers/stats_controller.rb", 269]
394 @count = 99  ["../applications/pw-tracks/controllers/stats_controller.rb", 270]
395   ["../applications/pw-tracks/controllers/stats_controller.rb", 271]
396 @source_view = 'stats'  ["../applications/pw-tracks/controllers/stats_controller.rb", 272]
397   ["../applications/pw-tracks/controllers/stats_controller.rb", 273]
398 case params['id']  ["../applications/pw-tracks/controllers/stats_controller.rb", 274]
399 when 'avrt', 'avrt_end' # actions_visible_running_time  ["../applications/pw-tracks/controllers/stats_controller.rb", 275]
400   ["../applications/pw-tracks/controllers/stats_controller.rb", 276]
401 # HACK: because open flash chart uses & to denote the end of a parameter,  ["../applications/pw-tracks/controllers/stats_controller.rb", 277]
402 # we cannot use URLs with multiple parameters (that would use &). So we  ["../applications/pw-tracks/controllers/stats_controller.rb", 278]
403 # revert to using two id's for the same selection. avtr_end means that the  ["../applications/pw-tracks/controllers/stats_controller.rb", 279]
404 # last bar of the chart is selected. avtr is used for all other bars  ["../applications/pw-tracks/controllers/stats_controller.rb", 280]
405   ["../applications/pw-tracks/controllers/stats_controller.rb", 281]
406 week_from = params['index'].to_i  ["../applications/pw-tracks/controllers/stats_controller.rb", 282]
407 week_to = week_from+1  ["../applications/pw-tracks/controllers/stats_controller.rb", 283]
408   ["../applications/pw-tracks/controllers/stats_controller.rb", 284]
409 @chart = Stats::Chart.new('actions_visible_running_time_data')  ["../applications/pw-tracks/controllers/stats_controller.rb", 285]
410 @page_title = t('stats.actions_selected_from_week')  ["../applications/pw-tracks/controllers/stats_controller.rb", 286]
411 @further = false  ["../applications/pw-tracks/controllers/stats_controller.rb", 287]
412 if params['id'] == 'avrt_end'  ["../applications/pw-tracks/controllers/stats_controller.rb", 288]
413 @page_title += week_from.to_s + t('stats.actions_further')  ["../applications/pw-tracks/controllers/stats_controller.rb", 289]
414 @further = true  ["../applications/pw-tracks/controllers/stats_controller.rb", 290]
415 else  ["../applications/pw-tracks/controllers/stats_controller.rb", 291]
416 @page_title += week_from.to_s + " - " + week_to.to_s + ""  ["../applications/pw-tracks/controllers/stats_controller.rb", 292]
417 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 293]
418   ["../applications/pw-tracks/controllers/stats_controller.rb", 294]
419 # get all running actions that are visible  ["../applications/pw-tracks/controllers/stats_controller.rb", 295]
420 @actions_running_time = current_user.todos.not_completed.not_hidden.not_deferred_or_blocked.  ["../applications/pw-tracks/controllers/stats_controller.rb", 296]
421 select("todos.id, todos.created_at").  ["../applications/pw-tracks/controllers/stats_controller.rb", 297]
422 reorder("todos.created_at DESC")  ["../applications/pw-tracks/controllers/stats_controller.rb", 298]
423   ["../applications/pw-tracks/controllers/stats_controller.rb", 299]
424 selected_todo_ids = get_ids_from(@actions_running_time, week_from, week_to, params['id']== 'avrt_end')  ["../applications/pw-tracks/controllers/stats_controller.rb", 300]
425 @selected_actions = selected_todo_ids.size == 0 ? [] : current_user.todos.where("id in (" + selected_todo_ids.join(",") + ")")  ["../applications/pw-tracks/controllers/stats_controller.rb", 301]
426 @count = @selected_actions.size  ["../applications/pw-tracks/controllers/stats_controller.rb", 302]
427   ["../applications/pw-tracks/controllers/stats_controller.rb", 303]
428 render :action => "show_selection_from_chart"  ["../applications/pw-tracks/controllers/stats_controller.rb", 304]
429 render :partial => 'chart', :locals => {:chart => @chart}  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 1]
430 @swf_count ||= 0  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 1]
431 swf_tag "open-flash-chart.swf",  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 2]
432 :flashvars => { 'width' => chart.width, 'height' => chart.height, 'data' => url_for(:action => chart.action)},  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 3]
433 :parameters => { 'allowScriptAccess' => 'sameDomain', 'wmode' => 'transparent'},  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 4]
434 :div_id => "chart_#{@swf_count+=1}",  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 5]
435 :size => chart.dimensions  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 6]
436 t('stats.click_to_update_actions')  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 2]
437 raw t('stats.click_to_return', :link => link_to(t('stats.click_to_return_link'), stats_path))  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 3]
438   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 4]
439 unless @further  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 5]
440   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 6]
441 raw t('stats.click_to_show_actions_from_week',  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 7]
442 :link => link_to("here", show_actions_from_chart_path(:id=>"#{params[:id]}_end", :index => params[:index])),  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 8]
443 :week => params[:index])  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 9]
444   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 10]
445   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 11]
446 end  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 12]
447   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 13]
448 @page_title  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 14]
449 @selected_actions.empty? ? 'block' : 'none'  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 15]
450 t('stats.no_actions_selected')  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 16]
451 render :partial => "todos/todo", :collection => @selected_actions, :locals => { :parent_container_type => 'stats' }  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 17]
452   ["../applications/pw-tracks/controllers/stats_controller.rb", 305]
453 when 'art', 'art_end'  ["../applications/pw-tracks/controllers/stats_controller.rb", 306]
454 week_from = params['index'].to_i  ["../applications/pw-tracks/controllers/stats_controller.rb", 307]
455 week_to = week_from+1  ["../applications/pw-tracks/controllers/stats_controller.rb", 308]
456   ["../applications/pw-tracks/controllers/stats_controller.rb", 309]
457 @chart = Stats::Chart.new('actions_running_time_data')  ["../applications/pw-tracks/controllers/stats_controller.rb", 310]
458 @page_title = "Actions selected from week "  ["../applications/pw-tracks/controllers/stats_controller.rb", 311]
459 @further = false  ["../applications/pw-tracks/controllers/stats_controller.rb", 312]
460 if params['id'] == 'art_end'  ["../applications/pw-tracks/controllers/stats_controller.rb", 313]
461 @page_title += week_from.to_s + " and further"  ["../applications/pw-tracks/controllers/stats_controller.rb", 314]
462 @further = true  ["../applications/pw-tracks/controllers/stats_controller.rb", 315]
463 else  ["../applications/pw-tracks/controllers/stats_controller.rb", 316]
464 @page_title += week_from.to_s + " - " + week_to.to_s + ""  ["../applications/pw-tracks/controllers/stats_controller.rb", 317]
465 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 318]
466   ["../applications/pw-tracks/controllers/stats_controller.rb", 319]
467 # get all running actions  ["../applications/pw-tracks/controllers/stats_controller.rb", 320]
468 @actions_running_time = current_user.todos.not_completed.select("id, created_at")  ["../applications/pw-tracks/controllers/stats_controller.rb", 321]
469   ["../applications/pw-tracks/controllers/stats_controller.rb", 322]
470 selected_todo_ids = get_ids_from(@actions_running_time, week_from, week_to, params['id']=='art_end')  ["../applications/pw-tracks/controllers/stats_controller.rb", 323]
471 @selected_actions = selected_todo_ids.size == 0 ? [] : current_user.todos.where("id in (#{selected_todo_ids.join(",")})")  ["../applications/pw-tracks/controllers/stats_controller.rb", 324]
472 @count = @selected_actions.size  ["../applications/pw-tracks/controllers/stats_controller.rb", 325]
473   ["../applications/pw-tracks/controllers/stats_controller.rb", 326]
474 render :action => "show_selection_from_chart"  ["../applications/pw-tracks/controllers/stats_controller.rb", 327]
475 render :partial => 'chart', :locals => {:chart => @chart}  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 1]
476 @swf_count ||= 0  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 1]
477 swf_tag "open-flash-chart.swf",  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 2]
478 :flashvars => { 'width' => chart.width, 'height' => chart.height, 'data' => url_for(:action => chart.action)},  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 3]
479 :parameters => { 'allowScriptAccess' => 'sameDomain', 'wmode' => 'transparent'},  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 4]
480 :div_id => "chart_#{@swf_count+=1}",  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 5]
481 :size => chart.dimensions  ["../applications/pw-tracks//ruby_views/stats/_chart.html.erb", 6]
482 t('stats.click_to_update_actions')  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 2]
483 raw t('stats.click_to_return', :link => link_to(t('stats.click_to_return_link'), stats_path))  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 3]
484   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 4]
485 unless @further  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 5]
486   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 6]
487 raw t('stats.click_to_show_actions_from_week',  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 7]
488 :link => link_to("here", show_actions_from_chart_path(:id=>"#{params[:id]}_end", :index => params[:index])),  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 8]
489 :week => params[:index])  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 9]
490   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 10]
491   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 11]
492 end  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 12]
493   ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 13]
494 @page_title  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 14]
495 @selected_actions.empty? ? 'block' : 'none'  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 15]
496 t('stats.no_actions_selected')  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 16]
497 render :partial => "todos/todo", :collection => @selected_actions, :locals => { :parent_container_type => 'stats' }  ["../applications/pw-tracks//ruby_views/stats/show_selection_from_chart.html.erb", 17]
498 else  ["../applications/pw-tracks/controllers/stats_controller.rb", 328]
499 # render error  ["../applications/pw-tracks/controllers/stats_controller.rb", 329]
500 render_failure "404 NOT FOUND. Unknown query selected"  ["../applications/pw-tracks/controllers/stats_controller.rb", 330]
501 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 331]
502 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 332]
503   ["../applications/pw-tracks/controllers/stats_controller.rb", 333]
504 def done  ["../applications/pw-tracks/controllers/stats_controller.rb", 334]
505 @source_view = 'done'  ["../applications/pw-tracks/controllers/stats_controller.rb", 335]
506   ["../applications/pw-tracks/controllers/stats_controller.rb", 336]
507 init_not_done_counts  ["../applications/pw-tracks/controllers/stats_controller.rb", 337]
508   ["../applications/pw-tracks/controllers/stats_controller.rb", 338]
509 @done_recently = current_user.todos.completed.limit(10).reorder('completed_at DESC').includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/stats_controller.rb", 339]
510 @last_completed_projects = current_user.projects.completed.limit(10).reorder('completed_at DESC').includes(:todos, :notes)  ["../applications/pw-tracks/controllers/stats_controller.rb", 340]
511 @last_completed_contexts = []  ["../applications/pw-tracks/controllers/stats_controller.rb", 341]
512 @last_completed_recurring_todos = current_user.recurring_todos.completed.limit(10).reorder('completed_at DESC').includes(:tags, :taggings)  ["../applications/pw-tracks/controllers/stats_controller.rb", 342]
513 #TODO: @last_completed_contexts = current_user.contexts.completed.all(:limit => 10, :order => 'completed_at DESC')  ["../applications/pw-tracks/controllers/stats_controller.rb", 343]
514 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 344]
515   ["../applications/pw-tracks/controllers/stats_controller.rb", 345]
516 private  ["../applications/pw-tracks/controllers/stats_controller.rb", 346]
517   ["../applications/pw-tracks/controllers/stats_controller.rb", 347]
518 def init  ["../applications/pw-tracks/controllers/stats_controller.rb", 348]
519 @me = self # for meta programming  ["../applications/pw-tracks/controllers/stats_controller.rb", 349]
520   ["../applications/pw-tracks/controllers/stats_controller.rb", 350]
521 # get the current date wih time set to 0:0  ["../applications/pw-tracks/controllers/stats_controller.rb", 351]
522 @today = Time.zone.now.utc.beginning_of_day  ["../applications/pw-tracks/controllers/stats_controller.rb", 352]
523   ["../applications/pw-tracks/controllers/stats_controller.rb", 353]
524 # define cut_off date and discard the time for a month, 3 months and a year  ["../applications/pw-tracks/controllers/stats_controller.rb", 354]
525 @cut_off_year = 12.months.ago.beginning_of_day  ["../applications/pw-tracks/controllers/stats_controller.rb", 355]
526 @cut_off_year_plus3 = 15.months.ago.beginning_of_day  ["../applications/pw-tracks/controllers/stats_controller.rb", 356]
527 @cut_off_month = 1.month.ago.beginning_of_day  ["../applications/pw-tracks/controllers/stats_controller.rb", 357]
528 @cut_off_30days = 30.days.ago.beginning_of_day  ["../applications/pw-tracks/controllers/stats_controller.rb", 358]
529 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 359]
530   ["../applications/pw-tracks/controllers/stats_controller.rb", 360]
531 def get_ids_from (actions, week_from, week_to, at_end)  ["../applications/pw-tracks/controllers/stats_controller.rb", 361]
532 selected_todo_ids = []  ["../applications/pw-tracks/controllers/stats_controller.rb", 362]
533   ["../applications/pw-tracks/controllers/stats_controller.rb", 363]
534 actions.each do |r|  ["../applications/pw-tracks/controllers/stats_controller.rb", 364]
535 weeks = difference_in_weeks(@today, r.created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 365]
536 if at_end  ["../applications/pw-tracks/controllers/stats_controller.rb", 366]
537 selected_todo_ids << r.id.to_s if weeks >= week_from  ["../applications/pw-tracks/controllers/stats_controller.rb", 367]
538 else  ["../applications/pw-tracks/controllers/stats_controller.rb", 368]
539 selected_todo_ids << r.id.to_s if weeks.between?(week_from, week_to-1)  ["../applications/pw-tracks/controllers/stats_controller.rb", 369]
540 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 370]
541 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 371]
542   ["../applications/pw-tracks/controllers/stats_controller.rb", 372]
543 return selected_todo_ids  ["../applications/pw-tracks/controllers/stats_controller.rb", 373]
544 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 374]
545   ["../applications/pw-tracks/controllers/stats_controller.rb", 375]
546 # uses the supplied block to determine array of indexes in hash  ["../applications/pw-tracks/controllers/stats_controller.rb", 376]
547 # the block should return an array of indexes each is added to the hash and summed  ["../applications/pw-tracks/controllers/stats_controller.rb", 377]
548 def convert_to_array(records, upper_bound)  ["../applications/pw-tracks/controllers/stats_controller.rb", 378]
549 a = Array.new(upper_bound, 0)  ["../applications/pw-tracks/controllers/stats_controller.rb", 379]
550 records.each { |r| (yield r).each { |i| a[i] += 1 if a[i] } }  ["../applications/pw-tracks/controllers/stats_controller.rb", 380]
551 a  ["../applications/pw-tracks/controllers/stats_controller.rb", 381]
552 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 382]
553   ["../applications/pw-tracks/controllers/stats_controller.rb", 383]
554 def put_events_into_month_buckets(records, array_size, date_method_on_todo)  ["../applications/pw-tracks/controllers/stats_controller.rb", 384]
555 convert_to_array(records.select { |x| x.send(date_method_on_todo) }, array_size) { |r| [difference_in_months(@today, r.send(date_method_on_todo))]}  ["../applications/pw-tracks/controllers/stats_controller.rb", 385]
556 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 386]
557   ["../applications/pw-tracks/controllers/stats_controller.rb", 387]
558 def convert_to_days_from_today_array(records, array_size, date_method_on_todo)  ["../applications/pw-tracks/controllers/stats_controller.rb", 388]
559 return convert_to_array(records, array_size){ |r| [difference_in_days(@today, r.send(date_method_on_todo))]}  ["../applications/pw-tracks/controllers/stats_controller.rb", 389]
560 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 390]
561   ["../applications/pw-tracks/controllers/stats_controller.rb", 391]
562 def convert_to_weeks_from_today_array(records, array_size, date_method_on_todo)  ["../applications/pw-tracks/controllers/stats_controller.rb", 392]
563 return convert_to_array(records, array_size) { |r| [difference_in_weeks(@today, r.send(date_method_on_todo))]}  ["../applications/pw-tracks/controllers/stats_controller.rb", 393]
564 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 394]
565   ["../applications/pw-tracks/controllers/stats_controller.rb", 395]
566 def convert_to_weeks_running_array(records, array_size)  ["../applications/pw-tracks/controllers/stats_controller.rb", 396]
567 return convert_to_array(records, array_size) { |r| [difference_in_weeks(r.completed_at, r.created_at)]}  ["../applications/pw-tracks/controllers/stats_controller.rb", 397]
568 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 398]
569   ["../applications/pw-tracks/controllers/stats_controller.rb", 399]
570 def convert_to_weeks_running_from_today_array(records, array_size)  ["../applications/pw-tracks/controllers/stats_controller.rb", 400]
571 return convert_to_array(records, array_size) { |r| week_indexes_of(r) }  ["../applications/pw-tracks/controllers/stats_controller.rb", 401]
572 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 402]
573   ["../applications/pw-tracks/controllers/stats_controller.rb", 403]
574 def week_indexes_of(record)  ["../applications/pw-tracks/controllers/stats_controller.rb", 404]
575 a = []  ["../applications/pw-tracks/controllers/stats_controller.rb", 405]
576 start_week = difference_in_weeks(@today, record.created_at)  ["../applications/pw-tracks/controllers/stats_controller.rb", 406]
577 end_week   = record.completed_at ? difference_in_weeks(@today, record.completed_at) : 0  ["../applications/pw-tracks/controllers/stats_controller.rb", 407]
578 end_week.upto(start_week) { |i| a << i };  ["../applications/pw-tracks/controllers/stats_controller.rb", 408]
579 return a  ["../applications/pw-tracks/controllers/stats_controller.rb", 409]
580 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 410]
581   ["../applications/pw-tracks/controllers/stats_controller.rb", 411]
582 # returns a new array containing all elems of array up to cut_off and  ["../applications/pw-tracks/controllers/stats_controller.rb", 412]
583 # adds the sum of the rest of array to the last elem  ["../applications/pw-tracks/controllers/stats_controller.rb", 413]
584 def cut_off_array_with_sum(array, cut_off)  ["../applications/pw-tracks/controllers/stats_controller.rb", 414]
585 # +1 to hold sum of rest  ["../applications/pw-tracks/controllers/stats_controller.rb", 415]
586 a = Array.new(cut_off+1){|i| array[i]||0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 416]
587 # add rest of array to last elem  ["../applications/pw-tracks/controllers/stats_controller.rb", 417]
588 a[cut_off] += array.inject(:+) - a.inject(:+)  ["../applications/pw-tracks/controllers/stats_controller.rb", 418]
589 return a  ["../applications/pw-tracks/controllers/stats_controller.rb", 419]
590 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 420]
591   ["../applications/pw-tracks/controllers/stats_controller.rb", 421]
592 def cut_off_array(array, cut_off)  ["../applications/pw-tracks/controllers/stats_controller.rb", 422]
593 return Array.new(cut_off){|i| array[i]||0}  ["../applications/pw-tracks/controllers/stats_controller.rb", 423]
594 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 424]
595   ["../applications/pw-tracks/controllers/stats_controller.rb", 425]
596 def convert_to_cumulative_array(array, max)  ["../applications/pw-tracks/controllers/stats_controller.rb", 426]
597 # calculate fractions  ["../applications/pw-tracks/controllers/stats_controller.rb", 427]
598 a = Array.new(array.size){|i| array[i]*100.0/max}  ["../applications/pw-tracks/controllers/stats_controller.rb", 428]
599 # make cumulative  ["../applications/pw-tracks/controllers/stats_controller.rb", 429]
600 1.upto(array.size-1){ |i| a[i] += a[i-1] }  ["../applications/pw-tracks/controllers/stats_controller.rb", 430]
601 return a  ["../applications/pw-tracks/controllers/stats_controller.rb", 431]
602 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 432]
603   ["../applications/pw-tracks/controllers/stats_controller.rb", 433]
604 # assumes date1 > date2  ["../applications/pw-tracks/controllers/stats_controller.rb", 434]
605 # this results in the number of months before the month of date1, not taking days into account, so diff of 31-dec and 1-jan is 1 month!  ["../applications/pw-tracks/controllers/stats_controller.rb", 435]
606 def difference_in_months(date1, date2)  ["../applications/pw-tracks/controllers/stats_controller.rb", 436]
607 return (date1.utc.year - date2.utc.year)*12 + (date1.utc.month - date2.utc.month)  ["../applications/pw-tracks/controllers/stats_controller.rb", 437]
608 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 438]
609   ["../applications/pw-tracks/controllers/stats_controller.rb", 439]
610 # assumes date1 > date2  ["../applications/pw-tracks/controllers/stats_controller.rb", 440]
611 def difference_in_days(date1, date2)  ["../applications/pw-tracks/controllers/stats_controller.rb", 441]
612 return ((date1.utc.at_midnight-date2.utc.at_midnight)/SECONDS_PER_DAY).to_i  ["../applications/pw-tracks/controllers/stats_controller.rb", 442]
613 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 443]
614   ["../applications/pw-tracks/controllers/stats_controller.rb", 444]
615 # assumes date1 > date2  ["../applications/pw-tracks/controllers/stats_controller.rb", 445]
616 def difference_in_weeks(date1, date2)  ["../applications/pw-tracks/controllers/stats_controller.rb", 446]
617 return difference_in_days(date1, date2) / 7  ["../applications/pw-tracks/controllers/stats_controller.rb", 447]
618 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 448]
619   ["../applications/pw-tracks/controllers/stats_controller.rb", 449]
620 def three_month_avg(set, i)  ["../applications/pw-tracks/controllers/stats_controller.rb", 450]
621 (set.fetch(i){ 0 } + set.fetch(i+1){ 0 } + set.fetch(i+2){ 0 }) / 3.0  ["../applications/pw-tracks/controllers/stats_controller.rb", 451]
622 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 452]
623   ["../applications/pw-tracks/controllers/stats_controller.rb", 453]
624 def set_three_month_avg(set,upper_bound)  ["../applications/pw-tracks/controllers/stats_controller.rb", 454]
625 (0..upper_bound-1).map { |i| three_month_avg(set, i) }  ["../applications/pw-tracks/controllers/stats_controller.rb", 455]
626 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 456]
627   ["../applications/pw-tracks/controllers/stats_controller.rb", 457]
628 # sets "null" on first column and - if necessary - cleans up last two columns, which may have insufficient data  ["../applications/pw-tracks/controllers/stats_controller.rb", 458]
629 def compute_running_avg_array(set, upper_bound)  ["../applications/pw-tracks/controllers/stats_controller.rb", 459]
630 result = set_three_month_avg(set, upper_bound)  ["../applications/pw-tracks/controllers/stats_controller.rb", 460]
631 result[upper_bound-1] = result[upper_bound-1] * 3 if upper_bound == set.length  ["../applications/pw-tracks/controllers/stats_controller.rb", 461]
632 result[upper_bound-2] = result[upper_bound-2] * 3 / 2 if upper_bound > 1 and upper_bound == set.length  ["../applications/pw-tracks/controllers/stats_controller.rb", 462]
633 result[0] = "null"  ["../applications/pw-tracks/controllers/stats_controller.rb", 463]
634 result  ["../applications/pw-tracks/controllers/stats_controller.rb", 464]
635 end # unsolved, not triggered, edge case for set.length == upper_bound + 1  ["../applications/pw-tracks/controllers/stats_controller.rb", 465]
636   ["../applications/pw-tracks/controllers/stats_controller.rb", 466]
637 end  ["../applications/pw-tracks/controllers/stats_controller.rb", 467]
LENGTH: 163
1 module Todos  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 1]
2 class TodoCreateParamsHelper  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 2]
3   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 3]
4 attr_reader :new_project_created, :new_context_created, :attributes  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 4]
5   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 5]
6 def initialize(params, user)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 6]
7 set_params(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 7]
8 filter_attributes(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 8]
9 filter_tags  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 9]
10 filter_starred  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 10]
11   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 11]
12 @user = user  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 12]
13 @errors = []  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 13]
14   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 14]
15 @new_project_created = find_or_create_group(:project, user.projects, project_name)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 15]
16 @new_context_created = find_or_create_group(:context, user.contexts, context_name)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 16]
17 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 17]
18   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 18]
19 def set_params(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 19]
20 @params = params['request'] || params  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 20]
21 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 21]
22   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 22]
23 def filter_attributes(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 23]
24 if params[:request]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 24]
25 @attributes = todo_params(params[:request])  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 25]
26 elsif params[:todo]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 26]
27 @attributes = todo_params(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 27]
28 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 28]
29 @attributes = {} if @attributes.nil?  # make sure there is at least an empty hash  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 29]
30 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 30]
31   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 31]
32 def filter_tags  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 32]
33 if @attributes[:tags]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 33]
34 # for single tags, @attributed[:tags] returns a hash. For multiple tags,  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 34]
35 # it with return an array of hashes. Make sure it is always an array of hashes  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 35]
36 @attributes[:tags][:tag] = [@attributes[:tags][:tag]] unless @attributes[:tags][:tag].class == Array  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 36]
37 # the REST api may use <tags> which will collide with tags association, so rename tags to add_tags  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 37]
38 @attributes[:add_tags] = @attributes[:tags]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 38]
39 @attributes.delete :tags  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 39]
40 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 40]
41 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 41]
42   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 42]
43 def filter_starred  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 43]
44 if @params[:new_todo_starred]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 44]
45 @attributes["starred"] = (@params[:new_todo_starred]||"").include? "true"  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 45]
46 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 46]
47 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 47]
48   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 48]
49 def show_from  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 49]
50 @attributes['show_from']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 50]
51 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 51]
52   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 52]
53 def due  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 53]
54 @attributes['due']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 54]
55 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 55]
56   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 56]
57 def project_name  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 57]
58 @params['project_name'].strip unless @params['project_name'].nil?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 58]
59 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 59]
60   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 60]
61 def project_id  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 61]
62 @attributes['project_id']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 62]
63 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 63]
64   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 64]
65 def context_name  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 65]
66 @params['context_name'].strip unless @params['context_name'].nil?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 66]
67 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 67]
68   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 68]
69 def context_id  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 69]
70 @attributes['context_id']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 70]
71 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 71]
72   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 72]
73 def tag_list  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 73]
74 @params['tag_list']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 74]
75 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 75]
76   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 76]
77 def predecessor_list  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 77]
78 @params['predecessor_list']  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 78]
79 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 79]
80   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 80]
81 def parse_dates()  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 81]
82 @attributes['show_from'] = @user.prefs.parse_date(show_from)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 82]
83 @attributes['due'] = @user.prefs.parse_date(due)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 83]
84 @attributes['due'] ||= ''  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 84]
85 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 85]
86   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 86]
87 def sequential?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 87]
88 return @params[:todos_sequential].present? && @params[:todos_sequential]=='true'  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 88]
89 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 89]
90   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 90]
91 def specified_by_name?(group_type)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 91]
92 return send("#{group_type}_specified_by_name?")  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 92]
93 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 93]
94   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 94]
95 def specified_by_id?(group_type)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 95]
96 group_id = send("#{group_type}_id")  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 96]
97 group_id.present?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 97]
98 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 98]
99   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 99]
100 def project_specified_by_name?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 100]
101 return false if @attributes['project_id'].present?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 101]
102 return false if project_name.blank?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 102]
103 true  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 103]
104 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 104]
105   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 105]
106 def context_specified_by_name?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 106]
107 return false if @attributes['context_id'].present?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 107]
108 return false if context_name.blank?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 108]
109 true  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 109]
110 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 110]
111   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 111]
112 def add_errors(model)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 112]
113 @errors.each {|e| model.errors[ e[:attribute] ] = e[:message] }  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 113]
114 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 114]
115   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 115]
116 private  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 116]
117   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 117]
118 def todo_params(params)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 118]
119 # keep :predecessor_dependencies from being filterd (for XML API).  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 119]
120 # The permit cannot handle multiple precessors  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 120]
121 if params[:todo][:predecessor_dependencies]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 121]
122 deps = params[:todo][:predecessor_dependencies][:predecessor]  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 122]
123 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 123]
124   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 124]
125 # accept empty :todo hash  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 125]
126 if params[:todo].empty?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 126]
127 params[:todo] = {:ignore => true}  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 127]
128 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 128]
129   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 129]
130 filtered = params.require(:todo).permit(  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 130]
131 :context_id, :project_id, :description, :notes,  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 131]
132 :due, :show_from, :state,  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 132]
133 # XML API  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 133]
134 :tags => [:tag => [:name]],  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 134]
135 :context => [:name],  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 135]
136 :project => [:name])  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 136]
137   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 137]
138 # add back :predecessor_dependencies  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 138]
139 filtered[:predecessor_dependencies] = {:predecessor => deps } unless deps.nil?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 139]
140 filtered  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 140]
141 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 141]
142   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 142]
143 def find_or_create_group(group_type, set, name)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 143]
144 return set_id_by_name(group_type, set, name) if specified_by_name?(group_type)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 144]
145 return set_id_by_id_string(group_type, set, @attributes["#{group_type}_id"]) if specified_by_id?(group_type)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 145]
146 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 146]
147   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 147]
148 def set_id_by_name(group_type, set, name)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 148]
149 group = set.where(:name => name).first_or_create  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 149]
150 @attributes["#{group_type}_id"] = group.id  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 150]
151 return group.new_record_before_save?  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 151]
152 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 152]
153   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 153]
154 def set_id_by_id_string(group_type, set, id)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 154]
155 # be aware, this will replace the project_id/context_id (string) in @attributes with the new found id (int)  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 155]
156 @attributes["#{group_type}_id"] = set.find(id).id  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 156]
157 return false  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 157]
158 rescue  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 158]
159 @errors << { :attribute => group_type, :message => "unknown"}  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 159]
160 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 160]
161   ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 161]
162 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 162]
163 end  ["../applications/pw-tracks/controllers/todos/todo_create_params_helper.rb", 163]
LENGTH: 1539
1 class TodosController < ApplicationController  ["../applications/pw-tracks/controllers/todos_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/todos_controller.rb", 2]
3 skip_before_filter :login_required, :only => [:index, :tag]  ["../applications/pw-tracks/controllers/todos_controller.rb", 3]
4 prepend_before_filter :login_or_feed_token_required, :only => [:index, :tag]  ["../applications/pw-tracks/controllers/todos_controller.rb", 4]
5 append_before_filter :find_and_activate_ready, :only => [:index, :list_deferred]  ["../applications/pw-tracks/controllers/todos_controller.rb", 5]
6   ["../applications/pw-tracks/controllers/todos_controller.rb", 6]
7 protect_from_forgery :except => :check_deferred  ["../applications/pw-tracks/controllers/todos_controller.rb", 7]
8   ["../applications/pw-tracks/controllers/todos_controller.rb", 8]
9 def index  ["../applications/pw-tracks/controllers/todos_controller.rb", 9]
10 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 10]
11   ["../applications/pw-tracks/controllers/todos_controller.rb", 11]
12 init_data_for_sidebar unless mobile?  ["../applications/pw-tracks/controllers/todos_controller.rb", 12]
13   ["../applications/pw-tracks/controllers/todos_controller.rb", 13]
14 @todos = current_user.todos.includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 14]
15 @todos = @todos.limit(sanitize(params[:limit])) if params[:limit]  ["../applications/pw-tracks/controllers/todos_controller.rb", 15]
16   ["../applications/pw-tracks/controllers/todos_controller.rb", 16]
17 @not_done_todos = get_not_done_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 17]
18   ["../applications/pw-tracks/controllers/todos_controller.rb", 18]
19 @projects = current_user.projects.includes(:default_context)  ["../applications/pw-tracks/controllers/todos_controller.rb", 19]
20 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/todos_controller.rb", 20]
21 @contexts_to_show = current_user.contexts.active.limit(50)  ["../applications/pw-tracks/controllers/todos_controller.rb", 21]
22 @projects_to_show = current_user.projects.active.limit(50)  ["../applications/pw-tracks/controllers/todos_controller.rb", 22]
23   ["../applications/pw-tracks/controllers/todos_controller.rb", 23]
24 # If you've set no_completed to zero, the completed items box isn't shown  ["../applications/pw-tracks/controllers/todos_controller.rb", 24]
25 # on the home page  ["../applications/pw-tracks/controllers/todos_controller.rb", 25]
26 max_completed = current_user.prefs.show_number_completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 26]
27 @done = current_user.todos.completed.limit(max_completed).includes(Todo::DEFAULT_INCLUDES) unless max_completed == 0  ["../applications/pw-tracks/controllers/todos_controller.rb", 27]
28   ["../applications/pw-tracks/controllers/todos_controller.rb", 28]
29 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 29]
30 format.html  do  ["../applications/pw-tracks/controllers/todos_controller.rb", 30]
31 @page_title = t('todos.task_list_title')  ["../applications/pw-tracks/controllers/todos_controller.rb", 31]
32 # Set count badge to number of not-done, not hidden context items  ["../applications/pw-tracks/controllers/todos_controller.rb", 32]
33 @count = current_user.todos.active.not_hidden.count(:all)  ["../applications/pw-tracks/controllers/todos_controller.rb", 33]
34 @todos_without_project = @not_done_todos.select{|t|t.project.nil?}  ["../applications/pw-tracks/controllers/todos_controller.rb", 34]
35 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 35]
36 format.m do  ["../applications/pw-tracks/controllers/todos_controller.rb", 36]
37 @page_title = t('todos.mobile_todos_page_title')  ["../applications/pw-tracks/controllers/todos_controller.rb", 37]
38 @home = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 38]
39   ["../applications/pw-tracks/controllers/todos_controller.rb", 39]
40 cookies[:mobile_url]= { :value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/todos_controller.rb", 40]
41 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 41]
42   ["../applications/pw-tracks/controllers/todos_controller.rb", 42]
43 render :action => 'index'.freeze  ["../applications/pw-tracks/controllers/todos_controller.rb", 43]
44 empty_message_holder("not_done", @not_done_todos.empty?)  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 1]
45 show_grouped_todos  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 2]
46 if @group_view_by == 'project'  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 3]
47 show_todos_without_project(@todos_without_project)  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 4]
48 end  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 5]
49 show_done_todos(@done, {:parent_container_type => @group_view_by, :collapsible => true}) unless @done.nil?  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 6]
50 render :partial => "shared/add_new_item_form"  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 7]
51   ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 1]
52 @initial_context_name = @context.name if @context  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 2]
53 @initial_context_name ||= @project.default_context.name unless @project.nil? || @project.default_context.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 3]
54 @initial_context_name ||= @contexts.active.first.name unless @contexts.active.first.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 4]
55 @initial_context_name ||= @contexts.first.name unless @contexts.first.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 5]
56 @initial_project_name = @project.name unless @project.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 6]
57 @initial_tags ||= @default_tags  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 7]
58 @initial_tags ||= @project.default_tags unless @project.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 8]
59   ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 9]
60 t('shared.hide_action_form_title')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 10]
61 t('shared.hide_form')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 11]
62 t('shared.toggle_multi_title')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 12]
63 t('shared.toggle_multi')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 13]
64 render :partial => 'todos/new_todo_form', :object => Todo.new  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 14]
65 render :partial => 'todos/new_multi_todo_form', :object => Todo.new  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 15]
66 render :file => "sidebar/sidebar"  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 8]
67 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 44]
68 format.text  do  ["../applications/pw-tracks/controllers/todos_controller.rb", 45]
69 # somehow passing Mime::TEXT using content_type to render does not work  ["../applications/pw-tracks/controllers/todos_controller.rb", 46]
70 headers['Content-Type'.freeze]=Mime::TEXT.to_s  ["../applications/pw-tracks/controllers/todos_controller.rb", 47]
71 render :content_type => Mime::TEXT  ["../applications/pw-tracks/controllers/todos_controller.rb", 48]
72 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 49]
73 format.xml do  ["../applications/pw-tracks/controllers/todos_controller.rb", 50]
74 @xml_todos = params[:limit_to_active_todos] ? @not_done_todos : @todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 51]
75 render :xml => @xml_todos.to_xml( *todo_xml_params )  ["../applications/pw-tracks/controllers/todos_controller.rb", 52]
76 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 53]
77 format.any(:rss, :atom) do  ["../applications/pw-tracks/controllers/todos_controller.rb", 54]
78 @feed_title = 'Tracks Actions'.freeze  ["../applications/pw-tracks/controllers/todos_controller.rb", 55]
79 @feed_description = "Actions for #{current_user.display_name}"  ["../applications/pw-tracks/controllers/todos_controller.rb", 56]
80 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 57]
81 format.ics  ["../applications/pw-tracks/controllers/todos_controller.rb", 58]
82 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 59]
83 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 60]
84   ["../applications/pw-tracks/controllers/todos_controller.rb", 61]
85 def new  ["../applications/pw-tracks/controllers/todos_controller.rb", 62]
86 @projects = current_user.projects.active.limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 63]
87 @contexts = current_user.contexts.limie(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 64]
88 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 65]
89 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 66]
90 @new_mobile = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 67]
91 @return_path=cookies[:mobile_url] ? cookies[:mobile_url] : mobile_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 68]
92 @mobile_from_context = current_user.contexts.find(params[:from_context]) if params[:from_context]  ["../applications/pw-tracks/controllers/todos_controller.rb", 69]
93 @mobile_from_project = current_user.projects.find(params[:from_project]) if params[:from_project]  ["../applications/pw-tracks/controllers/todos_controller.rb", 70]
94 if params[:from_project] && !params[:from_context]  ["../applications/pw-tracks/controllers/todos_controller.rb", 71]
95 # we have a project but not a context -> use the default context  ["../applications/pw-tracks/controllers/todos_controller.rb", 72]
96 @mobile_from_context = @mobile_from_project.default_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 73]
97 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 74]
98 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 75]
99 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 76]
100 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 77]
101   ["../applications/pw-tracks/controllers/todos_controller.rb", 78]
102 def create  ["../applications/pw-tracks/controllers/todos_controller.rb", 79]
103 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 80]
104 @default_context = current_user.contexts.where(:name => params['default_context_name']).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 81]
105 @default_project = current_user.projects.where(:name => params['default_project_name']).first if params['default_project_name'].present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 82]
106   ["../applications/pw-tracks/controllers/todos_controller.rb", 83]
107 @tag_name = params['_tag_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 84]
108   ["../applications/pw-tracks/controllers/todos_controller.rb", 85]
109 is_multiple = params[:todo] && params[:todo][:multiple_todos] && !params[:todo][:multiple_todos].nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 86]
110 if is_multiple  ["../applications/pw-tracks/controllers/todos_controller.rb", 87]
111 create_multiple  ["../applications/pw-tracks/controllers/todos_controller.rb", 88]
112 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 89]
113 p = Todos::TodoCreateParamsHelper.new(params, current_user)  ["../applications/pw-tracks/controllers/todos_controller.rb", 90]
114 p.parse_dates unless mobile?  ["../applications/pw-tracks/controllers/todos_controller.rb", 91]
115 tag_list = p.tag_list  ["../applications/pw-tracks/controllers/todos_controller.rb", 92]
116   ["../applications/pw-tracks/controllers/todos_controller.rb", 93]
117 @todo = current_user.todos.build  ["../applications/pw-tracks/controllers/todos_controller.rb", 94]
118 @todo.assign_attributes(p.attributes)  ["../applications/pw-tracks/controllers/todos_controller.rb", 95]
119 p.add_errors(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 96]
120   ["../applications/pw-tracks/controllers/todos_controller.rb", 97]
121 if @todo.errors.empty?  ["../applications/pw-tracks/controllers/todos_controller.rb", 98]
122 @todo.add_predecessor_list(p.predecessor_list)  ["../applications/pw-tracks/controllers/todos_controller.rb", 99]
123 @saved = @todo.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 100]
124 @todo.tag_with(tag_list) if @saved && tag_list.present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 101]
125 @todo.block! if @todo.uncompleted_predecessors?  ["../applications/pw-tracks/controllers/todos_controller.rb", 102]
126 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 103]
127 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 104]
128 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 105]
129   ["../applications/pw-tracks/controllers/todos_controller.rb", 106]
130 @todo_was_created_deferred = @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 107]
131 @todo_was_created_blocked = @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 108]
132 @not_done_todos = [@todo] if p.new_project_created || p.new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 109]
133 @new_project_created = p.new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 110]
134 @new_context_created = p.new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 111]
135   ["../applications/pw-tracks/controllers/todos_controller.rb", 112]
136 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 113]
137 format.html do  ["../applications/pw-tracks/controllers/todos_controller.rb", 114]
138 redirect_to :action => "index"  ["../applications/pw-tracks/controllers/todos_controller.rb", 115]
139 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 116]
140 format.m do  ["../applications/pw-tracks/controllers/todos_controller.rb", 117]
141 @return_path=cookies[:mobile_url] ? cookies[:mobile_url] : mobile_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 118]
142 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 119]
143 onsite_redirect_to @return_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 120]
144 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 121]
145 @projects = current_user.projects  ["../applications/pw-tracks/controllers/todos_controller.rb", 122]
146 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/todos_controller.rb", 123]
147 render :action => "new"  ["../applications/pw-tracks/controllers/todos_controller.rb", 124]
148 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 125]
149 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 126]
150 format.js do  ["../applications/pw-tracks/controllers/todos_controller.rb", 127]
151 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 128]
152 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 129]
153 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/todos_controller.rb", 130]
154 @projects = current_user.projects  ["../applications/pw-tracks/controllers/todos_controller.rb", 131]
155 @context = @todo.context  ["../applications/pw-tracks/controllers/todos_controller.rb", 132]
156 @project = @todo.project  ["../applications/pw-tracks/controllers/todos_controller.rb", 133]
157 @initial_context_name = params['default_context_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 134]
158 @initial_project_name = params['default_project_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 135]
159 @initial_tags = params['initial_tag_list']  ["../applications/pw-tracks/controllers/todos_controller.rb", 136]
160 @status_message = t('todos.added_new_next_action')  ["../applications/pw-tracks/controllers/todos_controller.rb", 137]
161 @status_message += ' ' + t('todos.to_tickler') if @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 138]
162 @status_message += ' ' + t('todos.in_pending_state') if @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 139]
163 @status_message += ' ' + t('todos.in_hidden_state') if @todo.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 140]
164 @status_message = t('todos.added_new_project') + ' / ' + @status_message if @new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 141]
165 @status_message = t('todos.added_new_context') + ' / ' + @status_message if @new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 142]
166 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 143]
167 render :action => 'create'  ["../applications/pw-tracks/controllers/todos_controller.rb", 144]
168 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 145]
169 format.xml do  ["../applications/pw-tracks/controllers/todos_controller.rb", 146]
170 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 147]
171 head :created, :location => todo_url(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 148]
172 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 149]
173 render_failure @todo.errors.to_xml.html_safe, 409  ["../applications/pw-tracks/controllers/todos_controller.rb", 150]
174 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 151]
175 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 152]
176 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 153]
177 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 154]
178 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 155]
179   ["../applications/pw-tracks/controllers/todos_controller.rb", 156]
180 def create_multiple  ["../applications/pw-tracks/controllers/todos_controller.rb", 157]
181 p = Todos::TodoCreateParamsHelper.new(params, current_user)  ["../applications/pw-tracks/controllers/todos_controller.rb", 158]
182 tag_list = p.tag_list  ["../applications/pw-tracks/controllers/todos_controller.rb", 159]
183   ["../applications/pw-tracks/controllers/todos_controller.rb", 160]
184 @not_done_todos = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 161]
185 @build_todos = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 162]
186 @todos = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 163]
187 errors = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 164]
188 @predecessor = nil  ["../applications/pw-tracks/controllers/todos_controller.rb", 165]
189 validates = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 166]
190   ["../applications/pw-tracks/controllers/todos_controller.rb", 167]
191 # first build all todos and check if they would validate on save  ["../applications/pw-tracks/controllers/todos_controller.rb", 168]
192 params[:todo][:multiple_todos].split("\n").map do |line|  ["../applications/pw-tracks/controllers/todos_controller.rb", 169]
193 if line.present? #ignore blank lines  ["../applications/pw-tracks/controllers/todos_controller.rb", 170]
194 @todo = current_user.todos.build({:description => line, :context_id => p.context_id, :project_id => p.project_id})  ["../applications/pw-tracks/controllers/todos_controller.rb", 171]
195 validates &&= @todo.valid?  ["../applications/pw-tracks/controllers/todos_controller.rb", 172]
196   ["../applications/pw-tracks/controllers/todos_controller.rb", 173]
197 @build_todos << @todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 174]
198 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 175]
199 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 176]
200   ["../applications/pw-tracks/controllers/todos_controller.rb", 177]
201 # if all todos validate, then save them and add predecessors and tags  ["../applications/pw-tracks/controllers/todos_controller.rb", 178]
202 if validates  ["../applications/pw-tracks/controllers/todos_controller.rb", 179]
203 @build_todos.each do |todo|  ["../applications/pw-tracks/controllers/todos_controller.rb", 180]
204 @saved = todo.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 181]
205 validates &&= @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 182]
206   ["../applications/pw-tracks/controllers/todos_controller.rb", 183]
207 if @predecessor && @saved && p.sequential?  ["../applications/pw-tracks/controllers/todos_controller.rb", 184]
208 todo.add_predecessor(@predecessor)  ["../applications/pw-tracks/controllers/todos_controller.rb", 185]
209 todo.block!  ["../applications/pw-tracks/controllers/todos_controller.rb", 186]
210 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 187]
211   ["../applications/pw-tracks/controllers/todos_controller.rb", 188]
212 todo.tag_with(tag_list) if @saved && tag_list.present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 189]
213   ["../applications/pw-tracks/controllers/todos_controller.rb", 190]
214 @todos << todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 191]
215 @not_done_todos << todo if p.new_context_created || p.new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 192]
216 @predecessor = todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 193]
217 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 194]
218 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 195]
219 @todos = @build_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 196]
220 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 197]
221 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 198]
222   ["../applications/pw-tracks/controllers/todos_controller.rb", 199]
223 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 200]
224 format.html { redirect_to :action => "index" }  ["../applications/pw-tracks/controllers/todos_controller.rb", 201]
225 format.js do  ["../applications/pw-tracks/controllers/todos_controller.rb", 202]
226 determine_down_count if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 203]
227 @contexts = current_user.contexts if p.new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 204]
228 @projects = current_user.projects if p.new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 205]
229 @new_project_created = p.new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 206]
230 @new_context_created = p.new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 207]
231 @initial_context_name = params['default_context_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 208]
232 @initial_project_name = params['default_project_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 209]
233 @initial_tags = params['initial_tag_list']  ["../applications/pw-tracks/controllers/todos_controller.rb", 210]
234 if @saved && @todos.size > 0  ["../applications/pw-tracks/controllers/todos_controller.rb", 211]
235 @default_tags = @todos[0].project.default_tags unless @todos[0].project.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 212]
236 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 213]
237 @multiple_error = @todos.size > 0 ? "" : t('todos.next_action_needed')  ["../applications/pw-tracks/controllers/todos_controller.rb", 214]
238 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 215]
239 @default_tags = current_user.projects.where(:name => @initial_project_name).default_tags if @initial_project_name.present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 216]
240 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 217]
241   ["../applications/pw-tracks/controllers/todos_controller.rb", 218]
242 @status_message = @todos.size > 1 ? t('todos.added_new_next_action_plural') : t('todos.added_new_next_action_singular')  ["../applications/pw-tracks/controllers/todos_controller.rb", 219]
243 @status_message = t('todos.added_new_project') + ' / ' + @status_message if p.new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 220]
244 @status_message = t('todos.added_new_context') + ' / ' + @status_message if p.new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 221]
245   ["../applications/pw-tracks/controllers/todos_controller.rb", 222]
246 render :action => 'create_multiple'  ["../applications/pw-tracks/controllers/todos_controller.rb", 223]
247 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 224]
248 format.xml do  ["../applications/pw-tracks/controllers/todos_controller.rb", 225]
249 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 226]
250 head :created, :location => context_url(@todos[0].context)  ["../applications/pw-tracks/controllers/todos_controller.rb", 227]
251 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 228]
252 render :xml => @todos[0].errors.to_xml, :status => 422  ["../applications/pw-tracks/controllers/todos_controller.rb", 229]
253 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 230]
254 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 231]
255 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 232]
256 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 233]
257   ["../applications/pw-tracks/controllers/todos_controller.rb", 234]
258 def edit  ["../applications/pw-tracks/controllers/todos_controller.rb", 235]
259 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 236]
260 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 237]
261 @tag_name = params['_tag_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 238]
262 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 239]
263 format.js  ["../applications/pw-tracks/controllers/todos_controller.rb", 240]
264 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 241]
265 @projects = current_user.projects.active  ["../applications/pw-tracks/controllers/todos_controller.rb", 242]
266 @contexts = current_user.contexts  ["../applications/pw-tracks/controllers/todos_controller.rb", 243]
267 @edit_mobile = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 244]
268 @return_path=cookies[:mobile_url] ? cookies[:mobile_url] : mobile_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 245]
269 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 246]
270 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 247]
271 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 248]
272   ["../applications/pw-tracks/controllers/todos_controller.rb", 249]
273 def show  ["../applications/pw-tracks/controllers/todos_controller.rb", 250]
274 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 251]
275 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 252]
276 format.m { render :action => 'show' }  ["../applications/pw-tracks/controllers/todos_controller.rb", 253]
277 format.xml { render :xml => @todo.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 254]
278 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 255]
279 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 256]
280   ["../applications/pw-tracks/controllers/todos_controller.rb", 257]
281 def add_predecessor  ["../applications/pw-tracks/controllers/todos_controller.rb", 258]
282 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 259]
283 @predecessor = current_user.todos.find(params['predecessor'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 260]
284 @predecessors = @predecessor.predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 261]
285 @todo = current_user.todos.includes(Todo::DEFAULT_INCLUDES).find(params['successor'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 262]
286 @original_state = @todo.state  ["../applications/pw-tracks/controllers/todos_controller.rb", 263]
287 unless @predecessor.completed?  ["../applications/pw-tracks/controllers/todos_controller.rb", 264]
288 begin  ["../applications/pw-tracks/controllers/todos_controller.rb", 265]
289 @todo.add_predecessor(@predecessor)  ["../applications/pw-tracks/controllers/todos_controller.rb", 266]
290 @todo.block! unless @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 267]
291 @saved = @todo.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 268]
292 rescue ActiveRecord::RecordInvalid  ["../applications/pw-tracks/controllers/todos_controller.rb", 269]
293 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 270]
294 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 271]
295   ["../applications/pw-tracks/controllers/todos_controller.rb", 272]
296 @status_message = t('todos.added_dependency', :dependency => @predecessor.description)  ["../applications/pw-tracks/controllers/todos_controller.rb", 273]
297 @status_message += t('todos.set_to_pending', :task => @todo.description) unless @original_state == 'pending'  ["../applications/pw-tracks/controllers/todos_controller.rb", 274]
298 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 275]
299 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 276]
300 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 277]
301 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 278]
302 format.js  ["../applications/pw-tracks/controllers/todos_controller.rb", 279]
303 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 280]
304 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 281]
305   ["../applications/pw-tracks/controllers/todos_controller.rb", 282]
306 def remove_predecessor  ["../applications/pw-tracks/controllers/todos_controller.rb", 283]
307 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 284]
308 @todo = current_user.todos.includes(Todo::DEFAULT_INCLUDES).find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 285]
309 @predecessor = current_user.todos.find(params['predecessor'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 286]
310 @predecessors = @predecessor.predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 287]
311 @successor = @todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 288]
312 @removed = @successor.remove_predecessor(@predecessor)  ["../applications/pw-tracks/controllers/todos_controller.rb", 289]
313 determine_remaining_in_container_count(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 290]
314 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 291]
315 format.js  ["../applications/pw-tracks/controllers/todos_controller.rb", 292]
316 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 293]
317 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 294]
318   ["../applications/pw-tracks/controllers/todos_controller.rb", 295]
319 # Toggles the 'done' status of the action  ["../applications/pw-tracks/controllers/todos_controller.rb", 296]
320 #  ["../applications/pw-tracks/controllers/todos_controller.rb", 297]
321 def toggle_check  ["../applications/pw-tracks/controllers/todos_controller.rb", 298]
322 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 299]
323   ["../applications/pw-tracks/controllers/todos_controller.rb", 300]
324 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 301]
325   ["../applications/pw-tracks/controllers/todos_controller.rb", 302]
326 @original_item = current_user.todos.build(@todo.attributes)  # create a (unsaved) copy of the original todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 303]
327 @original_item_due = @todo.due  ["../applications/pw-tracks/controllers/todos_controller.rb", 304]
328 @original_item_was_deferred = @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 305]
329 @original_item_was_pending = @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 306]
330 @original_item_was_hidden = @todo.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 307]
331 @original_item_context_id = @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 308]
332 @original_item_project_id = @todo.project_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 309]
333 @original_completed_period = DoneTodos.completed_period(@todo.completed_at)  ["../applications/pw-tracks/controllers/todos_controller.rb", 310]
334 @todo_was_completed_from_deferred_or_blocked_state = @original_item_was_deferred || @original_item_was_pending  ["../applications/pw-tracks/controllers/todos_controller.rb", 311]
335   ["../applications/pw-tracks/controllers/todos_controller.rb", 312]
336 @saved = @todo.toggle_completion!  ["../applications/pw-tracks/controllers/todos_controller.rb", 313]
337   ["../applications/pw-tracks/controllers/todos_controller.rb", 314]
338 @todo_was_blocked_from_completed_state = @todo.pending? # since we toggled_completion the previous state was completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 315]
339   ["../applications/pw-tracks/controllers/todos_controller.rb", 316]
340 # check if this todo has a related recurring_todo. If so, create next todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 317]
341 @new_recurring_todo = check_for_next_todo(@todo) if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 318]
342   ["../applications/pw-tracks/controllers/todos_controller.rb", 319]
343 @predecessors = @todo.uncompleted_predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 320]
344 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 321]
345 if @todo.completed?  ["../applications/pw-tracks/controllers/todos_controller.rb", 322]
346 @pending_to_activate = @todo.activate_pending_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 323]
347 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 324]
348 @active_to_block = @todo.block_successors  ["../applications/pw-tracks/controllers/todos_controller.rb", 325]
349 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 326]
350 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 327]
351   ["../applications/pw-tracks/controllers/todos_controller.rb", 328]
352 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 329]
353 format.js do  ["../applications/pw-tracks/controllers/todos_controller.rb", 330]
354 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 331]
355 determine_remaining_in_container_count(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 332]
356 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 333]
357 determine_completed_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 334]
358 determine_deferred_tag_count(params['_tag_name']) if source_view_is(:tag)  ["../applications/pw-tracks/controllers/todos_controller.rb", 335]
359 @wants_redirect_after_complete = @todo.completed?  && !@todo.project_id.nil? && current_user.prefs.show_project_on_todo_done && !source_view_is(:project)  ["../applications/pw-tracks/controllers/todos_controller.rb", 336]
360 if source_view_is :calendar  ["../applications/pw-tracks/controllers/todos_controller.rb", 337]
361 @original_item_due_id = get_due_id_for_calendar(@original_item_due)  ["../applications/pw-tracks/controllers/todos_controller.rb", 338]
362 @old_due_empty = is_old_due_empty(@original_item_due_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 339]
363 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 340]
364 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 341]
365 render  ["../applications/pw-tracks/controllers/todos_controller.rb", 342]
366 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 343]
367 format.xml { render :xml => @todo.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 344]
368 format.html do  ["../applications/pw-tracks/controllers/todos_controller.rb", 345]
369 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 346]
370 # TODO: I think this will work, but can't figure out how to test it  ["../applications/pw-tracks/controllers/todos_controller.rb", 347]
371 notify(:notice, t("todos.action_marked_complete", :description => @todo.description, :completed => @todo.completed? ? 'complete' : 'incomplete'))  ["../applications/pw-tracks/controllers/todos_controller.rb", 348]
372 redirect_to :action => "index"  ["../applications/pw-tracks/controllers/todos_controller.rb", 349]
373 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 350]
374 notify(:notice, t("todos.action_marked_complete_error", :description => @todo.description, :completed => @todo.completed? ? 'complete' : 'incomplete'), "index")  ["../applications/pw-tracks/controllers/todos_controller.rb", 351]
375 redirect_to :action =>  "index"  ["../applications/pw-tracks/controllers/todos_controller.rb", 352]
376 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 353]
377 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 354]
378 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 355]
379 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 356]
380 if cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 357]
381 old_path = cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 358]
382 cookies[:mobile_url] = {:value => nil, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/todos_controller.rb", 359]
383 notify(:notice, t("todos.action_marked_complete", :description => @todo.description, :completed => @todo.completed? ? 'complete' : 'incomplete'))  ["../applications/pw-tracks/controllers/todos_controller.rb", 360]
384 onsite_redirect_to old_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 361]
385 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 362]
386 notify(:notice, t("todos.action_marked_complete", :description => @todo.description, :completed => @todo.completed? ? 'complete' : 'incomplete'))  ["../applications/pw-tracks/controllers/todos_controller.rb", 363]
387 onsite_redirect_to todos_path(:format => 'm')  ["../applications/pw-tracks/controllers/todos_controller.rb", 364]
388 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 365]
389 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 366]
390 render :action => "edit", :format => :m  ["../applications/pw-tracks/controllers/todos_controller.rb", 367]
391 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 368]
392 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 369]
393 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 370]
394 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 371]
395   ["../applications/pw-tracks/controllers/todos_controller.rb", 372]
396 def toggle_star  ["../applications/pw-tracks/controllers/todos_controller.rb", 373]
397 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 374]
398 @todo.toggle_star!  ["../applications/pw-tracks/controllers/todos_controller.rb", 375]
399 @saved = true # cannot determine error  ["../applications/pw-tracks/controllers/todos_controller.rb", 376]
400 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 377]
401 format.js  ["../applications/pw-tracks/controllers/todos_controller.rb", 378]
402 format.xml { render :xml => @todo.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 379]
403 format.html { redirect_to request.referrer}  ["../applications/pw-tracks/controllers/todos_controller.rb", 380]
404 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 381]
405 if cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 382]
406 old_path = cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 383]
407 cookies[:mobile_url] = {:value => nil, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/todos_controller.rb", 384]
408 notify(:notice, "Star toggled")  ["../applications/pw-tracks/controllers/todos_controller.rb", 385]
409 onsite_redirect_to old_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 386]
410 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 387]
411 notify(:notice, "Star toggled")  ["../applications/pw-tracks/controllers/todos_controller.rb", 388]
412 onsite_redirect_to todos_path(:format => 'm')  ["../applications/pw-tracks/controllers/todos_controller.rb", 389]
413 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 390]
414 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 391]
415 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 392]
416 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 393]
417   ["../applications/pw-tracks/controllers/todos_controller.rb", 394]
418 def change_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 395]
419 # change context if you drag a todo to another context  ["../applications/pw-tracks/controllers/todos_controller.rb", 396]
420 @todo = current_user.todos.find(params[:id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 397]
421 @original_item_context_id = @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 398]
422 @original_item = current_user.todos.build(@todo.attributes)  # create a (unsaved) copy of the original todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 399]
423 @context = current_user.contexts.find(params[:todo][:context_id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 400]
424 @todo.context = @context  ["../applications/pw-tracks/controllers/todos_controller.rb", 401]
425 @saved = @todo.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 402]
426   ["../applications/pw-tracks/controllers/todos_controller.rb", 403]
427 @context_changed = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 404]
428 @status_message = t('todos.context_changed', :name => @context.name)  ["../applications/pw-tracks/controllers/todos_controller.rb", 405]
429 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 406]
430 determine_remaining_in_container_count(@original_item)  ["../applications/pw-tracks/controllers/todos_controller.rb", 407]
431   ["../applications/pw-tracks/controllers/todos_controller.rb", 408]
432 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 409]
433 format.js  { render :action => :update }  ["../applications/pw-tracks/controllers/todos_controller.rb", 410]
434 format.xml { render :xml => @todo.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 411]
435 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 412]
436 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 413]
437   ["../applications/pw-tracks/controllers/todos_controller.rb", 414]
438 def update  ["../applications/pw-tracks/controllers/todos_controller.rb", 415]
439 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 416]
440   ["../applications/pw-tracks/controllers/todos_controller.rb", 417]
441 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 418]
442 @original_item = current_user.todos.build(@todo.attributes)  # create a (unsaved) copy of the original todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 419]
443   ["../applications/pw-tracks/controllers/todos_controller.rb", 420]
444 cache_attributes_from_before_update # TODO: remove in favor of @original_item  ["../applications/pw-tracks/controllers/todos_controller.rb", 421]
445   ["../applications/pw-tracks/controllers/todos_controller.rb", 422]
446 update_tags  ["../applications/pw-tracks/controllers/todos_controller.rb", 423]
447 update_project  ["../applications/pw-tracks/controllers/todos_controller.rb", 424]
448 update_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 425]
449 update_due_and_show_from_dates  ["../applications/pw-tracks/controllers/todos_controller.rb", 426]
450 update_completed_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 427]
451 update_dependencies  ["../applications/pw-tracks/controllers/todos_controller.rb", 428]
452 update_attributes_of_todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 429]
453   ["../applications/pw-tracks/controllers/todos_controller.rb", 430]
454 begin  ["../applications/pw-tracks/controllers/todos_controller.rb", 431]
455 @saved = @todo.save!  ["../applications/pw-tracks/controllers/todos_controller.rb", 432]
456 rescue ActiveRecord::RecordInvalid => exception  ["../applications/pw-tracks/controllers/todos_controller.rb", 433]
457 record = exception.record  ["../applications/pw-tracks/controllers/todos_controller.rb", 434]
458 if record.is_a?(Dependency)  ["../applications/pw-tracks/controllers/todos_controller.rb", 435]
459 record.errors.each { |key,value| @todo.errors[key] << value }  ["../applications/pw-tracks/controllers/todos_controller.rb", 436]
460 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 437]
461 @saved = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 438]
462 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 439]
463   ["../applications/pw-tracks/controllers/todos_controller.rb", 440]
464   ["../applications/pw-tracks/controllers/todos_controller.rb", 441]
465 provide_project_or_context_for_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 442]
466   ["../applications/pw-tracks/controllers/todos_controller.rb", 443]
467 # this is set after save and cleared after reload, so save it here  ["../applications/pw-tracks/controllers/todos_controller.rb", 444]
468 @removed_predecessors = @todo.removed_predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 445]
469   ["../applications/pw-tracks/controllers/todos_controller.rb", 446]
470 @todo.reload # refresh context and project object too (not only their id's)  ["../applications/pw-tracks/controllers/todos_controller.rb", 447]
471   ["../applications/pw-tracks/controllers/todos_controller.rb", 448]
472 update_dependency_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 449]
473 if @project_changed  ["../applications/pw-tracks/controllers/todos_controller.rb", 450]
474 @remaining_undone_in_project = current_user.projects.find(@original_item_project_id).todos.active.count if source_view_is :project  ["../applications/pw-tracks/controllers/todos_controller.rb", 451]
475 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 452]
476   ["../applications/pw-tracks/controllers/todos_controller.rb", 453]
477 determine_changes_by_this_update  ["../applications/pw-tracks/controllers/todos_controller.rb", 454]
478 determine_remaining_in_container_count( (@context_changed || @project_changed) ? @original_item : @todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 455]
479 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 456]
480 determine_deferred_tag_count(sanitize(params['_tag_name'])) if source_view_is(:tag)  ["../applications/pw-tracks/controllers/todos_controller.rb", 457]
481   ["../applications/pw-tracks/controllers/todos_controller.rb", 458]
482 @todo.touch_predecessors if @original_item_description != @todo.description  ["../applications/pw-tracks/controllers/todos_controller.rb", 459]
483   ["../applications/pw-tracks/controllers/todos_controller.rb", 460]
484 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 461]
485 format.js {  ["../applications/pw-tracks/controllers/todos_controller.rb", 462]
486 @status_message = @todo.deferred? ? t('todos.action_saved_to_tickler') : t('todos.action_saved')  ["../applications/pw-tracks/controllers/todos_controller.rb", 463]
487 @status_message = t('todos.added_new_project') + ' / ' + @status_message if @new_project_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 464]
488 @status_message = t('todos.added_new_context') + ' / ' + @status_message if @new_context_created  ["../applications/pw-tracks/controllers/todos_controller.rb", 465]
489 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 466]
490 format.xml { render :xml => @todo.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 467]
491 format.m do  ["../applications/pw-tracks/controllers/todos_controller.rb", 468]
492 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 469]
493 do_mobile_todo_redirection  ["../applications/pw-tracks/controllers/todos_controller.rb", 470]
494 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 471]
495 render :action => "edit", :format => :m  ["../applications/pw-tracks/controllers/todos_controller.rb", 472]
496 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 473]
497 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 474]
498 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 475]
499 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 476]
500   ["../applications/pw-tracks/controllers/todos_controller.rb", 477]
501 def provide_project_or_context_for_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 478]
502 # see application_helper:source_view_key, used in shown partials  ["../applications/pw-tracks/controllers/todos_controller.rb", 479]
503 if source_view_is :project  ["../applications/pw-tracks/controllers/todos_controller.rb", 480]
504 @project = @todo.project  ["../applications/pw-tracks/controllers/todos_controller.rb", 481]
505 elsif source_view_is :context  ["../applications/pw-tracks/controllers/todos_controller.rb", 482]
506 @context = @todo.context  ["../applications/pw-tracks/controllers/todos_controller.rb", 483]
507 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 484]
508 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 485]
509   ["../applications/pw-tracks/controllers/todos_controller.rb", 486]
510 def destroy  ["../applications/pw-tracks/controllers/todos_controller.rb", 487]
511 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 488]
512 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 489]
513 @original_item = current_user.todos.build(@todo.attributes)  # create a (unsaved) copy of the original todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 490]
514 @original_item_due = @todo.due  ["../applications/pw-tracks/controllers/todos_controller.rb", 491]
515 @context_id = @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 492]
516 @project_id = @todo.project_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 493]
517 @todo_was_destroyed = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 494]
518 @todo_was_destroyed_from_deferred_state = @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 495]
519 @todo_was_destroyed_from_pending_state = @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 496]
520 @todo_was_destroyed_from_deferred_or_pending_state = @todo_was_destroyed_from_deferred_state || @todo_was_destroyed_from_pending_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 497]
521   ["../applications/pw-tracks/controllers/todos_controller.rb", 498]
522 @uncompleted_predecessors = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 499]
523 @todo.uncompleted_predecessors.each do |predecessor|  ["../applications/pw-tracks/controllers/todos_controller.rb", 500]
524 @uncompleted_predecessors << predecessor  ["../applications/pw-tracks/controllers/todos_controller.rb", 501]
525 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 502]
526   ["../applications/pw-tracks/controllers/todos_controller.rb", 503]
527 activated_successor_count = 0  ["../applications/pw-tracks/controllers/todos_controller.rb", 504]
528 @pending_to_activate = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 505]
529 @todo.pending_successors.each do |successor|  ["../applications/pw-tracks/controllers/todos_controller.rb", 506]
530 if successor.uncompleted_predecessors.size == 1  ["../applications/pw-tracks/controllers/todos_controller.rb", 507]
531 @pending_to_activate << successor  ["../applications/pw-tracks/controllers/todos_controller.rb", 508]
532 activated_successor_count += 1  ["../applications/pw-tracks/controllers/todos_controller.rb", 509]
533 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 510]
534 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 511]
535   ["../applications/pw-tracks/controllers/todos_controller.rb", 512]
536 @saved = @todo.destroy  ["../applications/pw-tracks/controllers/todos_controller.rb", 513]
537   ["../applications/pw-tracks/controllers/todos_controller.rb", 514]
538 # check if this todo has a related recurring_todo. If so, create next todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 515]
539 @new_recurring_todo = check_for_next_todo(@todo) if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 516]
540   ["../applications/pw-tracks/controllers/todos_controller.rb", 517]
541 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 518]
542   ["../applications/pw-tracks/controllers/todos_controller.rb", 519]
543 format.html do  ["../applications/pw-tracks/controllers/todos_controller.rb", 520]
544 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 521]
545 message = t('todos.action_deleted_success')  ["../applications/pw-tracks/controllers/todos_controller.rb", 522]
546 if activated_successor_count > 0  ["../applications/pw-tracks/controllers/todos_controller.rb", 523]
547 message += " activated #{pluralize(activated_successor_count, 'pending action')}"  ["../applications/pw-tracks/controllers/todos_controller.rb", 524]
548 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 525]
549 notify :notice, message, 2.0  ["../applications/pw-tracks/controllers/todos_controller.rb", 526]
550 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/todos_controller.rb", 527]
551 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 528]
552 notify :error, t('todos.action_deleted_error'), 2.0  ["../applications/pw-tracks/controllers/todos_controller.rb", 529]
553 redirect_to :action => 'index'  ["../applications/pw-tracks/controllers/todos_controller.rb", 530]
554 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 531]
555 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 532]
556   ["../applications/pw-tracks/controllers/todos_controller.rb", 533]
557 format.js do  ["../applications/pw-tracks/controllers/todos_controller.rb", 534]
558 if @saved  ["../applications/pw-tracks/controllers/todos_controller.rb", 535]
559 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 536]
560 if source_view_is_one_of(:todo, :deferred, :project, :context, :tag)  ["../applications/pw-tracks/controllers/todos_controller.rb", 537]
561 determine_remaining_in_container_count(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 538]
562 elsif source_view_is :calendar  ["../applications/pw-tracks/controllers/todos_controller.rb", 539]
563 @original_item_due_id = get_due_id_for_calendar(@original_item_due)  ["../applications/pw-tracks/controllers/todos_controller.rb", 540]
564 @old_due_empty = is_old_due_empty(@original_item_due_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 541]
565 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 542]
566 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 543]
567 render  ["../applications/pw-tracks/controllers/todos_controller.rb", 544]
568 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 545]
569   ["../applications/pw-tracks/controllers/todos_controller.rb", 546]
570 format.xml { render :text => '200 OK. Action deleted.', :status => 200 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 547]
571   ["../applications/pw-tracks/controllers/todos_controller.rb", 548]
572 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 549]
573 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 550]
574   ["../applications/pw-tracks/controllers/todos_controller.rb", 551]
575 def done  ["../applications/pw-tracks/controllers/todos_controller.rb", 552]
576 @source_view = 'done'  ["../applications/pw-tracks/controllers/todos_controller.rb", 553]
577 @page_title = t('todos.completed_tasks_title')  ["../applications/pw-tracks/controllers/todos_controller.rb", 554]
578   ["../applications/pw-tracks/controllers/todos_controller.rb", 555]
579 @done_today, @done_rest_of_week, @done_rest_of_month = DoneTodos.done_todos_for_container(current_user.todos)  ["../applications/pw-tracks/controllers/todos_controller.rb", 556]
580 @count = @done_today.size + @done_rest_of_week.size + @done_rest_of_month.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 557]
581   ["../applications/pw-tracks/controllers/todos_controller.rb", 558]
582 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 559]
583 format.html  ["../applications/pw-tracks/controllers/todos_controller.rb", 560]
584 format.xml do  ["../applications/pw-tracks/controllers/todos_controller.rb", 561]
585 completed_todos = current_user.todos.completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 562]
586 render :xml => completed_todos.to_xml( *todo_xml_params )  ["../applications/pw-tracks/controllers/todos_controller.rb", 563]
587 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 564]
588 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 565]
589 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 566]
590   ["../applications/pw-tracks/controllers/todos_controller.rb", 567]
591 def all_done  ["../applications/pw-tracks/controllers/todos_controller.rb", 568]
592 @source_view = 'done'  ["../applications/pw-tracks/controllers/todos_controller.rb", 569]
593 @page_title = t('todos.completed_tasks_title')  ["../applications/pw-tracks/controllers/todos_controller.rb", 570]
594   ["../applications/pw-tracks/controllers/todos_controller.rb", 571]
595 @done = current_user.todos.completed.includes(Todo::DEFAULT_INCLUDES).reorder('completed_at DESC').paginate :page => params[:page], :per_page => 20  ["../applications/pw-tracks/controllers/todos_controller.rb", 572]
596 @count = @done.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 573]
597 end  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 1]
598 paginate_options = {  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 2]
599 :class => 'link_in_container_header',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 3]
600 :previous_label => '&laquo; '+ t('common.previous'),  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 4]
601 :next_label     => t('common.next')+' &raquo;',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 5]
602 :inner_window   => 2  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 6]
603 }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 7]
604   ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 8]
605 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 9]
606 t('todos.all_completed')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 10]
607 @done.empty? ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 11]
608 t('todos.no_completed_actions')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 12]
609 if !@done.empty?  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 13]
610 render :partial => "todos/todo", :collection => @done, :locals => { :parent_container_type => "completed", :suppress_context => false, :suppress_project => false }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 14]
611   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 1]
612 suppress_context ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 2]
613 suppress_project ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 3]
614 suppress_edit_button ||= todo.completed?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 4]
615 parameters = "_source_view=#{@source_view}"  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 5]
616 parameters += "&_tag_name=#{@tag_name}" if @source_view == 'tag'  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 6]
617 @z_index_counter = @z_index_counter - 1  # for IE z-index bug  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 7]
618 @rec_depth=0 # to prevent stack overflow on large dependency trees, see _successor.html.erb  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 8]
619   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 9]
620 # invalidate the cache every day because of staleness or  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 10]
621 # rendering of "due in x days" that change without touching updated at of the todo  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 11]
622 # also make different caches per source_view to handle difference in showing [C] and [P]  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 12]
623 cache [todo, current_user.date.strftime("%Y%m%d"), @source_view, current_user.prefs.verbose_action_descriptors] do  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 13]
624   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 14]
625 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 15]
626 sort_key(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 16]
627 dom_id(todo, 'line')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 17]
628 remote_star_icon(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 18]
629 remote_toggle_checkbox(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 19]
630 remote_edit_button(todo) unless suppress_edit_button  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 20]
631 @z_index_counter  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 21]
632 image_tag "downarrow.png", :class => "todo-submenu", :alt=> ""  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 22]
633 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 23]
634 remote_delete_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 24]
635 unless todo.completed? || todo.deferred?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 25]
636 remote_defer_menu_item(1, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 26]
637 remote_defer_menu_item(2, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 27]
638 remote_defer_menu_item(3, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 28]
639 remote_defer_menu_item(7, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 29]
640 remote_promote_to_project_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 30]
641 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 31]
642 grip_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 32]
643 staleness_class( todo )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 33]
644 date_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 34]
645 h todo.description  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 35]
646 image_tag_for_recurring_todo(todo) if todo.from_recurring_todo?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 36]
647 tag_list(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 37]
648 deferred_due_date(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 38]
649 project_and_context_links( todo, parent_container_type, :suppress_context => suppress_context, :suppress_project => suppress_project )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 39]
650 collapsed_notes_image(todo) if todo.notes.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 40]
651 collapsed_successors_image(todo) if todo.has_pending_successors  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 41]
652 attachment_image(todo) if todo.attachments.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 42]
653 dom_id(todo, 'edit')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 43]
654 #note: edit form will load here remotely  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 44]
655 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 45]
656 end  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 15]
657 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 16]
658   ["../applications/pw-tracks/controllers/todos_controller.rb", 574]
659   ["../applications/pw-tracks/controllers/todos_controller.rb", 575]
660 def list_deferred  ["../applications/pw-tracks/controllers/todos_controller.rb", 576]
661 @source_view = 'deferred'  ["../applications/pw-tracks/controllers/todos_controller.rb", 577]
662 @page_title = t('todos.deferred_tasks_title')  ["../applications/pw-tracks/controllers/todos_controller.rb", 578]
663   ["../applications/pw-tracks/controllers/todos_controller.rb", 579]
664 @contexts_to_show = @contexts = current_user.contexts.limit(50)  ["../applications/pw-tracks/controllers/todos_controller.rb", 580]
665 @projects_to_show = @projects = current_user.projects.limit(50)  ["../applications/pw-tracks/controllers/todos_controller.rb", 581]
666   ["../applications/pw-tracks/controllers/todos_controller.rb", 582]
667 includes = params[:format]=='xml' ? [:context, :project] : Todo::DEFAULT_INCLUDES  ["../applications/pw-tracks/controllers/todos_controller.rb", 583]
668   ["../applications/pw-tracks/controllers/todos_controller.rb", 584]
669 @not_done_todos = current_user.todos.deferred.includes(includes).reorder('show_from') + current_user.todos.pending.includes(includes)  ["../applications/pw-tracks/controllers/todos_controller.rb", 585]
670 @todos_without_project = @not_done_todos.select{|t|t.project.nil?}  ["../applications/pw-tracks/controllers/todos_controller.rb", 586]
671 @down_count = @count = @not_done_todos.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 587]
672   ["../applications/pw-tracks/controllers/todos_controller.rb", 588]
673 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 589]
674 format.html do  ["../applications/pw-tracks/controllers/todos_controller.rb", 590]
675 init_not_done_counts  ["../applications/pw-tracks/controllers/todos_controller.rb", 591]
676 init_hidden_todo_counts  ["../applications/pw-tracks/controllers/todos_controller.rb", 592]
677 init_data_for_sidebar unless mobile?  ["../applications/pw-tracks/controllers/todos_controller.rb", 593]
678 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 594]
679 format.m  ["../applications/pw-tracks/controllers/todos_controller.rb", 595]
680 format.xml { render :xml => @not_done_todos.to_xml( *todo_xml_params ) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 596]
681 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 597]
682 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 598]
683   ["../applications/pw-tracks/controllers/todos_controller.rb", 599]
684 # Check for any due tickler items, activate them  ["../applications/pw-tracks/controllers/todos_controller.rb", 600]
685 # Called by periodically_call_remote  ["../applications/pw-tracks/controllers/todos_controller.rb", 601]
686 def check_deferred  ["../applications/pw-tracks/controllers/todos_controller.rb", 602]
687 @due_tickles = current_user.deferred_todos.find_and_activate_ready  ["../applications/pw-tracks/controllers/todos_controller.rb", 603]
688 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 604]
689 format.html { redirect_to home_path }  ["../applications/pw-tracks/controllers/todos_controller.rb", 605]
690 format.js  ["../applications/pw-tracks/controllers/todos_controller.rb", 606]
691 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 607]
692 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 608]
693   ["../applications/pw-tracks/controllers/todos_controller.rb", 609]
694 def filter_to_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 610]
695 context = current_user.contexts.find(params['context']['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 611]
696 redirect_to context_todos_path(context, :format => 'm')  ["../applications/pw-tracks/controllers/todos_controller.rb", 612]
697 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 613]
698   ["../applications/pw-tracks/controllers/todos_controller.rb", 614]
699 def filter_to_project  ["../applications/pw-tracks/controllers/todos_controller.rb", 615]
700 project = current_user.projects.find(params['project']['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 616]
701 redirect_to project_todos_path(project, :format => 'm')  ["../applications/pw-tracks/controllers/todos_controller.rb", 617]
702 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 618]
703   ["../applications/pw-tracks/controllers/todos_controller.rb", 619]
704 # /todos/tag/[tag_name] shows all the actions tagged with tag_name  ["../applications/pw-tracks/controllers/todos_controller.rb", 620]
705 def tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 621]
706 get_params_for_tag_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 622]
707 @page_title = t('todos.tagged_page_title', :tag_name => @tag_title)  ["../applications/pw-tracks/controllers/todos_controller.rb", 623]
708 @source_view = params['_source_view'] || 'tag'  ["../applications/pw-tracks/controllers/todos_controller.rb", 624]
709   ["../applications/pw-tracks/controllers/todos_controller.rb", 625]
710 init_data_for_sidebar unless mobile?  ["../applications/pw-tracks/controllers/todos_controller.rb", 626]
711   ["../applications/pw-tracks/controllers/todos_controller.rb", 627]
712 todos_with_tag_ids = find_todos_with_tag_expr(@tag_expr).limit(20)  ["../applications/pw-tracks/controllers/todos_controller.rb", 628]
713   ["../applications/pw-tracks/controllers/todos_controller.rb", 629]
714 @not_done_todos = todos_with_tag_ids.  ["../applications/pw-tracks/controllers/todos_controller.rb", 630]
715 active.not_hidden.  ["../applications/pw-tracks/controllers/todos_controller.rb", 631]
716 reorder('todos.due IS NULL, todos.due ASC, todos.created_at ASC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 632]
717 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 633]
718 @hidden_todos = todos_with_tag_ids.  ["../applications/pw-tracks/controllers/todos_controller.rb", 634]
719 hidden.  ["../applications/pw-tracks/controllers/todos_controller.rb", 635]
720 reorder('todos.completed_at DESC, todos.created_at DESC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 636]
721 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 637]
722 @deferred_todos = todos_with_tag_ids.  ["../applications/pw-tracks/controllers/todos_controller.rb", 638]
723 deferred.  ["../applications/pw-tracks/controllers/todos_controller.rb", 639]
724 reorder('todos.show_from ASC, todos.created_at DESC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 640]
725 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 641]
726 @pending_todos = todos_with_tag_ids.  ["../applications/pw-tracks/controllers/todos_controller.rb", 642]
727 blocked.  ["../applications/pw-tracks/controllers/todos_controller.rb", 643]
728 reorder('todos.show_from ASC, todos.created_at DESC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 644]
729 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 645]
730 @todos_without_project = @not_done_todos.select{|t| t.project.nil?}  ["../applications/pw-tracks/controllers/todos_controller.rb", 646]
731   ["../applications/pw-tracks/controllers/todos_controller.rb", 647]
732 # If you've set no_completed to zero, the completed items box isn't shown on  ["../applications/pw-tracks/controllers/todos_controller.rb", 648]
733 # the tag page  ["../applications/pw-tracks/controllers/todos_controller.rb", 649]
734 @done = todos_with_tag_ids.completed.  ["../applications/pw-tracks/controllers/todos_controller.rb", 650]
735 limit(current_user.prefs.show_number_completed).  ["../applications/pw-tracks/controllers/todos_controller.rb", 651]
736 reorder('todos.completed_at DESC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 652]
737 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 653]
738   ["../applications/pw-tracks/controllers/todos_controller.rb", 654]
739 @projects = current_user.projects.limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 655]
740 @contexts = current_user.contexts.limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 656]
741 @contexts_to_show = @contexts.active.limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 657]
742 @projects_to_show = @projects.active.limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 658]
743   ["../applications/pw-tracks/controllers/todos_controller.rb", 659]
744 # Set defaults for new_action  ["../applications/pw-tracks/controllers/todos_controller.rb", 660]
745 @initial_tags = @tag_name  ["../applications/pw-tracks/controllers/todos_controller.rb", 661]
746   ["../applications/pw-tracks/controllers/todos_controller.rb", 662]
747 # Set count badge to number of items with this tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 663]
748 @not_done_todos.empty? ? @count = 0 : @count = @not_done_todos.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 664]
749 @down_count = @count  ["../applications/pw-tracks/controllers/todos_controller.rb", 665]
750   ["../applications/pw-tracks/controllers/todos_controller.rb", 666]
751 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 667]
752 format.html  ["../applications/pw-tracks/controllers/todos_controller.rb", 668]
753 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 669]
754 cookies[:mobile_url]= {:value => request.fullpath, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/todos_controller.rb", 670]
755 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 671]
756 format.text {  ["../applications/pw-tracks/controllers/todos_controller.rb", 672]
757 render :action => 'index', :layout => false, :content_type => Mime::TEXT  ["../applications/pw-tracks/controllers/todos_controller.rb", 673]
758 empty_message_holder("not_done", @not_done_todos.empty?)  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 1]
759 show_grouped_todos  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 2]
760 if @group_view_by == 'project'  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 3]
761 show_todos_without_project(@todos_without_project)  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 4]
762 end  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 5]
763 show_done_todos(@done, {:parent_container_type => @group_view_by, :collapsible => true}) unless @done.nil?  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 6]
764 render :partial => "shared/add_new_item_form"  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 7]
765   ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 1]
766 @initial_context_name = @context.name if @context  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 2]
767 @initial_context_name ||= @project.default_context.name unless @project.nil? || @project.default_context.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 3]
768 @initial_context_name ||= @contexts.active.first.name unless @contexts.active.first.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 4]
769 @initial_context_name ||= @contexts.first.name unless @contexts.first.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 5]
770 @initial_project_name = @project.name unless @project.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 6]
771 @initial_tags ||= @default_tags  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 7]
772 @initial_tags ||= @project.default_tags unless @project.nil?  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 8]
773   ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 9]
774 t('shared.hide_action_form_title')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 10]
775 t('shared.hide_form')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 11]
776 t('shared.toggle_multi_title')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 12]
777 t('shared.toggle_multi')  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 13]
778 render :partial => 'todos/new_todo_form', :object => Todo.new  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 14]
779 render :partial => 'todos/new_multi_todo_form', :object => Todo.new  ["../applications/pw-tracks//ruby_views/shared/_add_new_item_form.html.erb", 15]
780 render :file => "sidebar/sidebar"  ["../applications/pw-tracks//ruby_views/todos/index.html.erb", 8]
781 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 674]
782 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 675]
783 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 676]
784   ["../applications/pw-tracks/controllers/todos_controller.rb", 677]
785 def done_tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 678]
786 done_by_tag_setup  ["../applications/pw-tracks/controllers/todos_controller.rb", 679]
787   ["../applications/pw-tracks/controllers/todos_controller.rb", 680]
788 completed_todos = current_user.todos.completed.with_tag(@tag.id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 681]
789   ["../applications/pw-tracks/controllers/todos_controller.rb", 682]
790 @done_today = get_done_today(completed_todos)  ["../applications/pw-tracks/controllers/todos_controller.rb", 683]
791 @done_rest_of_week = get_done_rest_of_week(completed_todos)  ["../applications/pw-tracks/controllers/todos_controller.rb", 684]
792 @done_rest_of_month = get_done_rest_of_month(completed_todos)  ["../applications/pw-tracks/controllers/todos_controller.rb", 685]
793 @count = @done_today.size + @done_rest_of_week.size + @done_rest_of_month.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 686]
794   ["../applications/pw-tracks/controllers/todos_controller.rb", 687]
795 render :template => 'todos/done'  ["../applications/pw-tracks/controllers/todos_controller.rb", 688]
796 show_completed_todos_for("today", @done_today)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 1]
797 show_completed_todos_for("rest_of_week", @done_rest_of_week)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 2]
798 show_completed_todos_for("rest_of_month", @done_rest_of_month)  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 3]
799 raw t('todos.see_all_completed',  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 4]
800 :link => link_to(t("todos.all_completed_here"), determine_all_done_path))  ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 5]
801   ["../applications/pw-tracks//ruby_views/todos/done.html.erb", 6]
802 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 689]
803   ["../applications/pw-tracks/controllers/todos_controller.rb", 690]
804 def all_done_tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 691]
805 done_by_tag_setup  ["../applications/pw-tracks/controllers/todos_controller.rb", 692]
806 @done = current_user.todos.completed.with_tag(@tag.id).reorder('completed_at DESC').includes(Todo::DEFAULT_INCLUDES).paginate :page => params[:page], :per_page => 20  ["../applications/pw-tracks/controllers/todos_controller.rb", 693]
807 @count = @done.size  ["../applications/pw-tracks/controllers/todos_controller.rb", 694]
808 render :template => 'todos/all_done'  ["../applications/pw-tracks/controllers/todos_controller.rb", 695]
809   ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 1]
810 paginate_options = {  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 2]
811 :class => 'link_in_container_header',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 3]
812 :previous_label => '&laquo; '+ t('common.previous'),  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 4]
813 :next_label     => t('common.next')+' &raquo;',  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 5]
814 :inner_window   => 2  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 6]
815 }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 7]
816   ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 8]
817 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 9]
818 t('todos.all_completed')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 10]
819 @done.empty? ? 'display:block' : 'display:none'  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 11]
820 t('todos.no_completed_actions')  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 12]
821 if !@done.empty?  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 13]
822 render :partial => "todos/todo", :collection => @done, :locals => { :parent_container_type => "completed", :suppress_context => false, :suppress_project => false }  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 14]
823   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 1]
824 suppress_context ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 2]
825 suppress_project ||= false  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 3]
826 suppress_edit_button ||= todo.completed?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 4]
827 parameters = "_source_view=#{@source_view}"  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 5]
828 parameters += "&_tag_name=#{@tag_name}" if @source_view == 'tag'  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 6]
829 @z_index_counter = @z_index_counter - 1  # for IE z-index bug  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 7]
830 @rec_depth=0 # to prevent stack overflow on large dependency trees, see _successor.html.erb  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 8]
831   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 9]
832 # invalidate the cache every day because of staleness or  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 10]
833 # rendering of "due in x days" that change without touching updated at of the todo  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 11]
834 # also make different caches per source_view to handle difference in showing [C] and [P]  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 12]
835 cache [todo, current_user.date.strftime("%Y%m%d"), @source_view, current_user.prefs.verbose_action_descriptors] do  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 13]
836   ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 14]
837 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 15]
838 sort_key(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 16]
839 dom_id(todo, 'line')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 17]
840 remote_star_icon(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 18]
841 remote_toggle_checkbox(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 19]
842 remote_edit_button(todo) unless suppress_edit_button  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 20]
843 @z_index_counter  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 21]
844 image_tag "downarrow.png", :class => "todo-submenu", :alt=> ""  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 22]
845 dom_id(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 23]
846 remote_delete_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 24]
847 unless todo.completed? || todo.deferred?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 25]
848 remote_defer_menu_item(1, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 26]
849 remote_defer_menu_item(2, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 27]
850 remote_defer_menu_item(3, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 28]
851 remote_defer_menu_item(7, todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 29]
852 remote_promote_to_project_menu_item(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 30]
853 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 31]
854 grip_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 32]
855 staleness_class( todo )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 33]
856 date_span(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 34]
857 h todo.description  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 35]
858 image_tag_for_recurring_todo(todo) if todo.from_recurring_todo?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 36]
859 tag_list(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 37]
860 deferred_due_date(todo)  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 38]
861 project_and_context_links( todo, parent_container_type, :suppress_context => suppress_context, :suppress_project => suppress_project )  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 39]
862 collapsed_notes_image(todo) if todo.notes.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 40]
863 collapsed_successors_image(todo) if todo.has_pending_successors  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 41]
864 attachment_image(todo) if todo.attachments.present?  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 42]
865 dom_id(todo, 'edit')  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 43]
866 #note: edit form will load here remotely  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 44]
867 end  ["../applications/pw-tracks//ruby_views/todos/_todo.html.erb", 45]
868 end  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 15]
869 will_paginate @done, paginate_options  ["../applications/pw-tracks//ruby_views/todos/all_done.html.erb", 16]
870 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 696]
871   ["../applications/pw-tracks/controllers/todos_controller.rb", 697]
872 def done_by_tag_setup  ["../applications/pw-tracks/controllers/todos_controller.rb", 698]
873 @source_view = params['_source_view'] || 'done'  ["../applications/pw-tracks/controllers/todos_controller.rb", 699]
874 @tag_name = sanitize(params[:name]) # sanitize to prevent XSS vunerability!  ["../applications/pw-tracks/controllers/todos_controller.rb", 700]
875 @page_title = t('todos.all_completed_tagged_page_title', :tag_name => @tag_name)  ["../applications/pw-tracks/controllers/todos_controller.rb", 701]
876 @tag = Tag.where(:name => @tag_name).first_or_create  ["../applications/pw-tracks/controllers/todos_controller.rb", 702]
877 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 703]
878   ["../applications/pw-tracks/controllers/todos_controller.rb", 704]
879   ["../applications/pw-tracks/controllers/todos_controller.rb", 705]
880 def tags  ["../applications/pw-tracks/controllers/todos_controller.rb", 706]
881 # TODO: limit to current_user  ["../applications/pw-tracks/controllers/todos_controller.rb", 707]
882 tags_beginning = Tag.where('name like ?', params[:term]+'%')  ["../applications/pw-tracks/controllers/todos_controller.rb", 708]
883 tags_all = Tag.where('name like ?', '%'+params[:term]+'%')  ["../applications/pw-tracks/controllers/todos_controller.rb", 709]
884 tags_all= tags_all - tags_beginning  ["../applications/pw-tracks/controllers/todos_controller.rb", 710]
885   ["../applications/pw-tracks/controllers/todos_controller.rb", 711]
886 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 712]
887 format.autocomplete { render :text => for_autocomplete(tags_beginning+tags_all, params[:term]) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 713]
888 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 714]
889 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 715]
890   ["../applications/pw-tracks/controllers/todos_controller.rb", 716]
891 def defer  ["../applications/pw-tracks/controllers/todos_controller.rb", 717]
892 @source_view = params['_source_view'] || 'todo'  ["../applications/pw-tracks/controllers/todos_controller.rb", 718]
893 numdays = params['days'].to_i  ["../applications/pw-tracks/controllers/todos_controller.rb", 719]
894   ["../applications/pw-tracks/controllers/todos_controller.rb", 720]
895 @todo = current_user.todos.find(params[:id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 721]
896 @original_item = current_user.todos.build(@todo.attributes)  # create a (unsaved) copy of the original todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 722]
897   ["../applications/pw-tracks/controllers/todos_controller.rb", 723]
898 @original_item_context_id = @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 724]
899 @todo_deferred_state_changed = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 725]
900 @new_context_created = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 726]
901 @due_date_changed = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 727]
902 @tag_was_removed = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 728]
903 @todo_hidden_state_changed = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 729]
904 @todo_was_deferred_from_active_state = @todo.show_from.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 730]
905   ["../applications/pw-tracks/controllers/todos_controller.rb", 731]
906 @todo.show_from = (@todo.show_from || @todo.user.date) + numdays.days  ["../applications/pw-tracks/controllers/todos_controller.rb", 732]
907 @saved = @todo.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 733]
908 @status_message = t('todos.action_saved_to_tickler')  ["../applications/pw-tracks/controllers/todos_controller.rb", 734]
909   ["../applications/pw-tracks/controllers/todos_controller.rb", 735]
910 determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 736]
911 determine_remaining_in_container_count(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 737]
912 source_view do |page|  ["../applications/pw-tracks/controllers/todos_controller.rb", 738]
913 page.project {  ["../applications/pw-tracks/controllers/todos_controller.rb", 739]
914 @remaining_undone_in_project = current_user.projects.find(@todo.project_id).todos.not_completed.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 740]
915 @original_item_project_id = @todo.project_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 741]
916 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 742]
917 page.tag {  ["../applications/pw-tracks/controllers/todos_controller.rb", 743]
918 determine_deferred_tag_count(params['_tag_name'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 744]
919 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 745]
920 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 746]
921   ["../applications/pw-tracks/controllers/todos_controller.rb", 747]
922 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 748]
923 format.html { redirect_to :back }  ["../applications/pw-tracks/controllers/todos_controller.rb", 749]
924 format.js {render :action => 'update'}  ["../applications/pw-tracks/controllers/todos_controller.rb", 750]
925 format.m {  ["../applications/pw-tracks/controllers/todos_controller.rb", 751]
926 notify(:notice, t("todos.action_deferred", :description => @todo.description))  ["../applications/pw-tracks/controllers/todos_controller.rb", 752]
927 do_mobile_todo_redirection  ["../applications/pw-tracks/controllers/todos_controller.rb", 753]
928 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 754]
929 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 755]
930 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 756]
931   ["../applications/pw-tracks/controllers/todos_controller.rb", 757]
932 def list_hidden  ["../applications/pw-tracks/controllers/todos_controller.rb", 758]
933 @hidden = current_user.todos.hidden  ["../applications/pw-tracks/controllers/todos_controller.rb", 759]
934 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 760]
935 format.xml {  ["../applications/pw-tracks/controllers/todos_controller.rb", 761]
936 render :xml => @hidden.to_xml( *todo_xml_params )  ["../applications/pw-tracks/controllers/todos_controller.rb", 762]
937 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 763]
938 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 764]
939 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 765]
940   ["../applications/pw-tracks/controllers/todos_controller.rb", 766]
941 def get_not_completed_for_predecessor(relation, todo_id=nil)  ["../applications/pw-tracks/controllers/todos_controller.rb", 767]
942 items = relation.todos.not_completed.  ["../applications/pw-tracks/controllers/todos_controller.rb", 768]
943 where('(LOWER(todos.description) LIKE ?)', "%#{params[:term].downcase}%")  ["../applications/pw-tracks/controllers/todos_controller.rb", 769]
944 items = items.where("AND NOT(todos.id=?)", todo_id) unless todo_id.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 770]
945   ["../applications/pw-tracks/controllers/todos_controller.rb", 771]
946 items.  ["../applications/pw-tracks/controllers/todos_controller.rb", 772]
947 includes(:context, :project).  ["../applications/pw-tracks/controllers/todos_controller.rb", 773]
948 reorder('description ASC').  ["../applications/pw-tracks/controllers/todos_controller.rb", 774]
949 limit(10)  ["../applications/pw-tracks/controllers/todos_controller.rb", 775]
950 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 776]
951   ["../applications/pw-tracks/controllers/todos_controller.rb", 777]
952 def auto_complete_for_predecessor  ["../applications/pw-tracks/controllers/todos_controller.rb", 778]
953 unless params['id'].nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 779]
954 get_todo_from_params  ["../applications/pw-tracks/controllers/todos_controller.rb", 780]
955 # Begin matching todos in current project, excluding @todo itself  ["../applications/pw-tracks/controllers/todos_controller.rb", 781]
956 @items = get_not_completed_for_predecessor(@todo.project, @todo.id) unless @todo.project.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 782]
957 # Then look in the current context, excluding @todo itself  ["../applications/pw-tracks/controllers/todos_controller.rb", 783]
958 @items = get_not_completed_for_predecessor(@todo.context, @todo.id) unless !@items.empty? || @todo.context.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 784]
959 # Match todos in other projects, excluding @todo itself  ["../applications/pw-tracks/controllers/todos_controller.rb", 785]
960 @items = get_not_completed_for_predecessor(current_user, @todo.id) unless !@items.empty?  ["../applications/pw-tracks/controllers/todos_controller.rb", 786]
961 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 787]
962 # New todo - TODO: Filter on current project in project view  ["../applications/pw-tracks/controllers/todos_controller.rb", 788]
963 @items = get_not_completed_for_predecessor(current_user)  ["../applications/pw-tracks/controllers/todos_controller.rb", 789]
964 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 790]
965 render :inline => format_dependencies_as_json_for_auto_complete(@items)  ["../applications/pw-tracks/controllers/todos_controller.rb", 791]
966 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 792]
967   ["../applications/pw-tracks/controllers/todos_controller.rb", 793]
968 def convert_to_project  ["../applications/pw-tracks/controllers/todos_controller.rb", 794]
969 todo = current_user.todos.find(params[:id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 795]
970 @project = ProjectFromTodo.new(todo).create  ["../applications/pw-tracks/controllers/todos_controller.rb", 796]
971   ["../applications/pw-tracks/controllers/todos_controller.rb", 797]
972 if @project.valid?  ["../applications/pw-tracks/controllers/todos_controller.rb", 798]
973 redirect_to project_url(@project)  ["../applications/pw-tracks/controllers/todos_controller.rb", 799]
974 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 800]
975 flash[:error] = "Could not create project from todo: #{@project.errors.full_messages[0]}"  ["../applications/pw-tracks/controllers/todos_controller.rb", 801]
976 onsite_redirect_to request.env["HTTP_REFERER"] || root_url  ["../applications/pw-tracks/controllers/todos_controller.rb", 802]
977 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 803]
978 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 804]
979   ["../applications/pw-tracks/controllers/todos_controller.rb", 805]
980 def show_notes  ["../applications/pw-tracks/controllers/todos_controller.rb", 806]
981 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 807]
982 @return_path=cookies[:mobile_url] ? cookies[:mobile_url] : mobile_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 808]
983 respond_to do |format|  ["../applications/pw-tracks/controllers/todos_controller.rb", 809]
984 format.html {  ["../applications/pw-tracks/controllers/todos_controller.rb", 810]
985 redirect_to home_path, "Viewing note of todo is not implemented"  ["../applications/pw-tracks/controllers/todos_controller.rb", 811]
986 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 812]
987 format.m   {  ["../applications/pw-tracks/controllers/todos_controller.rb", 813]
988 render :action => "show_notes"  ["../applications/pw-tracks/controllers/todos_controller.rb", 814]
989 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 815]
990 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 816]
991 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 817]
992   ["../applications/pw-tracks/controllers/todos_controller.rb", 818]
993 def attachment  ["../applications/pw-tracks/controllers/todos_controller.rb", 819]
994 id = params[:id]  ["../applications/pw-tracks/controllers/todos_controller.rb", 820]
995 filename = params[:filename]  ["../applications/pw-tracks/controllers/todos_controller.rb", 821]
996 attachment = current_user.attachments.find(id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 822]
997   ["../applications/pw-tracks/controllers/todos_controller.rb", 823]
998 if attachment  ["../applications/pw-tracks/controllers/todos_controller.rb", 824]
999 send_file(attachment.file.path,  ["../applications/pw-tracks/controllers/todos_controller.rb", 825]
1000 disposition: 'attachment',  ["../applications/pw-tracks/controllers/todos_controller.rb", 826]
1001 type: 'message/rfc822')  ["../applications/pw-tracks/controllers/todos_controller.rb", 827]
1002 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 828]
1003 head :not_found  ["../applications/pw-tracks/controllers/todos_controller.rb", 829]
1004 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 830]
1005 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 831]
1006   ["../applications/pw-tracks/controllers/todos_controller.rb", 832]
1007 private  ["../applications/pw-tracks/controllers/todos_controller.rb", 833]
1008   ["../applications/pw-tracks/controllers/todos_controller.rb", 834]
1009 def set_group_view_by  ["../applications/pw-tracks/controllers/todos_controller.rb", 835]
1010 @group_view_by = params['_group_view_by'] || cookies['group_view_by'] || 'context'  ["../applications/pw-tracks/controllers/todos_controller.rb", 836]
1011 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 837]
1012   ["../applications/pw-tracks/controllers/todos_controller.rb", 838]
1013 def do_mobile_todo_redirection  ["../applications/pw-tracks/controllers/todos_controller.rb", 839]
1014 if cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 840]
1015 old_path = cookies[:mobile_url]  ["../applications/pw-tracks/controllers/todos_controller.rb", 841]
1016 cookies[:mobile_url] = {:value => nil, :secure => SITE_CONFIG['secure_cookies']}  ["../applications/pw-tracks/controllers/todos_controller.rb", 842]
1017 onsite_redirect_to old_path  ["../applications/pw-tracks/controllers/todos_controller.rb", 843]
1018 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 844]
1019 onsite_redirect_to todos_path(:format => 'm')  ["../applications/pw-tracks/controllers/todos_controller.rb", 845]
1020 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 846]
1021 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 847]
1022   ["../applications/pw-tracks/controllers/todos_controller.rb", 848]
1023 def get_todo_from_params  ["../applications/pw-tracks/controllers/todos_controller.rb", 849]
1024 # TODO: this was a :append_before but was removed to tune performance per  ["../applications/pw-tracks/controllers/todos_controller.rb", 850]
1025 # method. Reconsider re-enabling it  ["../applications/pw-tracks/controllers/todos_controller.rb", 851]
1026 @todo = current_user.todos.find(params['id'])  ["../applications/pw-tracks/controllers/todos_controller.rb", 852]
1027 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 853]
1028   ["../applications/pw-tracks/controllers/todos_controller.rb", 854]
1029 def find_and_activate_ready  ["../applications/pw-tracks/controllers/todos_controller.rb", 855]
1030 current_user.deferred_todos.find_and_activate_ready  ["../applications/pw-tracks/controllers/todos_controller.rb", 856]
1031 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 857]
1032   ["../applications/pw-tracks/controllers/todos_controller.rb", 858]
1033 def tag_title(tag_expr)  ["../applications/pw-tracks/controllers/todos_controller.rb", 859]
1034 and_list = tag_expr.inject([]) { |s,tag_list| s << tag_list.join(',') }  ["../applications/pw-tracks/controllers/todos_controller.rb", 860]
1035 return and_list.join(' AND ')  ["../applications/pw-tracks/controllers/todos_controller.rb", 861]
1036 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 862]
1037   ["../applications/pw-tracks/controllers/todos_controller.rb", 863]
1038 def get_params_for_tag_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 864]
1039 filter_format_for_tag_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 865]
1040   ["../applications/pw-tracks/controllers/todos_controller.rb", 866]
1041 # use sanitize to prevent XSS attacks  ["../applications/pw-tracks/controllers/todos_controller.rb", 867]
1042 @tag_expr = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 868]
1043 @tag_expr << sanitize(params[:name]).split(',')  ["../applications/pw-tracks/controllers/todos_controller.rb", 869]
1044 @tag_expr << sanitize(params[:and]).split(',') if params[:and]  ["../applications/pw-tracks/controllers/todos_controller.rb", 870]
1045   ["../applications/pw-tracks/controllers/todos_controller.rb", 871]
1046 i = 1  ["../applications/pw-tracks/controllers/todos_controller.rb", 872]
1047 while params['and'+i.to_s]  ["../applications/pw-tracks/controllers/todos_controller.rb", 873]
1048 @tag_expr << sanitize(params['and'+i.to_s]).split(',')  ["../applications/pw-tracks/controllers/todos_controller.rb", 874]
1049 i=i+1  ["../applications/pw-tracks/controllers/todos_controller.rb", 875]
1050 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 876]
1051   ["../applications/pw-tracks/controllers/todos_controller.rb", 877]
1052 @single_tag = @tag_expr.size == 1 && @tag_expr[0].size == 1  ["../applications/pw-tracks/controllers/todos_controller.rb", 878]
1053 @tag_name = @tag_expr[0][0]  ["../applications/pw-tracks/controllers/todos_controller.rb", 879]
1054 @tag_title = @single_tag ? @tag_name : tag_title(@tag_expr)  ["../applications/pw-tracks/controllers/todos_controller.rb", 880]
1055 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 881]
1056   ["../applications/pw-tracks/controllers/todos_controller.rb", 882]
1057 def filter_format_for_tag_view  ["../applications/pw-tracks/controllers/todos_controller.rb", 883]
1058 # routes for tag view do not set :format  ["../applications/pw-tracks/controllers/todos_controller.rb", 884]
1059 if params[:name] =~ /.*\.m$/  ["../applications/pw-tracks/controllers/todos_controller.rb", 885]
1060 set_format_for_tag_view(:m)  ["../applications/pw-tracks/controllers/todos_controller.rb", 886]
1061 elsif params[:name] =~ /.*\.txt$/  ["../applications/pw-tracks/controllers/todos_controller.rb", 887]
1062 set_format_for_tag_view(:txt)  ["../applications/pw-tracks/controllers/todos_controller.rb", 888]
1063 # set content-type to text/plain or it remains text/html  ["../applications/pw-tracks/controllers/todos_controller.rb", 889]
1064 response.headers["Content-Type"] = 'text/plain'  ["../applications/pw-tracks/controllers/todos_controller.rb", 890]
1065 elsif params[:format].nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 891]
1066 # if no format is given, default to html  ["../applications/pw-tracks/controllers/todos_controller.rb", 892]
1067 # note that if url has ?format=m, we should not overwrite it here  ["../applications/pw-tracks/controllers/todos_controller.rb", 893]
1068 request.format = :html  ["../applications/pw-tracks/controllers/todos_controller.rb", 894]
1069 params[:format] = :html  ["../applications/pw-tracks/controllers/todos_controller.rb", 895]
1070 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 896]
1071 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 897]
1072   ["../applications/pw-tracks/controllers/todos_controller.rb", 898]
1073 def set_format_for_tag_view(format)  ["../applications/pw-tracks/controllers/todos_controller.rb", 899]
1074 # tag name ends with .m, set format to :m en remove .m from name  ["../applications/pw-tracks/controllers/todos_controller.rb", 900]
1075 request.format = format  ["../applications/pw-tracks/controllers/todos_controller.rb", 901]
1076 params[:format] = format  ["../applications/pw-tracks/controllers/todos_controller.rb", 902]
1077 params[:name] = params[:name].chomp(".#{format.to_s}")  ["../applications/pw-tracks/controllers/todos_controller.rb", 903]
1078 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 904]
1079   ["../applications/pw-tracks/controllers/todos_controller.rb", 905]
1080 def get_ids_from_tag_expr(tag_expr)  ["../applications/pw-tracks/controllers/todos_controller.rb", 906]
1081 ids = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 907]
1082 tag_expr.each do |tag_list|  ["../applications/pw-tracks/controllers/todos_controller.rb", 908]
1083 id_list = []  ["../applications/pw-tracks/controllers/todos_controller.rb", 909]
1084 tag_list.each do |tag|  ["../applications/pw-tracks/controllers/todos_controller.rb", 910]
1085 tag = Tag.where(:name => tag).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 911]
1086 id_list << tag.id if tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 912]
1087 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 913]
1088 ids << id_list  ["../applications/pw-tracks/controllers/todos_controller.rb", 914]
1089 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 915]
1090 return ids  ["../applications/pw-tracks/controllers/todos_controller.rb", 916]
1091 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 917]
1092   ["../applications/pw-tracks/controllers/todos_controller.rb", 918]
1093 def find_todos_with_tag_expr(tag_expr)  ["../applications/pw-tracks/controllers/todos_controller.rb", 919]
1094 # optimize for the common case: selecting only one tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 920]
1095 if @single_tag  ["../applications/pw-tracks/controllers/todos_controller.rb", 921]
1096 tag = Tag.where(:name => @tag_name).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 922]
1097 tag_id = tag.nil? ? -1 : tag.id  ["../applications/pw-tracks/controllers/todos_controller.rb", 923]
1098 return current_user.todos.with_tag(tag_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 924]
1099 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 925]
1100   ["../applications/pw-tracks/controllers/todos_controller.rb", 926]
1101 tag_ids = get_ids_from_tag_expr(tag_expr)  ["../applications/pw-tracks/controllers/todos_controller.rb", 927]
1102 todos = current_user.todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 928]
1103 tag_ids.each do |ids|  ["../applications/pw-tracks/controllers/todos_controller.rb", 929]
1104 todos = todos.with_tags(ids) unless ids.nil? || ids.empty?  ["../applications/pw-tracks/controllers/todos_controller.rb", 930]
1105 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 931]
1106 return todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 932]
1107 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 933]
1108   ["../applications/pw-tracks/controllers/todos_controller.rb", 934]
1109 def determine_down_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 935]
1110 source_view do |from|  ["../applications/pw-tracks/controllers/todos_controller.rb", 936]
1111 from.todo do  ["../applications/pw-tracks/controllers/todos_controller.rb", 937]
1112 @down_count = current_user.todos.active.not_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 938]
1113 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 939]
1114 from.context do  ["../applications/pw-tracks/controllers/todos_controller.rb", 940]
1115 context_id = @original_item_context_id || @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 941]
1116 todos = current_user.contexts.find(context_id).todos.not_completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 942]
1117   ["../applications/pw-tracks/controllers/todos_controller.rb", 943]
1118 if @todo.context.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 944]
1119 # include hidden todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 945]
1120 @down_count = todos.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 946]
1121 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 947]
1122 # exclude hidden_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 948]
1123 @down_count = todos.not_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 949]
1124 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 950]
1125 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 951]
1126 from.project do  ["../applications/pw-tracks/controllers/todos_controller.rb", 952]
1127 unless @todo.project_id == nil  ["../applications/pw-tracks/controllers/todos_controller.rb", 953]
1128 @down_count = current_user.projects.find(@todo.project_id).todos.active_or_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 954]
1129 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 955]
1130 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 956]
1131 from.deferred do  ["../applications/pw-tracks/controllers/todos_controller.rb", 957]
1132 @down_count = current_user.todos.deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 958]
1133 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 959]
1134 from.tag do  ["../applications/pw-tracks/controllers/todos_controller.rb", 960]
1135 @tag_name = params['_tag_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 961]
1136 @tag = Tag.where(:name => @tag_name).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 962]
1137 if @tag.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 963]
1138 @tag = Tag.new(:name => @tag_name)  ["../applications/pw-tracks/controllers/todos_controller.rb", 964]
1139 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 965]
1140 @down_count = current_user.todos.with_tag(@tag.id).active.not_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 966]
1141 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 967]
1142 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 968]
1143 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 969]
1144   ["../applications/pw-tracks/controllers/todos_controller.rb", 970]
1145 def find_todos_in_project_container(todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 971]
1146 if todo.project.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 972]
1147 # container with todos without project  ["../applications/pw-tracks/controllers/todos_controller.rb", 973]
1148 todos_in_container = current_user.todos.where(:project_id => nil)  ["../applications/pw-tracks/controllers/todos_controller.rb", 974]
1149 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 975]
1150 todos_in_container = current_user.projects.find(todo.project_id).todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 976]
1151 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 977]
1152 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 978]
1153   ["../applications/pw-tracks/controllers/todos_controller.rb", 979]
1154 def find_todos_in_container_and_target_container(todo, target_todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 980]
1155 if @group_view_by == 'context'  ["../applications/pw-tracks/controllers/todos_controller.rb", 981]
1156 todos_in_container = current_user.contexts.find(todo.context_id).todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 982]
1157 todos_in_target_container = current_user.contexts.find(@todo.context_id).todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 983]
1158 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 984]
1159 todos_in_container = find_todos_in_project_container(todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 985]
1160 todos_in_target_container = find_todos_in_project_container(@todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 986]
1161 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 987]
1162 return todos_in_container, todos_in_target_container  ["../applications/pw-tracks/controllers/todos_controller.rb", 988]
1163 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 989]
1164   ["../applications/pw-tracks/controllers/todos_controller.rb", 990]
1165 def determine_remaining_in_container_count(todo = @todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 991]
1166 source_view do |from|  ["../applications/pw-tracks/controllers/todos_controller.rb", 992]
1167 from.deferred {  ["../applications/pw-tracks/controllers/todos_controller.rb", 993]
1168 todos_in_container, todos_in_target_container = find_todos_in_container_and_target_container(todo, @todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 994]
1169 @remaining_in_context = todos_in_container.deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 995]
1170 @target_context_count = todos_in_target_container.deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 996]
1171 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 997]
1172 from.todo {  ["../applications/pw-tracks/controllers/todos_controller.rb", 998]
1173 todos_in_container, todos_in_target_container = find_todos_in_container_and_target_container(todo, @todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 999]
1174 @remaining_in_context = todos_in_container.active.not_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1000]
1175 @target_context_count = todos_in_target_container.active.not_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1001]
1176 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1002]
1177 from.tag {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1003]
1178 tag = Tag.where(:name => params['_tag_name']).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 1004]
1179 tag = Tag.new(:name => params['tag']) if tag.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1005]
1180   ["../applications/pw-tracks/controllers/todos_controller.rb", 1006]
1181 todos_in_container, todos_in_target_container = find_todos_in_container_and_target_container(todo, @todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1007]
1182   ["../applications/pw-tracks/controllers/todos_controller.rb", 1008]
1183 @remaining_in_context = todos_in_container.active.not_hidden.with_tag(tag.id).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1009]
1184 @target_context_count = todos_in_target_container.active.not_hidden.with_tag(tag.id).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1010]
1185 @remaining_hidden_count = current_user.todos.hidden.with_tag(tag.id).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1011]
1186 @remaining_deferred_or_pending_count = current_user.todos.with_tag(tag.id).deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1012]
1187 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1013]
1188 from.project {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1014]
1189 project_id = @project_changed ? @original_item_project_id : @todo.project_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1015]
1190 @remaining_deferred_or_pending_count = current_user.projects.find(project_id).todos.deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1016]
1191   ["../applications/pw-tracks/controllers/todos_controller.rb", 1017]
1192 if @todo_was_completed_from_deferred_or_blocked_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 1018]
1193 @remaining_in_context = @remaining_deferred_or_pending_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1019]
1194 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1020]
1195 @remaining_in_context = current_user.projects.find(project_id).todos.active_or_hidden.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1021]
1196 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1022]
1197   ["../applications/pw-tracks/controllers/todos_controller.rb", 1023]
1198 @target_context_count = current_user.projects.find(project_id).todos.active.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1024]
1199 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1025]
1200 from.calendar {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1026]
1201 @target_context_count = @new_due_id.blank? ? 0 : count_old_due_empty(@new_due_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1027]
1202 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1028]
1203 from.context {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1029]
1204 context = current_user.contexts.find(todo.context_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1030]
1205 @remaining_deferred_or_pending_count = context.todos.deferred_or_blocked.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1031]
1206   ["../applications/pw-tracks/controllers/todos_controller.rb", 1032]
1207 remaining_actions_in_context = context.todos(true).active  ["../applications/pw-tracks/controllers/todos_controller.rb", 1033]
1208 remaining_actions_in_context = remaining_actions_in_context.not_hidden if !context.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1034]
1209 @remaining_in_context = remaining_actions_in_context.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1035]
1210   ["../applications/pw-tracks/controllers/todos_controller.rb", 1036]
1211 if @todo_was_deferred_or_blocked  ["../applications/pw-tracks/controllers/todos_controller.rb", 1037]
1212 actions_in_target = current_user.contexts.find(@todo.context_id).todos(true).active  ["../applications/pw-tracks/controllers/todos_controller.rb", 1038]
1213 actions_in_target = actions_in_target.not_hidden if !context.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1039]
1214 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1040]
1215 actions_in_target = @todo.context.todos.deferred_or_blocked  ["../applications/pw-tracks/controllers/todos_controller.rb", 1041]
1216 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1042]
1217 @target_context_count = actions_in_target.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1043]
1218 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1044]
1219 from.done {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1045]
1220 @remaining_in_context = DoneTodos.remaining_in_container(current_user.todos, @original_completed_period)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1046]
1221 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1047]
1222 from.all_done {  ["../applications/pw-tracks/controllers/todos_controller.rb", 1048]
1223 @remaining_in_context = current_user.todos.completed.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1049]
1224 }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1050]
1225 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1051]
1226 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1052]
1227   ["../applications/pw-tracks/controllers/todos_controller.rb", 1053]
1228 def find_completed(relation, id, include_hidden)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1054]
1229 todos = relation.find(id).todos.completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 1055]
1230 todos = todos.not_hidden if !include_hidden  ["../applications/pw-tracks/controllers/todos_controller.rb", 1056]
1231 return todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 1057]
1232 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1058]
1233   ["../applications/pw-tracks/controllers/todos_controller.rb", 1059]
1234 def determine_completed_count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1060]
1235 todos=nil  ["../applications/pw-tracks/controllers/todos_controller.rb", 1061]
1236   ["../applications/pw-tracks/controllers/todos_controller.rb", 1062]
1237 source_view do |from|  ["../applications/pw-tracks/controllers/todos_controller.rb", 1063]
1238 from.todo    { todos = current_user.todos.not_hidden.completed }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1064]
1239 from.context { todos = find_completed(current_user.contexts, @todo.context_id, @todo.context.hidden?) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1065]
1240 from.project { todos = find_completed(current_user.projects, @todo.project_id, @todo.project.hidden?) unless @todo.project_id.nil? }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1066]
1241 from.tag     { todos = current_user.todos.with_tag(@tag.id).completed }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1067]
1242 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1068]
1243   ["../applications/pw-tracks/controllers/todos_controller.rb", 1069]
1244 @completed_count = todos.nil? ? 0 : todos.count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1070]
1245 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1071]
1246   ["../applications/pw-tracks/controllers/todos_controller.rb", 1072]
1247 def determine_deferred_tag_count(tag_name)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1073]
1248 tag = Tag.where(:name => tag_name).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 1074]
1249 # tag.nil? should normally not happen, but is a workaround for #929  ["../applications/pw-tracks/controllers/todos_controller.rb", 1075]
1250 @remaining_deferred_or_pending_count = tag.nil? ? 0 : current_user.todos.deferred.with_tag(tag.id).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1076]
1251 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1077]
1252   ["../applications/pw-tracks/controllers/todos_controller.rb", 1078]
1253 def check_for_next_todo(todo)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1079]
1254 # check if this todo has a related recurring_todo. If so, create next todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 1080]
1255 new_recurring_todo = nil  ["../applications/pw-tracks/controllers/todos_controller.rb", 1081]
1256 recurring_todo = nil  ["../applications/pw-tracks/controllers/todos_controller.rb", 1082]
1257 if todo.from_recurring_todo?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1083]
1258 recurring_todo = todo.recurring_todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 1084]
1259   ["../applications/pw-tracks/controllers/todos_controller.rb", 1085]
1260 # check if there are active todos belonging to this recurring todo. only  ["../applications/pw-tracks/controllers/todos_controller.rb", 1086]
1261 # add new one if all active todos are completed  ["../applications/pw-tracks/controllers/todos_controller.rb", 1087]
1262 if recurring_todo.todos.active.count == 0  ["../applications/pw-tracks/controllers/todos_controller.rb", 1088]
1263   ["../applications/pw-tracks/controllers/todos_controller.rb", 1089]
1264 # check for next todo either from the due date or the show_from date  ["../applications/pw-tracks/controllers/todos_controller.rb", 1090]
1265 date_to_check = todo.due || todo.show_from  ["../applications/pw-tracks/controllers/todos_controller.rb", 1091]
1266   ["../applications/pw-tracks/controllers/todos_controller.rb", 1092]
1267 # if both due and show_from are nil, check for a next todo from now  ["../applications/pw-tracks/controllers/todos_controller.rb", 1093]
1268 date_to_check ||= Time.zone.now  ["../applications/pw-tracks/controllers/todos_controller.rb", 1094]
1269   ["../applications/pw-tracks/controllers/todos_controller.rb", 1095]
1270 if recurring_todo.active? && recurring_todo.continues_recurring?(date_to_check)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1096]
1271   ["../applications/pw-tracks/controllers/todos_controller.rb", 1097]
1272 # shift the reference date to yesterday if date_to_check is furher in  ["../applications/pw-tracks/controllers/todos_controller.rb", 1098]
1273 # the past. This is to make sure we do not get older todos for overdue  ["../applications/pw-tracks/controllers/todos_controller.rb", 1099]
1274 # todos. I.e. checking a daily todo that is overdue with 5 days will  ["../applications/pw-tracks/controllers/todos_controller.rb", 1100]
1275 # create a new todo which is overdue by 4 days if we don't shift the  ["../applications/pw-tracks/controllers/todos_controller.rb", 1101]
1276 # date. Discard the time part in the compare. We pick yesterday so  ["../applications/pw-tracks/controllers/todos_controller.rb", 1102]
1277 # that new todos due for today will be created instead of new todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 1103]
1278 # for tomorrow.  ["../applications/pw-tracks/controllers/todos_controller.rb", 1104]
1279 date = date_to_check.at_midnight >= Time.zone.now.at_midnight ? date_to_check : Time.zone.now-1.day  ["../applications/pw-tracks/controllers/todos_controller.rb", 1105]
1280   ["../applications/pw-tracks/controllers/todos_controller.rb", 1106]
1281 new_recurring_todo = TodoFromRecurringTodo.new(current_user, recurring_todo).create(date)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1107]
1282 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1108]
1283 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1109]
1284 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1110]
1285 return new_recurring_todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 1111]
1286 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1112]
1287   ["../applications/pw-tracks/controllers/todos_controller.rb", 1113]
1288 def get_due_id_for_calendar(due)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1114]
1289 return "" if due.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1115]
1290 due_today_date = Time.zone.now  ["../applications/pw-tracks/controllers/todos_controller.rb", 1116]
1291 due_this_week_date = Time.zone.now.end_of_week  ["../applications/pw-tracks/controllers/todos_controller.rb", 1117]
1292 due_next_week_date = due_this_week_date + 7.days  ["../applications/pw-tracks/controllers/todos_controller.rb", 1118]
1293 due_this_month_date = Time.zone.now.end_of_month  ["../applications/pw-tracks/controllers/todos_controller.rb", 1119]
1294 if due <= due_today_date  ["../applications/pw-tracks/controllers/todos_controller.rb", 1120]
1295 new_due_id = "due_today"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1121]
1296 elsif due <= due_this_week_date  ["../applications/pw-tracks/controllers/todos_controller.rb", 1122]
1297 new_due_id = "due_this_week"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1123]
1298 elsif due <= due_next_week_date  ["../applications/pw-tracks/controllers/todos_controller.rb", 1124]
1299 new_due_id = "due_next_week"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1125]
1300 elsif due <= due_this_month_date  ["../applications/pw-tracks/controllers/todos_controller.rb", 1126]
1301 new_due_id = "due_this_month"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1127]
1302 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1128]
1303 new_due_id = "due_after_this_month"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1129]
1304 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1130]
1305 return new_due_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1131]
1306 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1132]
1307   ["../applications/pw-tracks/controllers/todos_controller.rb", 1133]
1308 def is_old_due_empty(id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1134]
1309 return 0 == count_old_due_empty(id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1135]
1310 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1136]
1311   ["../applications/pw-tracks/controllers/todos_controller.rb", 1137]
1312 def count_old_due_empty(id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1138]
1313 due_today_date = Time.zone.now  ["../applications/pw-tracks/controllers/todos_controller.rb", 1139]
1314 due_this_week_date = Time.zone.now.end_of_week  ["../applications/pw-tracks/controllers/todos_controller.rb", 1140]
1315 due_next_week_date = due_this_week_date + 7.days  ["../applications/pw-tracks/controllers/todos_controller.rb", 1141]
1316 due_this_month_date = Time.zone.now.end_of_month  ["../applications/pw-tracks/controllers/todos_controller.rb", 1142]
1317 case id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1143]
1318 when "due_today"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1144]
1319 return current_user.todos.not_completed.where('todos.due <= ?', due_today_date).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1145]
1320 when "due_this_week"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1146]
1321 return current_user.todos.not_completed.where('todos.due > ? AND todos.due <= ?', due_today_date, due_this_week_date).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1147]
1322 when "due_next_week"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1148]
1323 return current_user.todos.not_completed.where('todos.due > ? AND todos.due <= ?', due_this_week_date, due_next_week_date).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1149]
1324 when "due_this_month"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1150]
1325 return current_user.todos.not_completed.where('todos.due > ? AND todos.due <= ?', due_next_week_date, due_this_month_date).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1151]
1326 when "due_after_this_month"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1152]
1327 return current_user.todos.not_completed.where('todos.due > ?', due_this_month_date).count  ["../applications/pw-tracks/controllers/todos_controller.rb", 1153]
1328 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1154]
1329 raise Exception.new, "unknown due id for calendar: '#{id}'"  ["../applications/pw-tracks/controllers/todos_controller.rb", 1155]
1330 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1156]
1331 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1157]
1332   ["../applications/pw-tracks/controllers/todos_controller.rb", 1158]
1333 def cache_attributes_from_before_update  ["../applications/pw-tracks/controllers/todos_controller.rb", 1159]
1334 @original_item_context_id = @todo.context_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1160]
1335 @original_item_project_id = @todo.project_id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1161]
1336 @original_item_was_deferred = @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1162]
1337 @original_item_was_hidden = @todo.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1163]
1338 @original_item_was_pending = @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1164]
1339 @original_item_due = @todo.due  ["../applications/pw-tracks/controllers/todos_controller.rb", 1165]
1340 @original_item_due_id = get_due_id_for_calendar(@todo.due)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1166]
1341 @original_item_predecessor_list = @todo.predecessors.map{|t| t.specification}.join(', ')  ["../applications/pw-tracks/controllers/todos_controller.rb", 1167]
1342 @original_item_description = @todo.description  ["../applications/pw-tracks/controllers/todos_controller.rb", 1168]
1343 @todo_was_deferred_or_blocked = @todo.deferred? || @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1169]
1344 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1170]
1345   ["../applications/pw-tracks/controllers/todos_controller.rb", 1171]
1346 def update_project  ["../applications/pw-tracks/controllers/todos_controller.rb", 1172]
1347 @project_changed = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 1173]
1348 if params['todo']['project_id'].blank? && !params['project_name'].nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1174]
1349 if params['project_name'].blank?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1175]
1350 project = Project.null_object  ["../applications/pw-tracks/controllers/todos_controller.rb", 1176]
1351 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1177]
1352 project = current_user.projects.where(:name => params['project_name'].strip).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 1178]
1353 unless project  ["../applications/pw-tracks/controllers/todos_controller.rb", 1179]
1354 project = current_user.projects.build  ["../applications/pw-tracks/controllers/todos_controller.rb", 1180]
1355 project.name = params['project_name'].strip  ["../applications/pw-tracks/controllers/todos_controller.rb", 1181]
1356 project.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 1182]
1357 @new_project_created = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 1183]
1358 @new_container = project  ["../applications/pw-tracks/controllers/todos_controller.rb", 1184]
1359 @not_done_todos = [@todo]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1185]
1360 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1186]
1361 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1187]
1362 params["todo"]["project_id"] = project.id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1188]
1363 @project_changed = @original_item_project_id != params["todo"]["project_id"] = project.id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1189]
1364 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1190]
1365 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1191]
1366   ["../applications/pw-tracks/controllers/todos_controller.rb", 1192]
1367   ["../applications/pw-tracks/controllers/todos_controller.rb", 1193]
1368 def update_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 1194]
1369 @context_changed = false  ["../applications/pw-tracks/controllers/todos_controller.rb", 1195]
1370 if params['todo']['context_id'].blank? && params['context_name'].present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1196]
1371 @context = current_user.contexts.where(:name => params['context_name'].strip).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 1197]
1372 if @context.nil?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1198]
1373 @new_context = current_user.contexts.build  ["../applications/pw-tracks/controllers/todos_controller.rb", 1199]
1374 @new_context.name = params['context_name'].strip  ["../applications/pw-tracks/controllers/todos_controller.rb", 1200]
1375 @new_context.save  ["../applications/pw-tracks/controllers/todos_controller.rb", 1201]
1376 @new_context_created = true  ["../applications/pw-tracks/controllers/todos_controller.rb", 1202]
1377 @new_container = @new_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 1203]
1378 @not_done_todos = [@todo]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1204]
1379 @context = @new_context  ["../applications/pw-tracks/controllers/todos_controller.rb", 1205]
1380 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1206]
1381 params["todo"]["context_id"] = @context.id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1207]
1382 @context_changed = @original_item_context_id != params["todo"]["context_id"] = @context.id  ["../applications/pw-tracks/controllers/todos_controller.rb", 1208]
1383 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1209]
1384 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1210]
1385   ["../applications/pw-tracks/controllers/todos_controller.rb", 1211]
1386 def update_tags  ["../applications/pw-tracks/controllers/todos_controller.rb", 1212]
1387 if params[:tag_list]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1213]
1388 @todo.tag_with(params[:tag_list])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1214]
1389 @todo.tags(true) #force a reload for proper rendering  ["../applications/pw-tracks/controllers/todos_controller.rb", 1215]
1390 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1216]
1391 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1217]
1392   ["../applications/pw-tracks/controllers/todos_controller.rb", 1218]
1393 def parse_date_for_update(date, error_msg)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1219]
1394 begin  ["../applications/pw-tracks/controllers/todos_controller.rb", 1220]
1395 parse_date_per_user_prefs(date)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1221]
1396 rescue  ["../applications/pw-tracks/controllers/todos_controller.rb", 1222]
1397 @todo.errors[:base] << error_msg  ["../applications/pw-tracks/controllers/todos_controller.rb", 1223]
1398 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1224]
1399 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1225]
1400   ["../applications/pw-tracks/controllers/todos_controller.rb", 1226]
1401 def update_date_for_update(key)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1227]
1402 params['todo'][key] = params["todo"].has_key?(key) ? parse_date_for_update(params["todo"][key], t("todos.error.invalid_#{key}_date")) : ""  ["../applications/pw-tracks/controllers/todos_controller.rb", 1228]
1403 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1229]
1404   ["../applications/pw-tracks/controllers/todos_controller.rb", 1230]
1405 def update_due_and_show_from_dates  ["../applications/pw-tracks/controllers/todos_controller.rb", 1231]
1406 %w{ due show_from }.each {|date| update_date_for_update(date) }  ["../applications/pw-tracks/controllers/todos_controller.rb", 1232]
1407 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1233]
1408   ["../applications/pw-tracks/controllers/todos_controller.rb", 1234]
1409 def update_completed_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 1235]
1410 if params['done'] == '1' && !@todo.completed?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1236]
1411 @todo.complete!  ["../applications/pw-tracks/controllers/todos_controller.rb", 1237]
1412 @todo.activate_pending_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 1238]
1413 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1239]
1414 # strange. if checkbox is not checked, there is no 'done' in params.  ["../applications/pw-tracks/controllers/todos_controller.rb", 1240]
1415 # Therefore I've used the negation  ["../applications/pw-tracks/controllers/todos_controller.rb", 1241]
1416 if !(params['done'] == '1') && @todo.completed?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1242]
1417 @todo.activate!  ["../applications/pw-tracks/controllers/todos_controller.rb", 1243]
1418 @todo.block_successors  ["../applications/pw-tracks/controllers/todos_controller.rb", 1244]
1419 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1245]
1420 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1246]
1421   ["../applications/pw-tracks/controllers/todos_controller.rb", 1247]
1422 def update_dependencies  ["../applications/pw-tracks/controllers/todos_controller.rb", 1248]
1423 @todo.add_predecessor_list(params[:predecessor_list])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1249]
1424 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1250]
1425   ["../applications/pw-tracks/controllers/todos_controller.rb", 1251]
1426 def update_dependency_state  ["../applications/pw-tracks/controllers/todos_controller.rb", 1252]
1427 # assumes @todo.save was called so that the predecessor_list is persistent  ["../applications/pw-tracks/controllers/todos_controller.rb", 1253]
1428 if @original_item_predecessor_list != params[:predecessor_list]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1254]
1429 # Possible state change with new dependencies  ["../applications/pw-tracks/controllers/todos_controller.rb", 1255]
1430 if @todo.uncompleted_predecessors.empty?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1256]
1431 @todo.activate! if @todo.state == 'pending' # Activate pending if no uncompleted predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 1257]
1432 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1258]
1433 @todo.block! if @todo.state == 'active' # Block active if we got uncompleted predecessors  ["../applications/pw-tracks/controllers/todos_controller.rb", 1259]
1434 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1260]
1435 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1261]
1436 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1262]
1437   ["../applications/pw-tracks/controllers/todos_controller.rb", 1263]
1438 def update_attributes_of_todo  ["../applications/pw-tracks/controllers/todos_controller.rb", 1264]
1439 # TODO: duplication with todo_create_params_helper  ["../applications/pw-tracks/controllers/todos_controller.rb", 1265]
1440 @todo.attributes = params.require(:todo).permit(  ["../applications/pw-tracks/controllers/todos_controller.rb", 1266]
1441 :context_id, :project_id, :description, :notes,  ["../applications/pw-tracks/controllers/todos_controller.rb", 1267]
1442 :due, :show_from, :state)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1268]
1443 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1269]
1444   ["../applications/pw-tracks/controllers/todos_controller.rb", 1270]
1445 def determine_changes_by_this_update  ["../applications/pw-tracks/controllers/todos_controller.rb", 1271]
1446 @todo_was_activated_from_deferred_state = @todo.active? && @original_item_was_deferred  ["../applications/pw-tracks/controllers/todos_controller.rb", 1272]
1447 @todo_was_activated_from_pending_state = @todo.active? && @original_item_was_pending  ["../applications/pw-tracks/controllers/todos_controller.rb", 1273]
1448 @todo_was_deferred_from_active_state = @todo.deferred? && !@original_item_was_deferred  ["../applications/pw-tracks/controllers/todos_controller.rb", 1274]
1449 @todo_was_blocked_from_active_state = @todo.pending? && !@original_item_was_pending  ["../applications/pw-tracks/controllers/todos_controller.rb", 1275]
1450   ["../applications/pw-tracks/controllers/todos_controller.rb", 1276]
1451 @todo_deferred_state_changed = @original_item_was_deferred != @todo.deferred?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1277]
1452 @todo_pending_state_changed = @original_item_was_pending != @todo.pending?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1278]
1453 @todo_hidden_state_changed = @original_item_was_hidden != @todo.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1279]
1454   ["../applications/pw-tracks/controllers/todos_controller.rb", 1280]
1455 @due_date_changed = @original_item_due != @todo.due  ["../applications/pw-tracks/controllers/todos_controller.rb", 1281]
1456   ["../applications/pw-tracks/controllers/todos_controller.rb", 1282]
1457 source_view do |page|  ["../applications/pw-tracks/controllers/todos_controller.rb", 1283]
1458 page.calendar do  ["../applications/pw-tracks/controllers/todos_controller.rb", 1284]
1459 @old_due_empty = is_old_due_empty(@original_item_due_id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1285]
1460 @new_due_id = get_due_id_for_calendar(@todo.due)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1286]
1461 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1287]
1462 page.tag do  ["../applications/pw-tracks/controllers/todos_controller.rb", 1288]
1463 @tag_name = params['_tag_name']  ["../applications/pw-tracks/controllers/todos_controller.rb", 1289]
1464 @tag_was_removed = !@todo.has_tag?(@tag_name)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1290]
1465 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1291]
1466 page.context do  ["../applications/pw-tracks/controllers/todos_controller.rb", 1292]
1467 @todo_should_be_hidden = @todo_hidden_state_changed && @todo.hidden?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1293]
1468 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1294]
1469 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1295]
1470 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1296]
1471   ["../applications/pw-tracks/controllers/todos_controller.rb", 1297]
1472 # all completed todos [today@00:00, today@now]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1298]
1473 def get_done_today(completed_todos, includes = {:include => Todo::DEFAULT_INCLUDES})  ["../applications/pw-tracks/controllers/todos_controller.rb", 1299]
1474 start_of_this_day = Time.zone.now.beginning_of_day  ["../applications/pw-tracks/controllers/todos_controller.rb", 1300]
1475 completed_todos.completed_after(start_of_this_day).includes(includes[:include])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1301]
1476 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1302]
1477   ["../applications/pw-tracks/controllers/todos_controller.rb", 1303]
1478 def get_done_in_period(completed_todos, before, after, includes = {:include => Todo::DEFAULT_INCLUDES})  ["../applications/pw-tracks/controllers/todos_controller.rb", 1304]
1479 completed_todos.completed_before(before).completed_after(after).includes(includes[:include])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1305]
1480 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1306]
1481   ["../applications/pw-tracks/controllers/todos_controller.rb", 1307]
1482 # all completed todos [begin_of_week, start_of_today]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1308]
1483 def get_done_rest_of_week(completed_todos, includes = {:include => Todo::DEFAULT_INCLUDES})  ["../applications/pw-tracks/controllers/todos_controller.rb", 1309]
1484 get_done_in_period(completed_todos, Time.zone.now.beginning_of_day, Time.zone.now.beginning_of_week)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1310]
1485 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1311]
1486   ["../applications/pw-tracks/controllers/todos_controller.rb", 1312]
1487 # all completed todos [begin_of_month, begin_of_week]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1313]
1488 def get_done_rest_of_month(completed_todos, includes = {:include => Todo::DEFAULT_INCLUDES})  ["../applications/pw-tracks/controllers/todos_controller.rb", 1314]
1489 get_done_in_period(completed_todos, Time.zone.now.beginning_of_week, Time.zone.now.beginning_of_month)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1315]
1490 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1316]
1491   ["../applications/pw-tracks/controllers/todos_controller.rb", 1317]
1492 def get_not_done_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 1318]
1493 # TODO: refactor text feed for done todos to todos/done.text, not /todos.text?done=true  ["../applications/pw-tracks/controllers/todos_controller.rb", 1319]
1494 if params[:done]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1320]
1495 not_done_todos = current_user.todos.completed.completed_after(Time.zone.now - params[:done].to_i.days)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1321]
1496 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1322]
1497 not_done_todos = current_user.todos.active.not_hidden  ["../applications/pw-tracks/controllers/todos_controller.rb", 1323]
1498 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1324]
1499   ["../applications/pw-tracks/controllers/todos_controller.rb", 1325]
1500 not_done_todos = not_done_todos.  ["../applications/pw-tracks/controllers/todos_controller.rb", 1326]
1501 reorder("todos.due IS NULL, todos.due ASC, todos.created_at ASC").  ["../applications/pw-tracks/controllers/todos_controller.rb", 1327]
1502 includes(Todo::DEFAULT_INCLUDES)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1328]
1503   ["../applications/pw-tracks/controllers/todos_controller.rb", 1329]
1504 not_done_todos = not_done_todos.limit(sanitize(params[:limit])) if params[:limit]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1330]
1505   ["../applications/pw-tracks/controllers/todos_controller.rb", 1331]
1506 if params[:due]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1332]
1507 due_within_when = Time.zone.now + params['due'].to_i.days  ["../applications/pw-tracks/controllers/todos_controller.rb", 1333]
1508 not_done_todos = not_done_todos.where('todos.due <= ?', due_within_when)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1334]
1509 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1335]
1510   ["../applications/pw-tracks/controllers/todos_controller.rb", 1336]
1511 if params[:tag]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1337]
1512 tag = Tag.where(:name => params['tag']).first  ["../applications/pw-tracks/controllers/todos_controller.rb", 1338]
1513 not_done_todos = not_done_todos.where('taggings.tag_id = ?', tag.id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1339]
1514 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1340]
1515   ["../applications/pw-tracks/controllers/todos_controller.rb", 1341]
1516 if params[:context_id]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1342]
1517 context = current_user.contexts.find(params[:context_id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1343]
1518 not_done_todos = not_done_todos.where('context_id' => context.id)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1344]
1519 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1345]
1520   ["../applications/pw-tracks/controllers/todos_controller.rb", 1346]
1521 if params[:project_id]  ["../applications/pw-tracks/controllers/todos_controller.rb", 1347]
1522 project = current_user.projects.find(params[:project_id])  ["../applications/pw-tracks/controllers/todos_controller.rb", 1348]
1523 not_done_todos = not_done_todos.where('project_id' => project)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1349]
1524 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1350]
1525   ["../applications/pw-tracks/controllers/todos_controller.rb", 1351]
1526 return not_done_todos  ["../applications/pw-tracks/controllers/todos_controller.rb", 1352]
1527 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1353]
1528   ["../applications/pw-tracks/controllers/todos_controller.rb", 1354]
1529 def onsite_redirect_to(destination)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1355]
1530 uri = URI.parse(destination)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1356]
1531   ["../applications/pw-tracks/controllers/todos_controller.rb", 1357]
1532 if uri.query.present?  ["../applications/pw-tracks/controllers/todos_controller.rb", 1358]
1533 redirect_to("#{uri.path}?#{uri.query}")  ["../applications/pw-tracks/controllers/todos_controller.rb", 1359]
1534 else  ["../applications/pw-tracks/controllers/todos_controller.rb", 1360]
1535 redirect_to(uri.path)  ["../applications/pw-tracks/controllers/todos_controller.rb", 1361]
1536 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1362]
1537 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1363]
1538   ["../applications/pw-tracks/controllers/todos_controller.rb", 1364]
1539 end  ["../applications/pw-tracks/controllers/todos_controller.rb", 1365]
LENGTH: 218
1 class UsersController < ApplicationController  ["../applications/pw-tracks/controllers/users_controller.rb", 1]
2   ["../applications/pw-tracks/controllers/users_controller.rb", 2]
3 before_filter :admin_login_required, :only => [ :index, :show, :destroy ]  ["../applications/pw-tracks/controllers/users_controller.rb", 3]
4 skip_before_filter :login_required, :only => [ :new, :create ]  ["../applications/pw-tracks/controllers/users_controller.rb", 4]
5 prepend_before_filter :login_optional, :only => [ :new, :create ]  ["../applications/pw-tracks/controllers/users_controller.rb", 5]
6   ["../applications/pw-tracks/controllers/users_controller.rb", 6]
7 # GET /users GET /users.xml  ["../applications/pw-tracks/controllers/users_controller.rb", 7]
8 def index  ["../applications/pw-tracks/controllers/users_controller.rb", 8]
9 respond_to do |format|  ["../applications/pw-tracks/controllers/users_controller.rb", 9]
10 format.html do  ["../applications/pw-tracks/controllers/users_controller.rb", 10]
11 @page_title = "TRACKS::Manage Users"  ["../applications/pw-tracks/controllers/users_controller.rb", 11]
12 @users = User.order('login ASC').paginate :page => params[:page]  ["../applications/pw-tracks/controllers/users_controller.rb", 12]
13 @total_users = User.count  ["../applications/pw-tracks/controllers/users_controller.rb", 13]
14 # When we call users/signup from the admin page we store the URL so that  ["../applications/pw-tracks/controllers/users_controller.rb", 14]
15 # we get returned here when signup is successful  ["../applications/pw-tracks/controllers/users_controller.rb", 15]
16 store_location  ["../applications/pw-tracks/controllers/users_controller.rb", 16]
17 end  ["../applications/pw-tracks/controllers/users_controller.rb", 17]
18 format.xml do  ["../applications/pw-tracks/controllers/users_controller.rb", 18]
19 @users  = User.order('login')  ["../applications/pw-tracks/controllers/users_controller.rb", 19]
20 render :xml => @users.to_xml(:except => [ :password ])  ["../applications/pw-tracks/controllers/users_controller.rb", 20]
21 end  ["../applications/pw-tracks/controllers/users_controller.rb", 21]
22 end  ["../applications/pw-tracks/controllers/users_controller.rb", 22]
23 end  ["../applications/pw-tracks/controllers/users_controller.rb", 23]
24   ["../applications/pw-tracks/controllers/users_controller.rb", 24]
25 # GET /users/id GET /users/id.xml  ["../applications/pw-tracks/controllers/users_controller.rb", 25]
26 def show  ["../applications/pw-tracks/controllers/users_controller.rb", 26]
27 @user = User.find(params[:id])  ["../applications/pw-tracks/controllers/users_controller.rb", 27]
28 render :xml => @user.to_xml(:except => [ :password ])  ["../applications/pw-tracks/controllers/users_controller.rb", 28]
29 end  ["../applications/pw-tracks/controllers/users_controller.rb", 29]
30   ["../applications/pw-tracks/controllers/users_controller.rb", 30]
31 # GET /users/new  ["../applications/pw-tracks/controllers/users_controller.rb", 31]
32 def new  ["../applications/pw-tracks/controllers/users_controller.rb", 32]
33 @auth_types = []  ["../applications/pw-tracks/controllers/users_controller.rb", 33]
34 unless session[:cas_user]  ["../applications/pw-tracks/controllers/users_controller.rb", 34]
35 Tracks::Config.auth_schemes.each {|auth| @auth_types << [auth,auth]}  ["../applications/pw-tracks/controllers/users_controller.rb", 35]
36 else  ["../applications/pw-tracks/controllers/users_controller.rb", 36]
37 @auth_types << ['cas','cas']  ["../applications/pw-tracks/controllers/users_controller.rb", 37]
38 end  ["../applications/pw-tracks/controllers/users_controller.rb", 38]
39   ["../applications/pw-tracks/controllers/users_controller.rb", 39]
40 if User.no_users_yet?  ["../applications/pw-tracks/controllers/users_controller.rb", 40]
41 @page_title = t('users.first_user_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 41]
42 @heading = t('users.first_user_heading')  ["../applications/pw-tracks/controllers/users_controller.rb", 42]
43 @user = get_new_user  ["../applications/pw-tracks/controllers/users_controller.rb", 43]
44 elsif (@user && @user.is_admin?) || SITE_CONFIG['open_signups']  ["../applications/pw-tracks/controllers/users_controller.rb", 44]
45 @page_title = t('users.new_user_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 45]
46 @heading = t('users.new_user_heading')  ["../applications/pw-tracks/controllers/users_controller.rb", 46]
47 @user = get_new_user  ["../applications/pw-tracks/controllers/users_controller.rb", 47]
48 else # all other situations (i.e. a non-admin is logged in, or no one is logged in, but we have some users)  ["../applications/pw-tracks/controllers/users_controller.rb", 48]
49 @page_title = t('users.no_signups_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 49]
50 @admin_email = SITE_CONFIG['admin_email']  ["../applications/pw-tracks/controllers/users_controller.rb", 50]
51 render :action => "nosignup", :layout => "login"  ["../applications/pw-tracks/controllers/users_controller.rb", 51]
52 favicon_link_tag 'favicon.ico'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 1]
53 favicon_link_tag 'apple-touch-icon.png', :rel => 'apple-touch-icon', :type => 'image/png'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 2]
54 @page_title  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 3]
55 stylesheet_link_tag "application"  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 4]
56 yield  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 5]
57 return  ["../applications/pw-tracks/controllers/users_controller.rb", 52]
58 end  ["../applications/pw-tracks/controllers/users_controller.rb", 53]
59 render :layout => "login"  ["../applications/pw-tracks/controllers/users_controller.rb", 54]
60 favicon_link_tag 'favicon.ico'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 1]
61 favicon_link_tag 'apple-touch-icon.png', :rel => 'apple-touch-icon', :type => 'image/png'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 2]
62 @page_title  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 3]
63 stylesheet_link_tag "application"  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 4]
64 yield  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 5]
65 end  ["../applications/pw-tracks/controllers/users_controller.rb", 55]
66   ["../applications/pw-tracks/controllers/users_controller.rb", 56]
67 # Example usage: curl -H 'Accept: application/xml' -H 'Content-Type:  ["../applications/pw-tracks/controllers/users_controller.rb", 57]
68 # application/xml'  ["../applications/pw-tracks/controllers/users_controller.rb", 58]
69 #               -u admin:up2n0g00d  ["../applications/pw-tracks/controllers/users_controller.rb", 59]
70 #               -d '<request><login>username</login><password>abc123</password></request>'  ["../applications/pw-tracks/controllers/users_controller.rb", 60]
71 #               http://our.tracks.host/users  ["../applications/pw-tracks/controllers/users_controller.rb", 61]
72 #  ["../applications/pw-tracks/controllers/users_controller.rb", 62]
73 # POST /users POST /users.xml  ["../applications/pw-tracks/controllers/users_controller.rb", 63]
74 def create  ["../applications/pw-tracks/controllers/users_controller.rb", 64]
75 if params['exception']  ["../applications/pw-tracks/controllers/users_controller.rb", 65]
76 render_failure "Expected post format is valid xml like so: <user><login>username</login><password>abc123</password></user>."  ["../applications/pw-tracks/controllers/users_controller.rb", 66]
77 return  ["../applications/pw-tracks/controllers/users_controller.rb", 67]
78 end  ["../applications/pw-tracks/controllers/users_controller.rb", 68]
79   ["../applications/pw-tracks/controllers/users_controller.rb", 69]
80 respond_to do |format|  ["../applications/pw-tracks/controllers/users_controller.rb", 70]
81 format.html do  ["../applications/pw-tracks/controllers/users_controller.rb", 71]
82 unless User.no_users_yet? || (@user && @user.is_admin?) || SITE_CONFIG['open_signups']  ["../applications/pw-tracks/controllers/users_controller.rb", 72]
83 @page_title = t('users.no_signups_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 73]
84 @admin_email = SITE_CONFIG['admin_email']  ["../applications/pw-tracks/controllers/users_controller.rb", 74]
85 render :action => "nosignup", :layout => "login"  ["../applications/pw-tracks/controllers/users_controller.rb", 75]
86 favicon_link_tag 'favicon.ico'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 1]
87 favicon_link_tag 'apple-touch-icon.png', :rel => 'apple-touch-icon', :type => 'image/png'  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 2]
88 @page_title  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 3]
89 stylesheet_link_tag "application"  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 4]
90 yield  ["../applications/pw-tracks//ruby_views/layouts/login.html.erb", 5]
91 return  ["../applications/pw-tracks/controllers/users_controller.rb", 76]
92 end  ["../applications/pw-tracks/controllers/users_controller.rb", 77]
93   ["../applications/pw-tracks/controllers/users_controller.rb", 78]
94 user = User.new(user_params)  ["../applications/pw-tracks/controllers/users_controller.rb", 79]
95   ["../applications/pw-tracks/controllers/users_controller.rb", 80]
96 unless user.valid?  ["../applications/pw-tracks/controllers/users_controller.rb", 81]
97 session['new_user'] = user  ["../applications/pw-tracks/controllers/users_controller.rb", 82]
98 redirect_to signup_path  ["../applications/pw-tracks/controllers/users_controller.rb", 83]
99 return  ["../applications/pw-tracks/controllers/users_controller.rb", 84]
100 end  ["../applications/pw-tracks/controllers/users_controller.rb", 85]
101   ["../applications/pw-tracks/controllers/users_controller.rb", 86]
102 signup_by_admin = true if (@user && @user.is_admin?)  ["../applications/pw-tracks/controllers/users_controller.rb", 87]
103 first_user_signing_up = User.no_users_yet?  ["../applications/pw-tracks/controllers/users_controller.rb", 88]
104 user.is_admin = true if first_user_signing_up  ["../applications/pw-tracks/controllers/users_controller.rb", 89]
105 if user.save  ["../applications/pw-tracks/controllers/users_controller.rb", 90]
106 @user = User.authenticate(user.login, params['user']['password'])  ["../applications/pw-tracks/controllers/users_controller.rb", 91]
107 @user.create_preference({:locale => I18n.locale})  ["../applications/pw-tracks/controllers/users_controller.rb", 92]
108 @user.save  ["../applications/pw-tracks/controllers/users_controller.rb", 93]
109 session['user_id'] = @user.id unless signup_by_admin  ["../applications/pw-tracks/controllers/users_controller.rb", 94]
110 notify :notice, t('users.signup_successful', :username => @user.login)  ["../applications/pw-tracks/controllers/users_controller.rb", 95]
111 redirect_back_or_home  ["../applications/pw-tracks/controllers/users_controller.rb", 96]
112 end  ["../applications/pw-tracks/controllers/users_controller.rb", 97]
113 return  ["../applications/pw-tracks/controllers/users_controller.rb", 98]
114 end  ["../applications/pw-tracks/controllers/users_controller.rb", 99]
115 format.xml do  ["../applications/pw-tracks/controllers/users_controller.rb", 100]
116 unless current_user && current_user.is_admin  ["../applications/pw-tracks/controllers/users_controller.rb", 101]
117 render :text => "401 Unauthorized: Only admin users are allowed access to this function.", :status => 401  ["../applications/pw-tracks/controllers/users_controller.rb", 102]
118 return  ["../applications/pw-tracks/controllers/users_controller.rb", 103]
119 end  ["../applications/pw-tracks/controllers/users_controller.rb", 104]
120 unless check_create_user_params  ["../applications/pw-tracks/controllers/users_controller.rb", 105]
121 render_failure "Expected post format is valid xml like so: <user><login>username</login><password>abc123</password></user>.", 400  ["../applications/pw-tracks/controllers/users_controller.rb", 106]
122 return  ["../applications/pw-tracks/controllers/users_controller.rb", 107]
123 end  ["../applications/pw-tracks/controllers/users_controller.rb", 108]
124 user = User.new(user_params)  ["../applications/pw-tracks/controllers/users_controller.rb", 109]
125 user.password_confirmation = user_params[:password]  ["../applications/pw-tracks/controllers/users_controller.rb", 110]
126 saved = user.save  ["../applications/pw-tracks/controllers/users_controller.rb", 111]
127 unless user.new_record?  ["../applications/pw-tracks/controllers/users_controller.rb", 112]
128 render :text => t('users.user_created'), :status => 200  ["../applications/pw-tracks/controllers/users_controller.rb", 113]
129 else  ["../applications/pw-tracks/controllers/users_controller.rb", 114]
130 render_failure user.errors.to_xml, 409  ["../applications/pw-tracks/controllers/users_controller.rb", 115]
131 end  ["../applications/pw-tracks/controllers/users_controller.rb", 116]
132 return  ["../applications/pw-tracks/controllers/users_controller.rb", 117]
133 end  ["../applications/pw-tracks/controllers/users_controller.rb", 118]
134 end  ["../applications/pw-tracks/controllers/users_controller.rb", 119]
135 end  ["../applications/pw-tracks/controllers/users_controller.rb", 120]
136   ["../applications/pw-tracks/controllers/users_controller.rb", 121]
137 # DELETE /users/id DELETE /users/id.xml  ["../applications/pw-tracks/controllers/users_controller.rb", 122]
138 def destroy  ["../applications/pw-tracks/controllers/users_controller.rb", 123]
139 @deleted_user = User.find(params[:id])  ["../applications/pw-tracks/controllers/users_controller.rb", 124]
140 @saved = @deleted_user.destroy  ["../applications/pw-tracks/controllers/users_controller.rb", 125]
141 @total_users = User.count  ["../applications/pw-tracks/controllers/users_controller.rb", 126]
142   ["../applications/pw-tracks/controllers/users_controller.rb", 127]
143 respond_to do |format|  ["../applications/pw-tracks/controllers/users_controller.rb", 128]
144 format.html do  ["../applications/pw-tracks/controllers/users_controller.rb", 129]
145 if @saved  ["../applications/pw-tracks/controllers/users_controller.rb", 130]
146 notify :notice, t('users.successfully_deleted_user', :username => @deleted_user.login)  ["../applications/pw-tracks/controllers/users_controller.rb", 131]
147 else  ["../applications/pw-tracks/controllers/users_controller.rb", 132]
148 notify :error, t('users.failed_to_delete_user', :username => @deleted_user.login)  ["../applications/pw-tracks/controllers/users_controller.rb", 133]
149 end  ["../applications/pw-tracks/controllers/users_controller.rb", 134]
150 redirect_to users_url  ["../applications/pw-tracks/controllers/users_controller.rb", 135]
151 end  ["../applications/pw-tracks/controllers/users_controller.rb", 136]
152 format.js  ["../applications/pw-tracks/controllers/users_controller.rb", 137]
153 format.xml { head :ok }  ["../applications/pw-tracks/controllers/users_controller.rb", 138]
154 end  ["../applications/pw-tracks/controllers/users_controller.rb", 139]
155 end  ["../applications/pw-tracks/controllers/users_controller.rb", 140]
156   ["../applications/pw-tracks/controllers/users_controller.rb", 141]
157 def change_password  ["../applications/pw-tracks/controllers/users_controller.rb", 142]
158 @page_title = t('users.change_password_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 143]
159 end  ["../applications/pw-tracks/controllers/users_controller.rb", 144]
160   ["../applications/pw-tracks/controllers/users_controller.rb", 145]
161 def update_password  ["../applications/pw-tracks/controllers/users_controller.rb", 146]
162 # is used for focing password change after sha->bcrypt upgrade  ["../applications/pw-tracks/controllers/users_controller.rb", 147]
163 current_user.change_password(user_params[:password], user_params[:password_confirmation])  ["../applications/pw-tracks/controllers/users_controller.rb", 148]
164 notify :notice, t('users.password_updated')  ["../applications/pw-tracks/controllers/users_controller.rb", 149]
165 redirect_to preferences_path  ["../applications/pw-tracks/controllers/users_controller.rb", 150]
166 rescue Exception => error  ["../applications/pw-tracks/controllers/users_controller.rb", 151]
167 notify :error, error.message  ["../applications/pw-tracks/controllers/users_controller.rb", 152]
168 redirect_to change_password_user_path(current_user)  ["../applications/pw-tracks/controllers/users_controller.rb", 153]
169 end  ["../applications/pw-tracks/controllers/users_controller.rb", 154]
170   ["../applications/pw-tracks/controllers/users_controller.rb", 155]
171 def change_auth_type  ["../applications/pw-tracks/controllers/users_controller.rb", 156]
172 @page_title = t('users.change_auth_type_title')  ["../applications/pw-tracks/controllers/users_controller.rb", 157]
173 end  ["../applications/pw-tracks/controllers/users_controller.rb", 158]
174   ["../applications/pw-tracks/controllers/users_controller.rb", 159]
175 def update_auth_type  ["../applications/pw-tracks/controllers/users_controller.rb", 160]
176 current_user.auth_type = user_params[:auth_type]  ["../applications/pw-tracks/controllers/users_controller.rb", 161]
177 if current_user.save  ["../applications/pw-tracks/controllers/users_controller.rb", 162]
178 notify :notice, t('users.auth_type_updated')  ["../applications/pw-tracks/controllers/users_controller.rb", 163]
179 redirect_to preferences_path  ["../applications/pw-tracks/controllers/users_controller.rb", 164]
180 else  ["../applications/pw-tracks/controllers/users_controller.rb", 165]
181 notify :warning, t('users.auth_type_update_error', :error_messages => current_user.errors.full_messages.join(', '))  ["../applications/pw-tracks/controllers/users_controller.rb", 166]
182 redirect_to change_auth_type_user_path(current_user)  ["../applications/pw-tracks/controllers/users_controller.rb", 167]
183 end  ["../applications/pw-tracks/controllers/users_controller.rb", 168]
184 end  ["../applications/pw-tracks/controllers/users_controller.rb", 169]
185   ["../applications/pw-tracks/controllers/users_controller.rb", 170]
186 def refresh_token  ["../applications/pw-tracks/controllers/users_controller.rb", 171]
187 current_user.generate_token  ["../applications/pw-tracks/controllers/users_controller.rb", 172]
188 current_user.save!  ["../applications/pw-tracks/controllers/users_controller.rb", 173]
189 notify :notice, t('users.new_token_generated')  ["../applications/pw-tracks/controllers/users_controller.rb", 174]
190 redirect_to preferences_path  ["../applications/pw-tracks/controllers/users_controller.rb", 175]
191 end  ["../applications/pw-tracks/controllers/users_controller.rb", 176]
192   ["../applications/pw-tracks/controllers/users_controller.rb", 177]
193 private  ["../applications/pw-tracks/controllers/users_controller.rb", 178]
194   ["../applications/pw-tracks/controllers/users_controller.rb", 179]
195 def user_params  ["../applications/pw-tracks/controllers/users_controller.rb", 180]
196 params.require(:user).permit(:login, :first_name, :last_name, :password_confirmation, :password, :auth_type, :open_id_url)  ["../applications/pw-tracks/controllers/users_controller.rb", 181]
197 end  ["../applications/pw-tracks/controllers/users_controller.rb", 182]
198   ["../applications/pw-tracks/controllers/users_controller.rb", 183]
199 def get_new_user  ["../applications/pw-tracks/controllers/users_controller.rb", 184]
200 if session['new_user']  ["../applications/pw-tracks/controllers/users_controller.rb", 185]
201 user = session['new_user']  ["../applications/pw-tracks/controllers/users_controller.rb", 186]
202 session['new_user'] = nil  ["../applications/pw-tracks/controllers/users_controller.rb", 187]
203 else  ["../applications/pw-tracks/controllers/users_controller.rb", 188]
204 user = User.new  ["../applications/pw-tracks/controllers/users_controller.rb", 189]
205 end  ["../applications/pw-tracks/controllers/users_controller.rb", 190]
206 user  ["../applications/pw-tracks/controllers/users_controller.rb", 191]
207 end  ["../applications/pw-tracks/controllers/users_controller.rb", 192]
208   ["../applications/pw-tracks/controllers/users_controller.rb", 193]
209 def check_create_user_params  ["../applications/pw-tracks/controllers/users_controller.rb", 194]
210 return false unless params.has_key?(:user)  ["../applications/pw-tracks/controllers/users_controller.rb", 195]
211 return false unless params[:user].has_key?(:login)  ["../applications/pw-tracks/controllers/users_controller.rb", 196]
212 return false if params[:user][:login].empty?  ["../applications/pw-tracks/controllers/users_controller.rb", 197]
213 return false unless params[:user].has_key?(:password)  ["../applications/pw-tracks/controllers/users_controller.rb", 198]
214 return false if params[:user][:password].empty?  ["../applications/pw-tracks/controllers/users_controller.rb", 199]
215 return true  ["../applications/pw-tracks/controllers/users_controller.rb", 200]
216 end  ["../applications/pw-tracks/controllers/users_controller.rb", 201]
217   ["../applications/pw-tracks/controllers/users_controller.rb", 202]
218 end  ["../applications/pw-tracks/controllers/users_controller.rb", 203]
